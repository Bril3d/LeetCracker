{"problemName":"longest-uploaded-prefix","language":"cpp","code":"typedef long long int ll;\nclass BIT\n{\n    ll n;\n    vector<ll> b;\n\npublic:\n    BIT(ll _n)\n    {\n        this->n = _n + 1;\n        b.assign(this->n, 0);\n    }\n    void update(ll idx, ll x)\n    {\n        for (; idx < n; idx += (idx & (-idx)))\n            b[idx] += x;\n    }\n    ll sum(ll idx)\n    {\n        ll sum = 0;\n        for (; idx > 0; idx -= (idx & (-idx)))\n            sum += b[idx];\n        return sum;\n    }\n};\nclass LUPrefix {\npublic:\n    BIT *bit;\n    int N;\n    LUPrefix(int n) {\n        N = n + 5;\n        bit = new BIT(N);\n    }\n    \n    void upload(int video) {\n        bit->update(video, 1);\n    }\n    \n    int longest() {\n        int lo = 1, hi = N, ans = 0;\n        while(lo <= hi){\n            int mid = (lo + hi)/2;\n            // cout<<mid<<\" \"<<bit->sum(mid)<<endl;\n            if(bit->sum(mid) == mid){\n                ans = mid;\n                lo = mid + 1;\n            }else{\n                hi = mid - 1;\n            }\n        }\n        return ans;        \n    }\n};\n\n/**\n * Your LUPrefix object will be instantiated and called as such:\n * LUPrefix* obj = new LUPrefix(n);\n * obj->upload(video);\n * int param_2 = obj->longest();\n */"}