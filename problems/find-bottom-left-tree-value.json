{"problemName":"find-bottom-left-tree-value","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findBottomLeftValue(TreeNode* root) {\n        if(root== NULL)return 0;\n        queue<TreeNode *> q;\n        q.push(root);\n        int ans = 0;\n        while(!q.empty()){\n            ans = q.front()->val;\n            int n = q.size();\n            for(int i = 0;i<n;i++){\n                TreeNode * front = q.front();\n                q.pop();\n                if(front->left)\n                    q.push(front->left);\n                if(front->right)\n                    q.push(front->right);\n            }\n        }\n        return ans;\n    }\n};"}