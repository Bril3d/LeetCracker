{"problemName":"sum-of-subarray-ranges","language":"cpp","code":"class Solution {\npublic:\n    long long subArrayRanges(vector<int>& nums) {\n        unsigned long long int leftSum=0,rightSum=0;\n        stack<long long> leftSt,rihgtSt;\n        vector< unsigned long long int> left(nums.size(),0),right(nums.size(),0);\n        \n        //max sum\n        \n        for(int i=0;i<nums.size();i++){ left[i]=0;right[i]=0;}\n        \n        for(int i=0;i<nums.size();i++){\n            while(leftSt.size()&&nums[leftSt.top()]<nums[i]){\n                left[i]=i-leftSt.top();\n                leftSt.pop();\n            }\n            if(!leftSt.size()) left[i]=i;\n            else left[i]=i-leftSt.top()-1;\n            leftSt.push(i);\n        }\n        \n        for(int i=nums.size()-1;i>=0;i--){\n            while(rihgtSt.size()&&nums[rihgtSt.top()]<=nums[i]){\n                rihgtSt.pop();\n            }\n            if(!rihgtSt.size()) right[i]=nums.size()-1-i;\n            else right[i]=rihgtSt.top()-i-1;\n            rihgtSt.push(i);\n        }\n        \n        for(int i=0;i<nums.size();i++){\n            leftSum+=nums[i]*(left[i]+1)*(right[i]+1);\n        }\n        //  for(auto i:left) cout<<i<<\" \";\n        // cout<<endl;\n        // for(auto i:right) cout<<i<<\" \";\n        // cout<<endl;\n        \n        while(leftSt.size()) leftSt.pop();\n        while(rihgtSt.size()) rihgtSt.pop();\n        \n//         //min sum\n        \n        for(int i=0;i<nums.size();i++){ left[i]=0;right[i]=0;}\n        \n        for(int i=0;i<nums.size();i++){\n            \n            while(leftSt.size()&&nums[leftSt.top()]>nums[i]){\n                leftSt.pop();\n            }\n            if(!leftSt.size()) left[i]=i;\n            else left[i]=i-leftSt.top()-1;\n            leftSt.push(i);\n        }\n        \n        for(int i=nums.size()-1;i>=0;i--){\n            while(rihgtSt.size()&&nums[rihgtSt.top()]>=nums[i]){\n                rihgtSt.pop();\n            }\n            if(!rihgtSt.size()) right[i]=nums.size()-1-i;\n            else right[i]=rihgtSt.top()-i-1;\n            rihgtSt.push(i);\n        }\n        \n        // for(auto i:left) cout<<i<<\" \";\n        // cout<<endl;\n        // for(auto i:right) cout<<i<<\" \";\n        // cout<<endl;\n        for(int i=0;i<nums.size();i++){\n            rightSum+=nums[i]*(left[i]+1)*(right[i]+1);\n        }\n        // cout<<rightSum<<\" \"<<leftSum;\n        \n        return leftSum-rightSum;\n    }\n};"}