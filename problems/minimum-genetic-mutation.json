{"problemName":"minimum-genetic-mutation","language":"cpp","code":"class Solution {\npublic:\n    \n    \n    int helper(string startGene, string &endGene, vector<string>& bank,int k=0){\n        // cout<<k<<\" \";\n        if(startGene==endGene) return 0;\n        if(k>=bank.size()) return INT_MAX/2;\n        \n        \n        int ans=INT_MAX/2;\n        for(auto i:bank){\n            int cnt=0;\n            for(int ii=0;ii<8;ii++){\n                if(i[ii]!=startGene[ii]) cnt++;\n            }\n            // cout<<i<<\" \"<<startGene<<\" \"<<cnt<<\" \";\n            if(cnt==1){\n                ans=min(ans,1+helper(i,endGene,bank,k+1));\n            }\n            \n        }\n        return ans;\n    }\n    \n    int minMutation(string startGene, string endGene, vector<string>& bank) {\n        \n        int ans=helper(startGene,endGene,bank);\n        return ans>=INT_MAX/2?-1:ans;\n        \n    }\n};"}