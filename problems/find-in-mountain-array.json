{"problemName":"find-in-mountain-array","language":"cpp","code":"/**\n * // This is the MountainArray's API interface.\n * // You should not implement it, or speculate about its implementation\n * class MountainArray {\n *   public:\n *     int get(int index);\n *     int length();\n * };\n */\n\nclass Solution {\npublic:\n    int bs(int target, MountainArray &arr, int lo, int hi){\n        while(lo <= hi){\n            int mid = (lo + hi)/2;\n            if(arr.get(mid) == target)return mid;\n            else if(arr.get(mid) > target)hi = mid - 1;\n            else lo = mid + 1;\n        }\n        return -1;\n    }\n    int bs2(int target, MountainArray &arr, int lo, int hi){\n        while(lo <= hi){\n            int mid = (lo + hi)/2;\n            if(arr.get(mid) == target)return mid;\n            else if(arr.get(mid) < target)hi = mid - 1;\n            else lo = mid + 1;\n        }\n        return -1;\n    }\n    int findInMountainArray(int target, MountainArray &arr) {\n        int n = arr.length();\n        int ans = n, lo = 1, hi = n - 1;\n        while(lo <= hi){\n            int mid = (lo + hi + 1)/2;\n            if(arr.get(mid) > arr.get(mid - 1)){\n                ans = mid;\n                lo = mid + 1;\n            }else{\n                hi = mid - 1;\n            }\n        }\n        int a = bs(target, arr, 0, ans);\n        int b = bs2(target, arr, ans + 1, n - 1);\n        if(a != -1)return a;\n        if(b != -1)return b;\n        return -1;\n    }\n};"}