{"problemName":"binary-tree-maximum-path-sum","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode * root, int &maxi){\n        if(root == NULL)return 0;\n        int l = max(0, helper(root->left, maxi));\n        int r = max(0, helper(root->right, maxi));\n        maxi = max(maxi ,root->val + l + r);\n        return root->val + max(l,r);\n    }\n    int maxPathSum(TreeNode* root) {\n        if(root == NULL)return 0;\n        int maxi = INT_MIN;\n        helper(root, maxi);\n        return maxi;\n    }\n};"}