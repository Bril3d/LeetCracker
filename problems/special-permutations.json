{"problemName":"special-permutations","language":"cpp","code":"const int MOD = 1e9 + 7;\nint dp[15][(1<<15)];\nclass Solution {\npublic:\n    int helper(vector<int> &nums, int prev, int mask){\n        if(__builtin_popcount(mask) == nums.size()){\n            return 1;\n        }\n        if(dp[prev + 1][mask] != -1)return dp[prev + 1][mask];\n        int ans = 0;\n        for(int i = 0; i < nums.size(); i++){\n            if((mask & (1<<i))){\n                continue;\n            }\n            if(prev == -1){\n                ans += helper(nums, i, (mask | (1<<i)));\n                ans %= MOD;\n            }else{\n                if(nums[i]%nums[prev] == 0 || nums[prev]%nums[i] == 0){\n                    ans += helper(nums, i, (mask | (1 << i)));\n                    ans %= MOD;\n                }\n            }\n        }\n        return dp[prev + 1][mask] = ans%MOD;\n    }\n    int specialPerm(vector<int>& nums) {\n        int ans = 0;\n        memset(dp, -1, sizeof dp);\n        return helper(nums, -1, 0);\n    }\n};"}