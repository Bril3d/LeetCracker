{"problemName":"course-schedule","language":"cpp","code":"class Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        \n        vector<int> inDegree(numCourses, 0);\n        for(auto i : prerequisites){\n            inDegree[i[1]] ++;\n        }\n        vector<vector<int>> adj(numCourses);\n        for(auto i : prerequisites){\n            adj[i[0]].push_back(i[1]);\n            adj[i[1]].push_back(i[0]);\n        }\n        queue<int> q;\n        for(int i = 0; i <inDegree.size();i++){\n            if(inDegree[i] == 0){\n                q.push(i);\n            }\n        }\n        \n        int cnt = 0;\n        while(!q.empty()){\n            int front = q.front();\n            q.pop();\n            cnt++;\n            for(auto i : adj[front]){\n                inDegree[i] --;   \n                if(inDegree[i] == 0){\n                    q.push(i);\n                }\n            }\n        }\n        return cnt == numCourses;\n    }\n};"}