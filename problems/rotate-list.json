{"problemName":"rotate-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        vector<int> arr;\n        ListNode *temp = head;\n        while(temp != NULL){\n            arr.push_back(temp->val);\n            temp = temp->next;\n        }\n        if(arr.size() == 0)return nullptr;\n        k%=arr.size();\n        if(k == 0 ){\n            return head;\n        }\n        vector<int> temparr;\n        for(int i = arr.size()-k;i<arr.size();i++){\n            temparr.push_back(arr[i]);\n        }\n        ListNode *head2 = new ListNode(temparr[0]);\n        ListNode *prev = head2;\n        for(int i = 1;i<temparr.size();i++){\n            prev->next= new ListNode(temparr[i]);\n            prev = prev->next;\n        }\n        for (int i = 0; i < arr.size()-k; i++)\n        {\n            prev->next = new ListNode(arr[i]);\n            prev = prev->next;\n        }\n        return head2;\n    }\n};"}