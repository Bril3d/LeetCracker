{"problemName":"swapping-nodes-in-a-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int length(ListNode* head) {\n        int i=0;\n        ListNode* temp = head;\n        while(temp != NULL)\n        {\n            i++;\n            temp = temp->next;\n        }\n        return i;\n    }\n    ListNode* swapNodes(ListNode* head, int k) {\n        ListNode* first = NULL;\n        ListNode* sec = NULL;\n        ListNode* temp = head;\n        int n = length(head);\n        int itr = 1;\n        while(temp != NULL){ \n            if(itr == k){\n                first = temp;\n            }\n            if(itr == n - k + 1){\n                sec = temp;\n            }\n            temp = temp->next;\n            ++itr;            \n        }\n        swap(first->val, sec->val);\n        return head;\n    }\n    \n};"}