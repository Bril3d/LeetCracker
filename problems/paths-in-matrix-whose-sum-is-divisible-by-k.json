{"problemName":"paths-in-matrix-whose-sum-is-divisible-by-k","language":"cpp","code":"class Solution {\npublic:\n    const int m=1000000000+7;\n    unordered_map<string,long long> umap;\n    int helper(vector<vector<int>>& grid,int i,int j,int sum ,int &k,vector<vector<vector<int>>>& dp){\n        sum%=k;\n        if(i>=grid.size()||i<0||j>=grid[0].size()||j<0) return 0;\n        if(i==grid.size()-1&&j==grid[0].size()-1&&(sum+grid[i][j])%k==0){\n            \n            return 1;\n        } \n        if(dp[i][j][sum]!=-1) return dp[i][j][sum];\n        \n        \n        return dp[i][j][sum]=(helper(grid,i+1,j,sum+grid[i][j],k,dp)%m+helper(grid,i,j+1,sum+grid[i][j],k,dp)%m)%m;\n        \n    }\n    int numberOfPaths(vector<vector<int>>& grid, int k) {\n        vector<vector<vector<int>>> dp(grid.size()+1,vector<vector<int>>(grid[0].size()+1,vector<int>(k+1,-1)));\n        return helper(grid,0,0,0,k,dp);\n    }\n};"}