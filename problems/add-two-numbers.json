{"problemName":"add-two-numbers","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        vector<int> arr1(101, 0), arr2(101, 0), ans(101, 0);\n    int ptr = 0;\n    while (l1 != NULL)\n    {\n        arr1[ptr] = l1->val;\n        l1 = l1->next;\n        ptr++;\n    }\n    ptr = 0;\n    while (l2 != NULL)\n    {\n        arr2[ptr] = l2->val;\n        l2 = l2->next;\n        ptr++;\n    }\n    int carry = 0;\n    for (int i = 0; i < 101; i++)\n    {\n        ans[i] = arr1[i] + arr2[i] + carry;\n        carry = ans[i] / 10;\n        ans[i] %= 10;\n    }\n    int len = 0;\n    for (int i = 100; i >= 0; --i)\n    {\n        if (ans[i] != 0)\n        {\n            len = i;\n            break;\n        }\n    }\n    ListNode *root = new ListNode(ans[0]);\n    ListNode *prev = root;\n    for (int i = 1; i <= len; i++)\n    {\n        ListNode *temp = new ListNode(ans[i]);\n        prev->next = temp;\n        prev = temp;\n    }\n    return root;\n        \n    }\n};"}