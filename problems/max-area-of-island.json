{"problemName":"max-area-of-island","language":"cpp","code":"class Solution {\npublic:\n    int dfs(vector<vector<int>> &grid, int x, int y, map<pair<int, int>, int> &visited)\n    {\n        if (x < 0 or x >= grid.size() or y < 0 or y >= grid[0].size())\n            return 0;\n\n        if (grid[x][y] == 0)\n            return 0;\n        if (visited[{x, y}] == 1)\n            return 0;\n\n        visited[{x, y}] = 1;\n        int a = 0,b=0,c=0,d=0;\n        if(visited[{x-1, y}] == 0)\n            a = dfs(grid, x-1, y, visited);\n        if(visited[{x+1, y}] == 0)\n            b = dfs(grid, x+1, y, visited);\n        if(visited[{x, y - 1}] == 0)\n            c = dfs(grid,x, y - 1, visited);\n        if(visited[{x, y + 1}] == 0)\n            d = dfs(grid, x, y + 1, visited);\n        return a + b + c + d + 1;\n    }\n    int maxAreaOfIsland(vector<vector<int>> &grid)\n    {\n        int _max = 0;\n        map<pair<int, int>, int> visited;\n        for (int i = 0; i < grid.size(); i++)\n        {\n            for (int j = 0; j < grid[0].size(); j++)\n            {\n                if (grid[i][j] == 1 && visited[{i, j}] == 0)\n                {\n                    int ans = dfs(grid, i, j, visited);\n                    _max = max(_max, ans);\n                }\n            }\n        }\n        return _max;\n    }\n};"}