{"problemName":"remove-duplicates-from-sorted-list-ii","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head == NULL)return NULL;\n        map<int, int> umap;\n        ListNode *temp = head;\n        while(temp != NULL){\n            umap[temp->val]++;\n            temp = temp->next;\n        }\n        vector<int> arr;\n        for(auto i : umap){\n            if(i.second > 1) continue;\n            arr.push_back(i.first);\n        }\n        if(arr.size() == 0)return NULL;\n        \n        ListNode *head2 = new ListNode(arr[0]);\n        ListNode *prev = head2;\n        for(int i = 1;i<arr.size();i++){\n            prev->next = new ListNode(arr[i]);\n            prev = prev->next;\n        }\n        return head2; \n    }\n};"}