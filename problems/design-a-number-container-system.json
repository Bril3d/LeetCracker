{"problemName":"design-a-number-container-system","language":"cpp","code":"class NumberContainers {\npublic:\n    set<pair<int,int>> st;\n    unordered_map<int,int> umap;\n    NumberContainers() {\n        \n    }\n    \n    void change(int i, int n) {\n        if(umap.count(i)){\n            auto k=st.find({umap[i],i});\n            \n            st.erase(k);\n        }\n        umap[i]=n;\n        st.insert({n,i});\n        \n    }\n    \n    int find(int n) {\n        auto pr=st.lower_bound({n,INT_MIN});\n        if(pr==st.end()||pr->first!=n) return -1;\n        return pr->second;\n    }\n};\n\n/**\n * Your NumberContainers object will be instantiated and called as such:\n * NumberContainers* obj = new NumberContainers();\n * obj->change(index,number);\n * int param_2 = obj->find(number);\n */"}