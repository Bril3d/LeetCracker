{"problemName":"partition-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        if(head == NULL){\n            return NULL;\n        }\n        vector<int> arr1, arr2;\n        ListNode *temp = head;\n        while(temp != NULL){\n            if(temp->val < x){\n                arr1.push_back(temp->val);\n            }else{\n                arr2.push_back(temp->val);\n            }\n            temp = temp->next;\n        }\n        ListNode *head2;\n        if(arr1.size() != 0){\n            head2 = new ListNode(arr1[0]);\n            ListNode *prev = head2;\n            for(int i = 1;i<arr1.size();i++){\n                prev->next = new ListNode(arr1[i]);\n                prev = prev->next;\n            }\n            for(int i = 0;i<arr2.size();i++){\n                prev->next = new ListNode(arr2[i]);\n                prev = prev->next;\n            }\n        }else{\n            head2 = new ListNode(arr2[0]);\n            ListNode *prev = head2;\n            for(int i = 1;i<arr2.size();i++){\n                prev->next = new ListNode(arr2[i]);\n                prev = prev->next;\n            }\n        }\n        return head2;        \n    }\n};"}