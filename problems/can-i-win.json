{"problemName":"can-i-win","language":"cpp","code":"class Solution {\npublic:\n    unordered_map<int, bool> dp;\n    \n    bool solve(int mx, int des, int k) {\n        if(des <= 0) {\n           return false;\n        }\n        if(dp.count(k)) {\n            return dp[k];\n        }\n        bool ok = false;\n        for(int i = 0; i < mx; i++) {\n            if(!(k & (1 << i)) and !solve(mx, des - i - 1, k | (1 << i))) return dp[k] = true;\n        }\n        return dp[k] =  false;\n    }\n    \n    bool canIWin(int mx, int des) {\n        \n        if(des == 0 || des == 1) {\n            return true;\n        }\n        int sum = (mx * (mx + 1)) / 2;\n        if(sum < des) {\n            return false;\n        }\n        if(sum == des) {\n            return mx%2;\n        }\n        // memset(dp, -1, sizeof dp);\n        return solve(mx, des, 0);\n    }\n};"}