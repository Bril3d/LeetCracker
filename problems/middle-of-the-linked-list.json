{"problemName":"middle-of-the-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        /*ListNode* p = head;\n        int count = 0;\n        while(p!=NULL){\n            p = p->next;\n            count++;\n        }\n        ListNode *temp = head;\n        for(int i = 0;i<count/2;i++){\n            temp = temp->next;\n        }\n        return temp;*/\n        ListNode* prev= head;\n        ListNode* curr = head;\n\n        while(curr!= NULL && curr->next!=NULL){\n            prev = prev->next;\n            curr= curr->next->next;\n        }\n        return prev;\n    }\n};"}