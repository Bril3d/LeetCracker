{"problemName":"validate-binary-search-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* prev = NULL;\n    bool infix(TreeNode * root){\n        if(root == NULL)return true;\n        bool b1 = infix(root->left);\n        if(prev != NULL){\n            if(prev->val >= root->val){\n                return false;\n            }\n        }\n        prev = root;\n        bool b2 = infix(root->right);\n        return (b1 && b2);\n    }\n    bool isValidBST(TreeNode* root) {\n        return infix(root);\n    }\n};"}