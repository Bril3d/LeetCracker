{"problemName":"range-product-queries-of-powers","language":"cpp","code":"typedef long long int ll;\nconst int MOD = 1e9 + 7;\n\n    \nclass Solution {\npublic:\n    \n    ll power(ll a, ll b, ll m)\n    {\n        ll res = 1;\n        while (b > 0)\n        {\n            if (b % 2 == 1)\n                res = ((res % m) * (a % m)) % m;\n            b = b >> 1;\n            a = ((a % m) * (a % m)) % m;\n        }\n        return res % m;\n    }\n    vector<int> productQueries(int n, vector<vector<int>>& queries) {\n        ll sz = 0;\n        vector<ll> arr;\n        ll pow = 1;\n        for(int i = 0; i < 32;i++){\n            if((n & (1<<i))!=0){\n                arr.push_back(pow);\n            }\n            pow = (pow * 2)%MOD;\n        }\n        for(int i = 1; i < arr.size();i++){\n            arr[i] = ((arr[i]%MOD) * (arr[i-1]%MOD))%MOD;\n        }\n        vector<int> ans;\n        for(auto i : queries){\n            if(i[0] == 0){\n                ans.push_back(arr[i[1]]);\n            }else{\n                ll a = arr[i[1]];\n                ll b = power(arr[i[0] - 1], MOD - 2, MOD);\n                ll temp = ((a % MOD) *(b%MOD))%MOD;\n                ans.push_back(temp);\n            }\n        }\n        return ans;\n        \n    }\n};"}