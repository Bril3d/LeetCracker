{"problemName":"longest-arithmetic-subsequence","language":"cpp","code":"\nclass Solution {\npublic:\n    int longestArithSeqLength(vector<int>& nums) {\n        int n = nums.size();\n        if (n <= 2)\n            return n;\n\n        int longest = 2;\n        vector<unordered_map<int, int>> dp(n);\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                int diff = nums[i] - nums[j];\n                dp[i][diff] = dp[j].count(diff) ? dp[j][diff] + 1 : 2;\n                longest = max(longest, dp[i][diff]);\n            }\n        }\n\n        return longest;\n    }\n};"}