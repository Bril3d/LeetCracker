{"problemName":"count-palindromic-subsequences","language":"cpp","code":"class Solution {\npublic:\n    const int m=1e9+7;\n    int dp[10001][11][11][6];\n    int helper(string &s,int i,int first,int sec,int n){\n        if(n==5){ return 1;}\n        if(i>=s.length()) return 0;\n        // cout<<i<<\" \"<<first<<\" \"<<sec<<\" \"<<n<<endl;\n        if(dp[i][first][sec][n]!=-1) return dp[i][first][sec][n]%m;\n\n        long long ans=0;\n        if(n==0){\n            ans=(helper(s,i+1,s[i]-'0',sec,n+1)+helper(s,i+1,first,sec,n))%m;\n        }else if(n==1){\n            ans=(helper(s,i+1,first,s[i]-'0',n+1)+helper(s,i+1,first,sec,n))%m;\n        }else if(n==2){\n            ans=(helper(s,i+1,first,sec,n+1)+helper(s,i+1,first,sec,n))%m;\n        }else if(n==3){\n            if(s[i]-'0'==sec){\n                ans=(helper(s,i+1,first,sec,n+1)+helper(s,i+1,first,sec,n))%m;\n            }else ans=helper(s,i+1,first,sec,n)%m;\n        }else if(n==4){\n            if(s[i]-'0'==first){\n                ans=(helper(s,i+1,first,sec,n+1)%m+helper(s,i+1,first,sec,n)%m)%m;\n            }else ans=helper(s,i+1,first,sec,n)%m;\n        }\n\n        return dp[i][first][sec][n]=ans%m;\n    }\n    int countPalindromes(string s) {\n        memset(dp,-1,sizeof dp);\n\n        return helper(s,0,10,10,0);\n    }\n};"}