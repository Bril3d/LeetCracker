{"problemName":"find-right-interval","language":"cpp","code":"class Solution {\npublic:\n    vector<int> findRightInterval(vector<vector<int>>& arr) {\n        map<pair<int, int>, int> mp;\n        vector<pair<int, int>> intervals;\n        int ind = 0;\n        for(auto i : arr){\n            intervals.push_back({i[0], i[1]});\n            mp[intervals.back()] = ind++;\n        }\n        sort(intervals.begin(), intervals.end(), [&](pair<int, int> &a, pair<int, int>&b){\n            if(a.first == b.first)\n                return a.second < b.second;\n            return a.first < b.first;\n        });\n        vector<int> ans(intervals.size(), - 1);\n        for(auto i : intervals){\n            pair<int, int> p = {i.second, -1e9};\n            auto it = lower_bound(intervals.begin(), intervals.end(), p);\n            if(it != intervals.end()){\n                ans[mp[i]] = mp[*it];\n            }\n        }\n        return ans;\n    }\n};"}