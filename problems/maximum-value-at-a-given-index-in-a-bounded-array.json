{"problemName":"maximum-value-at-a-given-index-in-a-bounded-array","language":"cpp","code":"typedef long long int ll;\nclass Solution {\npublic:\n    bool check(ll n, ll ind, ll s, ll mid){\n        ll ls = 0, rs = 0;\n        ll left = (ind + 1) - mid;\n        ls = (mid * (mid + 1))/2;\n        if(left > 0){\n            ls += left;\n        }else{\n            left = abs(left);\n            ls -= (left * (left + 1))/2;\n        }\n        left = ((n - ind - 1)) - (mid - 1);\n        rs = (mid * (mid - 1))/2;\n        if(left > 0){\n            rs += left;\n        }else{\n            left = abs(left);\n            rs -= (left * (left + 1))/2;\n        }\n        // printf(\"%d %d %d\\n\", ls, rs, mid);\n        return (ls + rs <= s);\n    }\n    int maxValue(int n, int index, int maxSum) {\n        ll lo = 1, hi = 1e9, ans = -1;\n        while(lo <= hi){\n            ll mid = (lo + hi + 1)/2;\n            if(check(n, index, maxSum, mid)){\n                ans = mid;\n                lo = mid + 1;\n            }else{\n                hi = mid - 1;\n            }\n        }\n        return ans;\n    }\n};"}