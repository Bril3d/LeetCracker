{"problemName":"last-stone-weight","language":"cpp","code":"class Solution {\npublic:\n    int lastStoneWeight(vector<int>& stones) {\n        priority_queue<int> pq;\n        for(auto i : stones)pq.push(i);\n        while(pq.size() >= 2){\n            int a = pq.top();\n            pq.pop();\n            int b = pq.top();\n            pq.pop();\n            if(a != b){\n                pq.push(abs(a - b));\n            }\n        }\n        if(!pq.empty())return pq.top();\n        return 0;\n    }\n};"}