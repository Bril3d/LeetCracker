{"problemName":"count-increasing-quadruplets","language":"cpp","code":"class Solution {\npublic:\n   long long countQuadruplets(vector<int>& a) {\n        long long res = 0;\n        int n = a.size();\n        vector<vector<int>> left(n, vector<int>(n+1, 0));\n        vector<vector<int>> right(n, vector<int>(n+1, 0));\n        for (int i = 1; i < n; ++i) {\n            // new array will based on the old array\n            left[i] = left[i-1];\n            // update all the elements greater than a[i-1]\n            for (int j = a[i-1] + 1; j <= n; ++j)\n                left[i][j]++;\n        }\n        for (int i = n-2; i >= 0; --i) {\n            right[i] = right[i+1];\n            for (int j = 0; j < a[i+1]; ++j)\n                right[i][j]++;\n        }\n        for (int j = 0; j < n; ++j) {\n            for (int k = j+1; k < n; ++k) {\n                if (a[j] <= a[k]) continue;\n                // left[j][a[k]] is the count of feasible i\n                // right[k][a[j]] is the count of feasible l\n                res += left[j][a[k]] * right[k][a[j]];\n            }\n        }\n        return res;\n    }\n};"}