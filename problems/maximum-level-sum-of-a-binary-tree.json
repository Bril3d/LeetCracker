{"problemName":"maximum-level-sum-of-a-binary-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        int _max = -1e9, ans = -1;\n        int level = 1;\n        queue<TreeNode *> q;\n        q.push(root);\n        while(!q.empty()){\n            int sum = 0;\n            int n = q.size();\n            for(int i = 0; i < n; i++){\n                auto f = q.front();\n                q.pop();\n                sum += f->val;\n                if(f->left != NULL){\n                    q.push(f->left);\n                }\n                if(f->right != NULL){\n                    q.push(f->right);\n                }\n            }\n            if(sum > _max){\n                _max = sum;\n                ans = level;\n            }\n            level++;\n        }\n        return ans;\n    }\n};"}