{"problemName":"minimum-number-of-removals-to-make-mountain-array","language":"cpp","code":"class Solution {\npublic:\n    int minimumMountainRemovals(vector<int>& nums) {\n        int right[nums.size()];\n        int left[nums.size()];\n        for(int i=0;i<nums.size();i++){\n            right[i]=left[i]=1;\n        }\n        for(int i=1;i<=nums.size()-1;i++){\n            for(int j=0;j<i;j++){\n                if(nums[i]>nums[j])\n                    left[i]=max(left[i],left[j]+1);\n            }\n        }\n         for(int i=nums.size()-2;i>=0;i--){\n            for(int j=nums.size()-1;j>i;j--){\n                if(nums[j]<nums[i])\n                    right[i]=max(right[i],right[j]+1);\n            }\n        }\n        int sum=0;\n        for(int i=1;i<nums.size()-1;i++){\n            if(right[i]>1&&left[i]>1)\n                sum=max(sum,left[i]+right[i]-1);\n        }\n        return nums.size()-sum;\n    }\n};"}