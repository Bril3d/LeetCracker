{"problemName":"delete-node-in-a-bst","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(root == NULL)return root;\n        if(root->val == key){\n            if(root->left && root->right){\n                TreeNode *temp = root->right;\n                while(temp ->left){\n                    temp = temp->left;\n                }\n                root->val = temp->val;\n                root->right = deleteNode(root->right, temp->val);\n                return root;\n            }else if(root->left){\n                return root->left;\n            }else if(root->right){\n                return root->right;\n            }else{\n                delete root;\n                return NULL;\n            }\n            \n        }else if(key < root-> val){\n            root->left = deleteNode(root->left, key);\n        }else{\n            root->right = deleteNode(root->right, key);\n        }\n        return root;\n    }\n};"}