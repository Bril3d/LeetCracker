{"problemName":"employee-importance","language":"cpp","code":"/*\n// Definition for Employee.\nclass Employee {\npublic:\n    int id;\n    int importance;\n    vector<int> subordinates;\n};\n*/\n\nclass Solution {\npublic:\n    int findImportance(unordered_map<int,vector<int>>& adjLis,unordered_map<int,int>& imp,unordered_map<int,int> &visited,int emp){\n        int value=imp[emp];\n        visited[emp]++;\n        for(auto ngh:adjLis[emp]){\n            if(!visited[ngh]){\n                value+=findImportance(adjLis,imp,visited,ngh);\n            }\n        }\n        return value;\n    }\n    int getImportance(vector<Employee*> employees, int id) {\n        unordered_map<int,vector<int>> adjLis;\n        unordered_map<int,int> imp;\n        for(auto emp:employees){\n            imp[emp->id]=emp->importance;\n            for(auto ngh:emp->subordinates){\n                adjLis[emp->id].push_back(ngh);\n            }\n        }\n        \n        unordered_map<int,int> visited;\n        return findImportance(adjLis,imp,visited,id);\n        \n    }\n};"}