{"problemName":"minimum-operations-to-reduce-x-to-zero","language":"cpp","code":"class Solution {\npublic:\n    \n    \n    int minOperations(vector<int>& nums, int x) {\n        int sum = 0;\n        for(auto i : nums) {\n            sum += i;\n            \n        }\n        sum -= x;\n        int t = sum;\n        if(sum < 0) {\n            return -1;\n        }\n        \n        // for(int i = 1; i < nums.size(); i++) {\n        //     nums[i] += nums[i - 1];\n        // }\n        int i = 0;\n        int j = 0;\n        sum = 0;\n        int ans = INT_MAX;\n        while(i <  nums.size() and j < nums.size()) {\n            sum += nums[j];\n            \n            while(i <= j and sum > t) {\n                sum -= nums[i];\n                i++;\n            }\n            if(sum ==  t) {\n                ans = min(ans, (int) nums.size() - (j  -i + 1)); \n            }\n            j++;\n        }\n        if(ans == INT_MAX) return -1;\n        \n        return ans;\n    }\n};"}