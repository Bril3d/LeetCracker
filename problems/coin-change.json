{"problemName":"coin-change","language":"cpp","code":"class Solution {\npublic:\n    int coinChange(vector<int>& coins, int amount) {\n        int n = coins.size() ;\n        int dp[n  + 1][amount + 1];\n        memset(dp, -1, sizeof(dp));\n        for(int j = 0; j <= amount;j++){\n            dp[0][j] = 1e8;\n        }\n        for(int i = 0; i <=n;i++){\n            dp[i][0] = 0;\n        }\n        for(int i = 1 ;i <= n ; i++){\n            for(int j = 1; j <= amount;j++){\n                if(coins[i - 1] <= j){\n                    dp[i][j] = min(1 + dp[i][j - coins[i - 1]], dp[i-1][j]);\n                }else{\n                    dp[i][j] = dp[i-1][j];\n                }\n            }\n        }\n        return dp[n][amount] == 1e8 ? -1 : dp[n][amount];\n    }\n};"}