{"problemName":"longest-path-with-different-adjacent-characters","language":"cpp","code":"class Solution {\npublic:\n    int longestPath(vector<int>& parent, string s) {\n        int n = s.size(), res = 0;\n        vector<vector<int>> children(n, vector<int>());\n        for (int i = 1; i < n; ++i)\n            children[parent[i]].push_back(i);\n        dfs(children, s, res, 0);\n        return res;\n    }\n\n    int dfs(vector<vector<int>>& children, string& s, int& res, int i) {\n        int big1 = 0, big2 = 0;\n        for (int& j : children[i]) {\n            int cur = dfs(children, s, res, j);\n            if (s[i] == s[j]) continue;\n            if (cur > big2) big2 = cur;\n            if (big2 > big1) swap(big1, big2);\n        }\n        res = max(res, big1 + big2 + 1);\n        return big1 + 1;\n    }\n};"}