{"problemName":"minimum-operations-to-make-the-array-k-increasing","language":"cpp","code":"class Solution {\npublic:\n    int Lis2(vector<int> &a, int n) {\n    vector<int> tails(n + 1, 0);\n    int size = 0;\n\n    for (int i = 0; i < n; i++) {\n        int x = a[i];\n\n\n        int s = 0;\n        int e = size;\n        while (s < e) {\n            int mid = (s + e) / 2;\n            if (x >= tails[mid]) {\n                s = mid + 1;\n            }\n            else {\n                e = mid;\n            }\n        }\n\n        tails[s] = x;\n        if (s == size) {\n            size++;\n        }\n    }\n    return size;\n\n\n\n}\n    \n    int kIncreasing(vector<int>& v, int k) {\n       int ans = 0;\n        int n = v.size();\n        for(int i = 0; i < k; i++) {\n            vector<int> res;\n            for(int j = i; j < n; j += k) {\n                res.push_back(v[j]);\n            }\n            \n            ans += (res.size() - Lis2(res, res.size()));\n        }\n        return ans;\n    }\n};"}