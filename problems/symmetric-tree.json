{"problemName":"symmetric-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool helper(TreeNode *p, TreeNode*q){\n        if(p == NULL && q == NULL) return true;\n        if(p == NULL || q == NULL) return false;\n        if(p->val == q->val){\n            return (helper(p->right, q->left) && helper(p->left, q->right));\n        }else{\n            return false;\n        }\n    }\n    bool isSymmetric(TreeNode* root) {\n        if(root == NULL){\n            return true;\n        }\n        return helper(root->left, root->right);\n    }\n};"}