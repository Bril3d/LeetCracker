{"problemName":"build-a-matrix-with-conditions","language":"cpp","code":"class Solution {\npublic:\n    vector<int> helper(vector<vector<int>> &adj){\n        vector<int> in(adj.size(), 0);\n        for(auto i : adj){\n            for(auto j : i){\n                in[j]++;\n            }\n        }\n        queue<int> q;\n        for(int i = 1; i < adj.size(); i++){\n            if(in[i] == 0)q.push(i);\n        }\n        vector<int> ans;\n        while(!q.empty()){\n            int f = q.front();\n            q.pop();\n            for(auto i : adj[f]){\n                in[i]--;\n                if(in[i] == 0)q.push(i);\n            }\n            ans.push_back(f);\n        }\n        if(ans.size() == adj.size() - 1)\n            return ans;\n        return {};\n    }\n    vector<vector<int>> buildMatrix(int k, vector<vector<int>>& rowConditions, vector<vector<int>>& colConditions) {\n        vector<vector<int>> adj(k + 1), adj2(k + 1);\n        for(auto i : rowConditions){\n            adj[i[0]].push_back(i[1]);\n        }\n        for(auto i : colConditions){\n            adj2[i[0]].push_back(i[1]);\n        }\n        vector<int> a = helper(adj);\n        vector<int> b = helper(adj2);\n        if(a.empty() || b.empty())return {};\n        vector<vector<int>> arr(k, vector<int>(k, 0));\n        map<int, pair<int, int>> mp;\n        for(int i = 0; i < a.size(); i++){\n            mp[a[i]].first = i;\n        }\n        for(int i = 0; i < b.size(); i++){\n            mp[b[i]].second = i;\n        }\n        for(auto i : mp){\n            arr[i.second.first][i.second.second] = i.first;\n        }\n        return arr;\n    }\n};"}