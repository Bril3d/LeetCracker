{"problemName":"count-special-integers","language":"cpp","code":"const int N = 10;\nint dp[N][(1<<N) + 5][2][2];\nclass Solution {\npublic:\n    int helper(string &s, int ind, int mask, bool tight, bool start){\n        if(ind == s.length()){\n            return 1;\n        }\n        if(dp[ind][mask][tight][start] != -1)return dp[ind][mask][tight][start];\n        int ans = 0;\n        int dig = tight? s[ind] - '0': 9;\n        for(int i = 0; i <= dig; i++){\n            if((mask & (1<<i)))continue;\n            int newmask = (start && i == 0)?mask:(mask | (1 << i));\n            ans += helper(s, ind + 1, newmask, (tight & (i == dig)), (start & (i == 0)));\n        }\n        return dp[ind][mask][tight][start] = ans;\n    }\n    int countSpecialNumbers(int n) {\n        string s = to_string(n);\n        memset(dp, -1, sizeof dp);\n        return helper(s, 0, 0, true, true) - 1;\n    }\n};"}