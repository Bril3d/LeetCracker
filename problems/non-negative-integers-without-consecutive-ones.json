{"problemName":"non-negative-integers-without-consecutive-ones","language":"cpp","code":"class Solution {\npublic:\n    int findIntegers(int n) {\n        vector<int> dpZero(32), dpOne(32), dp(32);\n        dpZero[0] = dp[0] = 1;\n        for (int i = 1; i < 32; ++i) {\n            dpOne[i] = dpZero[i-1];\n            dpZero[i] = dpZero[i-1] + dpOne[i-1];\n            dp[i] = dpZero[i] + dpOne[i];\n        }\n        int ans = 0, lastBit = -1;\n        for (int k = 30; k >= 0; --k) {\n            int bit = (n >> k) & 1;\n            if (bit == 1) {\n                ans += dp[k];\n                if (lastBit == 1) return ans; // Met consecutive ones in the binary representation!\n            }\n            lastBit = bit;\n        }\n        return ans + 1; // Plus with n itself!\n    }\n};"}