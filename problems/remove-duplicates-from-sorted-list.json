{"problemName":"remove-duplicates-from-sorted-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head == NULL) return NULL;\n        ListNode *head2 = new ListNode(head->val);\n        int prev = head->val;\n        \n        ListNode* temp = head->next;\n        ListNode* temp2 = head2;\n        \n        \n        while(temp != NULL){\n            // cout<<temp->val<<\" \"<<prev<<endl;\n            if(temp->val != prev){\n                ListNode *curr = new ListNode(temp->val);\n                temp2->next = curr;\n                temp2 = temp2->next;\n                prev = temp->val;\n            }\n            temp = temp->next;\n        }\n        return head2;\n        \n    }\n};"}