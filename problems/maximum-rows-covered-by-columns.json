{"problemName":"maximum-rows-covered-by-columns","language":"cpp","code":"class Solution {\npublic:\n    int maximumRows(vector<vector<int>>& matrix, int numSelect) {\n        int n = matrix.size(), m = matrix[0].size();\n        vector<bitset<15>> arr;\n        for(int i = 00; i < n; i++){\n            bitset<15> b;\n            for(int j = 0; j < m; j++){\n                b[j] = matrix[i][j];\n            }\n            arr.push_back(b);\n        }\n        long long ans = 0;\n        for(int p = 0; p < pow(2, m);p++){\n            bitset<15> b(p);\n            if(b.count() != numSelect)continue;\n            long long t = 0;\n            for(int i =0 ;i < n; i++){\n                if((b | arr[i]) == b){\n                    t++;\n                }\n            }\n            ans = max(ans, t);\n        }\n        return ans;\n    }\n};"}