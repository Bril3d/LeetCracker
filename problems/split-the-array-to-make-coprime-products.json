{"problemName":"split-the-array-to-make-coprime-products","language":"cpp","code":"class Solution {\npublic:\n    int findValidSplit(vector<int>& nums) {\n        unordered_map<long long ,unordered_set<int> > umap;\n        for(int ii=0;ii<nums.size();ii++){\n            int k=2;\n            int n=nums[ii];\n            for (int i = 2; n > 1 && i < 1000; i += 1 + (i % 2))\n            if (n % i == 0) {\n                umap[ii].insert(i);\n                while(n % i == 0)\n                    n /= i;\n            }\n            if (n > 1)\n                umap[ii].insert(n);\n\n        }\n        unordered_map<int,int> umap2,umap1;\n       \n        for(int i=nums.size()-1;i>=0;i--){\n            for(auto ii:umap[i]){\n                umap2[ii]++;\n            }\n        }\n      \n        for(int i=0;i<nums.size()-1;i++){\n            for(auto ii:umap[i]){\n                umap1[ii]++;\n                umap2[ii]--;\n                if(umap2[ii]==0) umap2.erase(ii);\n            }\n           \n            bool is=1;\n            for(auto ii:umap1){\n                if(umap2.count(ii.first)){\n                    is=0;\n                    break;\n                }\n            }\n            if(is) return i;\n        }\n        return -1;\n        \n    }\n};"}