{"problemName":"range-sum-of-bst","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\nvoid helper(TreeNode* root,int low,int high,int &sum){\n    if(!root){\n        return;\n    }\n    helper(root->left,low,high,sum);\n    if(root->val>=low && root->val<=high){\n        sum+=root->val;\n    }\n    helper(root->right,low,high,sum);\n\n}\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        int sum = 0;\n        helper(root,low,high,sum);\n        return sum;\n        \n    }\n};"}