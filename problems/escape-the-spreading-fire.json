{"problemName":"escape-the-spreading-fire","language":"cpp","code":"class Solution {\npublic:\n    int maximumMinutes(vector<vector<int>>& g) {\n    int m = g.size(), n = g[0].size();\n    deque<pair<int, int>> fire, person({{0, 0}});\n    for (int i = 0; i < m; ++i)\n        for (int j = 0; j < n; ++j)\n            if (g[i][j] == 1) \n                fire.push_back({i, j});\n    auto steps = [&](deque<pair<int, int>> &pos) {\n        vector<vector<int>> st(m, vector<int>(n));\n        while(!pos.empty()) {\n            auto [i, j] = pos.front();\n            pos.pop_front();\n            for (auto [di, dj] : vector<pair<int, int>>{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}) {\n                int x = i + di, y = j + dj;\n                if (min(x, y) >= 0 && x < m && y < n && g[x][y] == 0 && st[x][y] == 0) {\n                    st[x][y] = st[i][j] + 1;\n                    pos.push_back({x, y});\n                }\n            }\n        }\n        return array<int, 3>{st[m - 1][n - 1], st[m - 2][n - 1], st[m - 1][n - 2]};\n    };\n    auto f = steps(fire), p = steps(person);\n    if (f[0] == 0 && p[0] != 0)\n        return 1000000000;\n    if (int diff = f[0] - p[0]; p[0] != 0 && diff >= 0)\n        return diff - (f[1] - p[1] <= diff && f[2] - p[2] <= diff);\n    return -1;\n}\n};"}