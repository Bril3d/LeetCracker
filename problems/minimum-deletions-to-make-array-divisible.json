{"problemName":"minimum-deletions-to-make-array-divisible","language":"cpp","code":"class Solution {\npublic:\n   int gg(int a, int b)\n    {\n      if (a == 0)\n        return b;\n      return gg(b % a, a);\n    }\n\n \n    int fd(vector<int> a, int n)\n    {\n      int r = a[0];\n      for (int i = 1; i < n; i++)\n      {\n        r = gg(a[i], r);\n\n        if(r == 1)\n        {\n        return 1;\n        }\n      }\n      return r;\n    }\n    int minOperations(vector<int>& nums, vector<int>& numsDivide) {\n        long long k=fd(numsDivide,numsDivide.size());\n        sort(begin(nums),end(nums));\n        int ans=0;\n        // cout<<k<<\" \";\n        for(int i=0;i<nums.size();i++){\n            if(k%nums[i]==0){\n                return i;\n            }\n            ans++;\n        }\n        return -1;\n    }\n};"}