{"problemName":"maximum-tastiness-of-candy-basket","language":"cpp","code":"class Solution\n{\npublic:\n\n    bool isValid(int minDiff, vector<int>& price, int k) {\n        int n = price.size();\n        int cnt = 1;\n\n        int prev = price[0];\n\n        for(int i = 1; i < n; i++) {\n            if(price[i] - prev >= minDiff) {\n                cnt++;\n                prev = price[i];\n            }\n        }\n\n        if(cnt >= k) return true;\n\n        return false;\n\n    }\n    int maximumTastiness(vector<int> &price, int k) {\n        sort(price.begin(), price.end());\n        int n = price.size();\n\n        int st = 0;\n        int en = price[n - 1] - price[0];\n\n        int ans = -1;\n\n        while(st <= en) {\n            int mid = st + (en - st) / 2;\n\n            if(isValid(mid, price, k)) ans = mid, st = mid + 1;\n            else en = mid - 1; \n        }\n\n        return ans;\n    }\n};\n// upvote if you like the solution"}