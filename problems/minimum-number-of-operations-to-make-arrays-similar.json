{"problemName":"minimum-number-of-operations-to-make-arrays-similar","language":"cpp","code":"class Solution {\npublic:\n    long long makeSimilar(vector<int>& A, vector<int>& B) {\n        sort(A.begin(), A.end()); sort(B.begin(), B.end());\n        vector<int> oA, eA, oB, eB;\n        for (int& x: A) (x % 2) ? oA.push_back(x) : eA.push_back(x);\n        for (int& x: B) (x % 2) ? oB.push_back(x) : eB.push_back(x);\n        auto incCount = [&](vector<int>& a, vector<int> &b, long long ans = 0) {\n            for (int i = 0; i < a.size(); i++)\n                if (a[i] > b[i]) ans += (a[i] - b[i]) / 2;\n            return ans;\n        };\n        return incCount(oA, oB) + incCount(eA, eB);\n    }\n};"}