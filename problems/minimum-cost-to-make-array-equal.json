{"problemName":"minimum-cost-to-make-array-equal","language":"cpp","code":"class Solution {\npublic:\n    long long minCost(vector<int>& nums, vector<int>& cost) {\n        vector<pair<long long, long long>> arr;\n        for(int i = 0; i < nums.size(); i++){\n            arr.push_back({nums[i], cost[i]});\n        }\n        sort(arr.begin(), arr.end());\n        long long ans = 0, s = 0, p = 0;\n        for(int i = 1; i < arr.size(); i++){\n            s += arr[i].second * (arr[i].first - arr[0].first);\n        }\n        vector<long long> pre, suff;\n        for(auto i : arr){pre.push_back(i.second);suff.push_back(i.second);}\n        for(int i = 1; i < pre.size(); i++)pre[i] += pre[i - 1];\n        for(int i = suff.size() - 2; i >= 0; i--) suff[i] += suff[i + 1];\n\n        ans = s;\n        for(int i = 1; i < arr.size(); i++){\n            p += (arr[i].first - arr[i - 1].first) * pre[i - 1];\n            s -= (arr[i].first - arr[i - 1].first) * suff[i];\n            ans = min(ans, s + p);\n        }\n        return ans;\n    }\n};"}