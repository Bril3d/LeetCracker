{"problemName":"frequency-of-the-most-frequent-element","language":"cpp","code":"class Solution {\npublic:\n    int maxFrequency(vector<int>& nums, int k) {\n        sort(nums.begin(), nums.end());\n        vector<long long int> pre(nums.begin(), nums.end());\n        int n= nums.size();\n        for(int i= 1; i < n;i++){\n            pre[i] += pre[i - 1];\n        } \n        long long int ans = 0;\n        for(int i = 0; i < n;i++){\n            long long int lo = 0, hi = i, t = 0;\n            while(lo <= hi){\n                long long int mid = (lo + hi)/2;\n                long long int reqSum = nums[i] * (i - mid + 1);\n                long long int sum = pre[i];\n                if(mid != 0)sum -= pre[mid - 1];\n                if(reqSum - sum <= k){\n                    t = mid;\n                    hi = mid - 1;\n                }else{\n                    lo = mid + 1;\n                }\n            }\n            ans = max(ans, i - t + 1);\n        }\n        return ans;\n    }\n};"}