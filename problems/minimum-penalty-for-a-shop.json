{"problemName":"minimum-penalty-for-a-shop","language":"cpp","code":"class Solution {\npublic:\n    int bestClosingTime(string customers) {\n        int n = customers.size();\n        vector<int> pref(n, 0);\n        if(customers[0] == 'Y') pref[0] = 1;\n        for(int i = 1; i < n; i++) {\n            pref[i] += pref[i - 1] + (customers[i] == 'Y');\n        }\n        int cnt = 0;\n        for(auto i : customers) {\n            cnt += (i == 'Y');\n        }\n        vector<int> penalty;\n        int mn = INT_MAX;\n        for(int i = 0; i <= n; i++) {\n            int leftY = (i - 1 >=0 ? pref[i - 1] : 0);\n            int leftN = i - leftY;\n            int rightY = (i < n ? pref[n - 1] - leftY : 0);\n            int rightN = n - i + 1 - rightY;\n\n            // cout << i << ' ' << leftN << ' ' << rightY << endl;\n\n            penalty.push_back(leftN + rightY);\n            mn = min(mn, leftN + rightY);\n\n        }\n\n        for(int i = 0; i <= n; i++) {\n            if(penalty[i] == mn) \n            {\n                return i;\n            }\n        }\n\n        return -1;\n\n        \n    }\n};"}