{"problemName":"frog-jump-ii","language":"cpp","code":"class Solution {\npublic:\n    int maxJump(vector<int>& stones) {\n        unordered_set<int> st;\n        int ans=0;\n        int prev=0;\n        \n        for(int i=2;i<=stones.size();i+=2){\n            if(i==stones.size()){\n                ans=max(abs(stones[i-1]-stones[prev]),ans);\n            }\n            else ans=max(abs(stones[i]-stones[prev]),ans);\n            prev=i;\n            st.insert(i);\n        }\n        prev=stones.size()-1;\n        for(int i=stones.size()-2;i>=0;i--){\n            if(!st.count(i)){\n                ans=max(abs(stones[i]-stones[prev]),ans);\n                prev=i;\n            }\n            \n            \n        }\n        return ans;\n        \n    }\n};"}