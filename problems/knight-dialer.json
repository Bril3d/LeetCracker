{"problemName":"knight-dialer","language":"cpp","code":"class Solution {\npublic:\n    long mod=pow(10, 9) + 7;\n    long dp[5000+1][4][3];\n    int helper(int currlen,int i,int j){\n        if(i < 0 || j < 0 || i >= 4 || j >= 3 || (i == 3 && j != 1)) return 0;\n        if(currlen==1)\n            return 1;\n        if(dp[currlen][i][j]!=-1)\n            return dp[currlen][i][j];\n        long upper=(helper(currlen-1,i-2,j+1)%mod+helper(currlen-1,i-2,j-1)%mod);\n        long lower=(helper(currlen-1,i+2,j+1)%mod+helper(currlen-1,i+2,j-1)%mod);\n        long right=(helper(currlen-1,i+1,j+2)%mod+helper(currlen-1,i-1,j+2)%mod);\n        long left=(helper(currlen-1,i+1,j-2)%mod+helper(currlen-1,i-1,j-2)%mod);\n        \n        return dp[currlen][i][j]=(upper+left+lower+right)%mod;\n    }\n    int knightDialer(int n) {\n        long ans=0;\n        memset(dp,-1,sizeof(dp));\n        for(int i=0;i<4;i++){\n            for(int j=0;j<3;j++){\n                ans=(helper(n,i,j)+ans)%mod;\n            }\n        }\n        return ans;\n        \n    }\n};"}