{"problemName":"count-number-of-teams","language":"cpp","code":"class Solution {\npublic:\n    \n    int dp1[1001][4];\n    int helper1(vector<int>&vec,int i,int k){\n        if(k==1){\n            return 1;\n        }\n        \n        if(i>=vec.size()) return 0;\n        \n        if(dp1[i][k]!=-1) return dp1[i][k];\n        int ans=0;\n        for(int ii=i;ii<vec.size();ii++){\n            if(vec[i]<vec[ii]){\n                ans+=helper1(vec,ii,k-1);\n            }\n        }\n          dp1[i][k]=ans;\n          helper1(vec,i+1,k);\n        return ans;\n        \n    }\n    int dp2[1001][4];\n    int helper2(vector<int>&vec,int i,int k){\n        if(k==1){\n            return 1;\n        }\n        \n        if(i>=vec.size()) return 0;\n        \n        if(dp2[i][k]!=-1) return dp2[i][k];\n        int ans=0;\n        for(int ii=i;ii<vec.size();ii++){\n            if(vec[i]>vec[ii]){\n                ans+=helper2(vec,ii,k-1);\n            }\n        }\n        dp2[i][k]=ans;\n        helper2(vec,i+1,k);\n        \n        // cout<<i<<\" \"<<k<<\" \"<<ans<<endl;\n\n         return ans;\n        \n    }\n    int numTeams(vector<int>& vec) {\n        memset(dp1,-1,sizeof dp1);\n        memset(dp2,-1,sizeof dp2);\n        helper1(vec,0,3);\n        helper2(vec,0,3);\n        \n        int ans=0;\n        for(int i=0;i<vec.size();i++){\n            // cout<<dp1[i][3]<<\" \"<<dp2[i][3]<<\" \"<<i<<endl;\n            if(dp1[i][3]!=-1) ans+=dp1[i][3];\n            if(dp2[i][3]!=-1) ans+=dp2[i][3];\n        }\n        return ans;\n    }\n};"}