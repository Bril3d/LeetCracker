{"problemName":"minimum-size-subarray-sum","language":"cpp","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        for(int i = 1; i < nums.size();i++)\n            nums[i] += nums[i - 1];\n        int ans = 1e9;\n        for(int i = 0; i < nums.size();i++){\n            int ind = upper_bound(nums.begin(), nums.begin() + i, nums[i] - target) - nums.begin();\n            int sum = nums[i];\n            if(ind > 0)sum - nums[ind - 1];\n            if(sum >= target)\n                ans = min(ans, i - ind + 1);\n        }\n        return ans == 1e9?0:ans;\n    }\n};"}