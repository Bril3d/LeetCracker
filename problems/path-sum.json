{"problemName":"path-sum","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root, int currSum, int targetSum){\n        if(root->left == NULL && root->right == NULL)\n        {\n            return currSum + root->val == targetSum;\n        }\n        bool b1 = false, b2 = false;\n        if(root->left != NULL)\n            b1 = helper(root->left, currSum + root->val, targetSum);\n        if(root->right != NULL)\n            b2 = helper(root->right, currSum + root->val, targetSum);\n        \n        return (b1 || b2);\n    }\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(root == NULL)return false;\n        return helper(root, 0, targetSum);\n    }\n};"}