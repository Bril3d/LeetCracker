{"problemName":"linked-list-cycle-ii","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        unordered_map<ListNode *, int> umap;\n        ListNode *temp = head;\n        \n        while(temp != NULL){\n            umap[temp]++;\n            if(umap[temp] == 2){\n                return temp;\n            }\n            temp = temp->next;\n        }\n        return NULL;\n    }\n};"}