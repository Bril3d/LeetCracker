{"problemName":"minimum-distance-between-bst-nodes","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int _min = INT_MAX;\n    void helper(TreeNode *root, int &prev){\n        if(root == NULL)return;\n        helper(root->left, prev);\n        if(prev != -1){\n            _min = min(_min,abs(root->val - prev));\n            cout<<abs(root->val - prev)<<\", \";\n        }\n        prev = root->val;\n        helper(root->right, prev);\n    }\n    int minDiffInBST(TreeNode* root) {\n        int prev = -1;\n        helper(root, prev);\n        return _min;\n    }\n};"}