{"problemName":"convert-sorted-array-to-binary-search-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* helper(vector<int> &arr, int start, int end){\n        if(start > end){\n            return NULL;\n        }\n        int mid = start + (end - start)/2;\n        TreeNode *temp = new TreeNode(arr[mid]);\n        temp->left = helper(arr, start, mid - 1);\n        temp->right = helper(arr, mid + 1, end);\n        return temp;\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return helper(nums, 0, nums.size()-1);\n        \n    }\n};"}