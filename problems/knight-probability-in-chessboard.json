{"problemName":"knight-probability-in-chessboard","language":"cpp","code":"class Solution {\npublic:\n\n    double helper(int n , int moves , int row , int col ,vector<vector<int>>&dir,unordered_map<string, double>&mp){\n        if(row<0 || row>=n || col<0 || col>=n){\n            return 0;\n        }\n\n        if(moves == 0)return 1;\n\n        double ans = 0.0;\n\n        string val = to_string(row) + \"row\" + to_string(col)+ \"col\" + to_string(moves)+ \"moves\";\n\n        if(mp.find(val)!=mp.end())return mp[val];\n        for(int i= 0;i<8;i++){\n            ans+=helper(n,moves-1 , row+dir[i][0] ,col + dir[i][1] , dir ,mp)/8.0;\n        }\n\n        return mp[val] = ans;\n\n\n    }\n    double knightProbability(int n, int k, int row, int col) {\n        vector<vector<int>>dir = {{-2,-1} , {-1,-2} , {1,-2} , {2,-1} ,{2,1} , {1,2} , {-1,2} , {-2,1}};\n    unordered_map<string,double>mp;\n\n        return helper(n,k,row,col,dir,mp);\n    }\n};"}