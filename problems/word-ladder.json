{"problemName":"word-ladder","language":"cpp","code":"class Solution {\npublic:\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        unordered_map<string, int>mp;\n        for(auto i : wordList)mp[i]++;\n        queue<string> q;\n        q.push(beginWord);\n        mp.erase(beginWord);\n        int level = 0;\n        while(!q.empty()){\n            int n = q.size();\n            level++;\n            for(int i = 0; i < n;i++){\n                string f = q.front();\n                q.pop();\n                if(f == endWord){\n                    return level;\n                }\n                for(int i = 0; i < f.length();i++){\n                    char temp = f[i];\n                    for(int j = 'a'; j <= 'z';j++){\n                        f[i] = j;\n                        if(mp[f]){\n                            q.push(f);\n                            mp.erase(f);\n                        }\n                    }\n                    f[i] = temp;\n                }\n            }\n        }\n        return 0;\n    }\n};"}