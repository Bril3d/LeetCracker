{"problemName":"burst-balloons","language":"cpp","code":"class Solution {\npublic:\nint helper(int i,int j,vector<int> &nums,vector<vector<int>> &dp){\nif(i>j){\n    return 0;\n}\nif(dp[i][j]!=-1){\n    return dp[i][j];\n}\nint maxi = INT_MIN;\nfor(int ind = i;ind<=j;ind++){\n    int cost = nums[i-1]*nums[ind]*nums[j+1]+helper(i,ind-1,nums,dp)+helper(ind+1,j,nums,dp);\n    maxi = max(maxi,cost);\n}\nreturn dp[i][j]=maxi;\n}\n    int maxCoins(vector<int>& nums) {\n        int n = nums.size();\n        nums.push_back(1);\n        nums.insert(nums.begin(),1);\n        vector<vector<int>> dp(n+2,vector<int> (n+2,0));\n       // return helper(1,n,nums,dp);\n       for(int i = n;i>=1;i--){\n           for(int j =1;j<=n;j++){\n               if(i>j) continue;\n\n\n               int maxi = INT_MIN;\n               for(int k=i;k<=j;k++){\n                   int cost = nums[i-1]*nums[k]*nums[j+1]+dp[i][k-1]+dp[k+1][j];\n                   maxi = max(maxi,cost);\n\n               }\n               dp[i][j]=maxi;\n           }\n       }\n        return dp[1][n];\n    }\n};"}