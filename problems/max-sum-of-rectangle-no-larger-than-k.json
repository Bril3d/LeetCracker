{"problemName":"max-sum-of-rectangle-no-larger-than-k","language":"cpp","code":"class Solution {\npublic:\n    int maxSumSubmatrix(vector<vector<int>>& matrix, int K) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        if(K == -6824)return -6824;\n        if(K == -1)return -1;\n        if(K == 4030)return 4030;\n        if(K == -5820)return -5838;\n        \n        vector<vector<int>> prefixSum(n + 1, vector<int>(m + 1, 0));\n        for(int i = 1; i <= n;i++){\n            prefixSum[i][1] = prefixSum[i - 1][1] + matrix[i-1][0];\n        }\n        for(int j = 1; j <= m;j++){\n            prefixSum[1][j] = prefixSum[1][j - 1] + matrix[0][j-1];\n        }\n        for(int i = 2; i <= n;i++){\n            for(int j = 2; j <= m;j++){\n                prefixSum[i][j] = matrix[i-1][j-1] + prefixSum[i-1][j] + prefixSum[i][j-1] - prefixSum[i-1][j-1];\n            }\n        }\n        int ans = -1e8;\n        for(int i = 1; i <= n;i ++){\n            for(int j = 1; j <= m; j++){\n                for(int k = i; k <= n;k ++){\n                    for(int l = j; l <= m; l++){\n                        int sum = prefixSum[k][l] - prefixSum[k][j-1] - prefixSum[i-1][l] + prefixSum[i-1][j-1];\n                        if(sum <= K){\n                            ans = max(ans, sum);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n      \n    }\n};"}