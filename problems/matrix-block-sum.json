{"problemName":"matrix-block-sum","language":"cpp","code":"class Solution {\npublic:\n    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {\n        int n = mat.size(), m = mat[0].size();\n        vector<vector<int>> pre(n + 1, vector<int> (m + 1, 0));\n        pre[1][1] = mat[0][0];\n        for(int i = 2; i <= m; i++){\n            pre[1][i] = mat[0][i - 1] + pre[1][i - 1];\n        }\n        for(int i = 2; i <= n; i++){\n            pre[i][1] = mat[i - 1][0] + pre[i - 1][1];\n        }\n        for(int i = 2; i <= n;i ++){\n            for(int j = 2; j <= m;j++){\n                pre[i][j] = mat[i - 1][j - 1] + pre[i - 1][j] + pre[i][j - 1] - pre[i - 1][j - 1]; \n            }\n        }\n        vector<vector<int>> arr(n, vector<int>(m, 0));\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                int x1 = max(1, i + 1 - k);\n                int y1 = max(1, j + 1 - k);\n                int x2 = min(n, i + 1 + k);\n                int y2 = min(m, j + 1 + k);\n                arr[i][j] = pre[x2][y2] - pre[x2][y1 - 1] - pre[x1 - 1][y2] + pre[x1 - 1][y1 - 1];\n            }\n        }\n        return arr;\n    }\n};"}