{"problemName":"word-pattern","language":"cpp","code":"class Solution {\npublic:\n    bool wordPattern(string pattern, string s) {\n        stringstream iss(s);\n        unordered_map<string, char> umap;\n        unordered_map<char, int> m;\n        string temp;\n        int k = 0;\n        while(iss >> temp){\n            cout<<temp<<\",\";\n            if(umap.find(temp) != umap.end()){\n                if(pattern[k] != umap[temp]){\n                    return false;\n                }\n                \n            }else{\n                if(m.find(pattern[k]) != m.end()){\n                    return false;\n                }\n                umap[temp] = pattern[k];\n                m[pattern[k]]++;\n            }\n            k++;\n        }\n        return k == pattern.length();\n    }\n};"}