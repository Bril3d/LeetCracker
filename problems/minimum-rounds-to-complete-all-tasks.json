{"problemName":"minimum-rounds-to-complete-all-tasks","language":"java","code":"class Solution {\n    public int minimumRounds(int[] tasks) {\n        Map<Integer, Integer> cnt = new HashMap<>();\n        for(int i : tasks) {\n           if(cnt.containsKey(i)) {\n               cnt.put(i, cnt.get(i) + 1);\n           }\n           else {\n               cnt.put(i, 1);\n           }\n        }\n\n        for(Map.Entry<Integer, Integer> num : cnt.entrySet()) {\n            if(num.getValue() == 1) \n            {\n                return -1;\n            }\n        }\n        int ans = 0;\n        for(Map.Entry<Integer, Integer> num : cnt.entrySet()) {\n                if(num.getValue() %3 == 0) {\n                    ans += num.getValue() / 3;\n                }\n                else {\n                    ans += (num.getValue()/3 + 1);\n                }\n        }\n         return ans;\n    }\n\n   \n}"}