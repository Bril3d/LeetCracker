{"problemName":"number-of-distinct-roll-sequences","language":"cpp","code":"class Solution {\npublic:\n    int dp[10005][10][10];\n    const int N =  1000000007;\n    int find(int n, int prev, int prev_prev) {\n        if(n == 0) {\n            return 1;\n        }\n        \n       if(dp[n][prev + 1][prev_prev + 1] != -1) {\n           return dp[n][prev + 1][prev_prev + 1];\n       }\n        int ans = 0;\n        for(int i = 1; i <= 6; i++) {\n            if(prev == -1) {\n                ans += find(n - 1, i, prev_prev)%N;\n                ans %= N;\n            }\n            else if(prev_prev == -1 and __gcd(i, prev) == 1) {\n                if(i != prev) {\n                    ans += find(n - 1, i, prev)%N;\n                    ans %= N;\n                }\n            }\n            else if(__gcd(i, prev) == 1) {\n                if(i != prev and i != prev_prev) {\n                    ans += find(n - 1, i, prev)%N;\n                    ans %= N;\n                }\n            }\n        }\n        return dp[n][prev + 1][prev_prev + 1] = ans%N;\n    }\n    int distinctSequences(int n) {\n        memset(dp, -1, sizeof dp);\n        return find(n, -1, -1)%N;\n    }\n};"}