{"problemName":"find-closest-node-to-given-two-nodes","language":"cpp","code":"class Solution {\npublic:\n\n    map<int, vector<int> > g;\n    void dfs(int currNode, vector<int> &dis, vector<int> &vis) {\n        vis[currNode] = true;\n\n        for(auto i : g[currNode]) {\n            if(!vis[i]) {\n                dis[i] = dis[currNode] + 1;\n                dfs(i, dis, vis);\n            }\n        }\n    }\n\n    int closestMeetingNode(vector<int>& edges, int node1, int node2) {\n\n        for(int i = 0; i < edges.size(); i++) {\n            if(edges[i] == -1) continue;\n            g[i].push_back(edges[i]);\n        }\n\n        int n = edges.size();\n        vector<int> dis1(n + 1, 0), dis2(n + 1, 0);\n        vector<int> vis1(n + 1, 0), vis2(n + 1, 0);\n        dfs(node1, dis1, vis1);\n        dfs(node2, dis2, vis2);\n\n        int minDis = INT_MAX;\n        int Node = -1;\n        for(int node = 0; node < n; node++) {\n            if(vis1[node] and vis2[node] and minDis > max(dis1[node], dis2[node])) {\n                minDis = max(dis1[node], dis2[node]);\n                Node = node;\n            }\n        }\n\n\n    return Node;\n\n        \n    }\n};"}