{"problemName":"longest-uncommon-subsequence-ii","language":"cpp","code":"class Solution {\npublic:\n    bool sub(string &a, string &b){\n        int i = 0, j = 0;\n        while(i < a.length() && j < b.length()){\n            if(a[i] == b[j])i++, j++;\n            else j++;\n        }\n        return i == a.length();\n    }\n    int findLUSlength(vector<string>& strs) {\n        map<string, int> m;\n        for(auto i : strs)m[i]++;\n        sort(strs.begin(), strs.end(), [](string &a, string &b){\n            return a.length() > b.length();\n        });\n        for(int i = 0; i < strs.size();i++){\n            if(m[strs[i]] > 1)continue;\n            int f = 1;\n            for(int j = 0; j < i;j++){\n                if(sub(strs[i], strs[j])){\n                   f = 0;\n                   break; \n                }\n            }\n            if(f == 1)return strs[i].length();\n        }\n        return -1;\n    }\n};"}