{"problemName":"minimize-result-by-adding-parentheses-to-expression","language":"cpp","code":"class Solution {\npublic:\n    string minimizeResult(string expr) {\n        //First find the index of '+ in expresseion. let it be idx.\n\t\tint idx;\n        int n=expr.size();\n        for(int i=0;i<n;i++)\n            if(expr[i]=='+')\n            {\n                idx=i;\n                break;\n            }\n\t\t\t\n\t\t//Now find two numbers which are on left and right side of '+' sign in expression\t\n        string num1 = expr.substr(0,idx);\n        string num2 = expr.substr(idx+1,n-idx-1);\n\t\t\n\t\t//b1 and b2 are for brackets . b1=left bracket, b2=right bracket\n        int b1=0,b2=0;\n        int min =INT_MAX;\n        string ans;\n\t\t\n\t\t//p1 and p2 are product number outside the brackets i.e our expresion is p1(sum)p2\n        int p1,p2;\n\t\t\n\t\t//Find all possible conditions, iterate left bracket over num1 and right bracket over num2\n        for(int b1=0;b1<num1.size();b1++)\n        {\n            for(int b2=0;b2<num2.size();b2++)\n            {\n                // s1 and s2 are strings which are outside the left parenthesis and right parenthesis respectively \n                string s1=num1.substr(0,b1);\n                string s2=num2.substr(b2+1,b2-num2.size()-1);\n               \n               //if any of the string is empty then its int value should be 1 else its same as string.\n\t\t\t   if(s1.empty())\n                    p1=1;\n                else\n                    p1=stoi(num1.substr(0,b1));\n                if(s2.empty())\n                    p2=1;\n                else\n                    p2=stoi(num2.substr(b2+1,b2-num2.size()-1));\n\t\t\t\t\t\n\t\t\t\t//sum stores the numerical value of the sum between the parenthesis\t\n                int sum=stoi(num1.substr(b1,num1.size())) + stoi(num2.substr(0,b2+1));\n               //eval stores the numerical value of whole expression\n\t\t\t   int eval=p1*sum*p2;\n\t\t\t   \n\t\t\t   //if velue of expression is less then minimum, then make ans string = s1(sum) s1\n                if(eval<min){\n                    \n                    min=eval;\n                    ans=s1+\"(\"+num1.substr(b1,num1.size())+\"+\"+num2.substr(0,b2+1)+\")\"+s2;\n                \n                }\n                \n            }\n        }\n        return ans;\n        //return final string\n        \n    }\n};"}