{"problemName":"minimum-difficulty-of-a-job-schedule","language":"cpp","code":"class Solution {\npublic:\n    int dp[305][15];\n    int find(vector<int> &diff, int d, int i) {\n        if(d == 1) {\n            if(i == diff.size()) {\n                return INT_MAX / 4;\n            }\n            int mx = -1;\n            for(int j = i; j < diff.size(); j++) {\n                mx = max(diff[j], mx);\n            }\n            \n            return mx;\n        }\n        if(dp[i][d] != -1) {\n            return dp[i][d];\n        }\n        int mx = -1;\n        int ans = INT_MAX / 2;\n        for(int j = i; j < diff.size() - d + 1; j++) {\n            mx = max(diff[j], mx);\n            \n            ans = min(ans, mx + find(diff, d - 1, j + 1));\n        }\n        return dp[i][d] =  ans;\n    }\n    int minDifficulty(vector<int>& jobDifficulty, int d) {\n        memset(dp, -1, sizeof dp);\n        int ans =  find(jobDifficulty, d, 0);\n        return (ans >= INT_MAX / 2 ? -1 : ans);\n    }\n};"}