{"problemName":"reverse-linked-list-ii","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        if(head == NULL)return NULL;\n        vector<int> arr;\n        ListNode *temp = head;\n        while(temp != NULL){\n            arr.push_back(temp->val);\n            temp = temp->next;\n        }\n        for(auto i : arr){\n            cout<<i<<' ';\n        }\n        cout<<endl;\n        \n        reverse(arr.begin() + left - 1, arr.begin() + right);\n        for(auto i : arr){\n            cout<<i<<' ';\n        }\n        cout<<endl;\n        ListNode *head2 = new ListNode(arr[0]);\n        temp = head2;\n        for(int i = 1;i<arr.size();i++){\n            temp->next = new ListNode(arr[i]);\n            temp = temp->next;\n        }\n        return head2;        \n    }\n};"}