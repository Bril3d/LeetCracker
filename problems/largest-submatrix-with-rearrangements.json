{"problemName":"largest-submatrix-with-rearrangements","language":"cpp","code":"class Solution {\npublic:\n    int largestSubmatrix(vector<vector<int>>& matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        int ans = 0;\n        vector<int> heights(m, 0);\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                if(matrix[i][j] == 0) {\n                    heights[j] = 0;\n                }\n                else {\n                    heights[j] += 1;\n                }\n            }\n                vector<int> res = heights;\n                sort(res.begin(), res.end());\n                for(int j = 0; j < matrix[0].size(); j++) {\n                    ans = max(ans,((int) matrix[0].size() - j) * res[j]);\n                }\n        }\n        \n        return ans;\n    }\n};"}