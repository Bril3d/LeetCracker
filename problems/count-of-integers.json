{"problemName":"count-of-integers","language":"cpp","code":"const int MOD = 1e9 + 7;\nint dp[9 * 24][405][2];\nclass Solution {\npublic:\n    int helper(string &s, int mn, int mx, int sum, int ind, bool tight, string &temp){\n        if(sum > mx)return 0;\n        if(ind == s.length()){\n            // cout<<temp<<endl;\n            return sum >= mn;\n        }\n        if(dp[sum][ind][tight] != -1)return dp[sum][ind][tight];\n        int ans = 0;\n        int d = tight?(s[ind] - '0'):9;\n        for(int i = 0; i <= d; i++){\n            temp.push_back(i + '0');\n            ans = ((ans%MOD) + (helper(s, mn, mx, sum + i, ind + 1, (tight && (i == d)), temp)%MOD))%MOD;\n            temp.pop_back();\n        }\n        return dp[sum][ind][tight] = ans%MOD;\n    }\n    int count(string num1, string num2, int min_sum, int max_sum) {\n        memset(dp, -1, sizeof dp);\n        string temp = \"\";\n        long long ans = helper(num2, min_sum, max_sum, 0, 0, true, temp);\n        memset(dp, -1, sizeof dp);\n        ans -= helper(num1, min_sum, max_sum, 0, 0, true, temp);\n        int sum = 0;\n        for(auto i : num1)sum += (i - '0');\n        if(sum >= min_sum && sum <= max_sum)ans++;\n        return (ans + MOD)%MOD;\n    }\n};"}