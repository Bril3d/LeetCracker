{"problemName":"trim-a-binary-search-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode * trim(TreeNode * &root, int low, int high) {\n        if(!root)  return nullptr;\n        root->left = trim(root->left, low, high);\n        root->right = trim(root->right, low, high);\n        if(root->val < low) {\n            root = root->right;\n        }\n        else if(root->val > high) {\n            root = root->left;\n        }\n        return root;\n    }\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        return trim(root, low, high);\n        \n    }\n};"}