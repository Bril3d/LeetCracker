{"problemName":"jump-game-vi","language":"cpp","code":"class Solution {\npublic:\n    int maxResult(vector<int>& nums, int k) {\n       multiset<long long> st;\n       vector<long long> dp(nums.size(), INT_MIN);\n        \n       dp[0] = nums[0];\n       st.insert(dp[0]);\n        \n       for(int i = 1; i < nums.size(); i++) {\n            if(i > k) {\n                if(st.find(dp[i - k - 1]) != st.end()) {\n                    st.erase(st.find(dp[i - k - 1]));\n                }\n            }\n            \n            dp[i] = max(dp[i], nums[i] * 1LL + *(st.rbegin()));\n            st.insert(dp[i]);\n        }\n        \n        return dp[nums.size() - 1];\n    }\n};"}