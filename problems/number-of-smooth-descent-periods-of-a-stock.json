{"problemName":"number-of-smooth-descent-periods-of-a-stock","language":"cpp","code":"class Solution {\npublic:\n    #define ll long long \n    #define lld long double \n    #define ull unsigned long long #define pb push_back \n    #define ff(n) for (auto iter : n)            \n    #define pinf LONG_LONG_MAX #define ninf LONG_LONG_MIN \n    #define all(x) x.begin(), x.end() \n    //sort(all(v));\n    #define rall(x) x.rbegin(), x.rend()\n    \n    long long getDescentPeriods(vector<int>& p) {\n        ll ans=0;\n        ll cnt=1;\n        int i;\n        for( i=0;i<p.size()-1;i++){\n            if(p[i]-1==p[i+1]) cnt++;\n            else{\n                // cout<<i<<\" \";\n                ans+=cnt*(cnt+1)/2;\n                cnt=1;\n            }\n        }\n        if(i!=0){\n            if(p[i]+1==p[i-1]){\n                ans+=cnt*(cnt+1)/2;\n            }else ans++;\n        }else ans++;\n        return ans;\n        \n    }\n};"}