{"problemName":"minimum-absolute-difference-in-bst","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *prev = NULL;\n    void helper(TreeNode *root, int &ans){\n        if(root == NULL)return;\n        helper(root->left, ans);\n        if(prev != NULL)\n            ans = min(ans, abs(root->val - prev->val));\n        prev = root;\n        helper(root->right, ans);\n    }\n    int getMinimumDifference(TreeNode* root) {\n        int ans = INT_MAX;\n        helper(root, ans);\n        return ans;\n    }\n};"}