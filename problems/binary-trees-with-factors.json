{"problemName": "binary-trees-with-factors", "language": "cpp", "code": "class Solution {\npublic:\n    const int MOD=1e9+7;\n    int dp[1001];\n    int helper(unordered_map<int,int>&umap,vector<int>& arr,int p){\n        \n        int f = 0;\n        int parent = arr[p];\n        for(auto i : umap){\n            if(parent%i.first == 0 && umap.find(parent/i.first) != umap.end()){\n                f = 1;\n                break;\n            }\n        }\n        if(f == 0){\n            return 1;\n        }\n        if(dp[p] != -1)return dp[p];\n        \n        long long ans = 0;\n        for(auto i : umap){\n            if(parent%i.first == 0 && umap.find(parent/i.first) != umap.end()){\n                long long a = helper(umap, arr, umap[i.first])%MOD;\n                long long b = helper(umap, arr, umap[parent/i.first])%MOD;\n                ans =(ans %MOD + (a  * b)%MOD)%MOD;\n            }\n        }\n        return dp[p] = (ans + 1)%MOD;\n    }\n    \n    int numFactoredBinaryTrees(vector<int>& arr) {\n        unordered_map<int,int>umap;\n        memset(dp,-1,sizeof dp);\n        for(int i=0;i<arr.size();i++) umap[arr[i]]=i;\n        \n        int ans = 0;\n        for(int i = 0; i < arr.size();i++){\n            ans = ((ans%MOD) + helper(umap, arr, i)%MOD)%MOD;\n        }\n        return ans%MOD;\n    }\n};"}