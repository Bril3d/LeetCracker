{"problemName":"insert-greatest-common-divisors-in-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* insertGreatestCommonDivisors(ListNode* head) {\n        vector<int> arr;\n        ListNode *temp = head;\n        while(temp != NULL){\n            arr.push_back(temp->val);\n            temp = temp->next;\n        }\n        vector<int> ans;\n        for(int i = 0; i < arr.size() - 1; i++){\n            ans.push_back(arr[i]);\n            ans.push_back(__gcd(arr[i], arr[i + 1]));\n        }\n        ans.push_back(arr.back());\n        // for(auto i : ans){\n        //     cout<<i<<\" \";\n        // }\n        // cout<<endl;\n        ListNode *head2 = new ListNode(ans[0]);\n        temp = head2;\n        for(int i = 1; i < ans.size(); i++){\n            ListNode *t = new ListNode(ans[i]);\n            temp->next = t;\n            temp = t;\n        }\n        return head2;\n        \n    }\n};"}