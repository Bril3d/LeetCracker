{"problemName":"linked-list-random-node","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<ListNode *> arr;\n    Solution(ListNode* head) {\n        ListNode *temp = head;\n        while(temp != NULL){\n            arr.push_back(temp);\n            temp = temp->next;\n        }\n    }\n    \n    int getRandom() {\n        return arr[rand()%arr.size()]->val;\n        \n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(head);\n * int param_1 = obj->getRandom();\n */"}