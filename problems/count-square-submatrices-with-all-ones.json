{"problemName":"count-square-submatrices-with-all-ones","language":"cpp","code":"class Solution {\npublic:\n    int countSquares(vector<vector<int>>& matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        vector<vector<int>> dp(n,vector<int> (m,0));\n        for(int i =0;i<n;i++){\n            dp[i][0]=matrix[i][0];\n        }\n        for(int i=0;i<m;i++){\n            dp[0][i]=matrix[0][i];\n        }\n        for(int i=1;i<n;i++){\n            for(int j=1;j<m;j++){\n                if(matrix[i][j]==0){\n                    dp[i][j]=0;\n                }else{\n                    dp[i][j]=1+min(dp[i-1][j],min(dp[i-1][j-1],dp[i][j-1]));\n                }\n            }\n        }\n        int sum = 0;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                sum+=dp[i][j];\n            }\n        }\n        return sum;\n    }\n};"}