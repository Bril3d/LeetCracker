{"problemName":"stone-game-ii","language":"cpp","code":"int dp[101][101][2];\nclass Solution {\npublic:\n    int helper(vector<int> &pre, int ind, int m, bool alice){\n        if(ind >= pre.size())return 0;\n        if(dp[ind][m][alice] != -1)return dp[ind][m][alice]; \n        int ans = alice?0: 1e9;\n        for(int x = 0; x <2 * m && x + ind < pre.size(); x++){\n            int sum = pre[ind + x];\n            if(ind != 0)sum -= pre[ind - 1];\n            if(alice){\n                ans = max(ans, sum + helper(pre, ind + x + 1, max(m, x + 1), !alice));\n            }else{\n                ans = min(ans, helper(pre, ind + x + 1, max(m, x + 1), !alice));\n            }\n        }\n        return dp[ind][m][alice] = ans;\n    }\n    int stoneGameII(vector<int>& piles) {\n        memset(dp, -1, sizeof dp);\n        vector<int> pre = piles;\n        int n = piles.size();\n        for(int i = 1;i < n;i++)pre[i] += pre[i - 1];\n        return helper(pre, 0, 1, true);\n    }\n};"}