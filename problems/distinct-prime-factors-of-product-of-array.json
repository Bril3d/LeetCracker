{"problemName":"distinct-prime-factors-of-product-of-array","language":"cpp","code":"class Solution {\npublic:\n    vector<int> helper(){\n        vector<int> vec(100001,0);\n        vec[1]=1;\n        for(int i=2;i<=100000;i++){\n            if(!vec[2]){\n                for(int j=2*i;j<=100000;j+=i){\n                    vec[j]=1;\n                }\n            }\n        }\n        return vec;\n    }\n    int distinctPrimeFactors(vector<int>& nums) {\n        vector<int> vec=helper();\n        unsigned long long  pro=1;\n        \n        \n        int ans=0;\n        unordered_set<int> st;\n        sort(begin(nums),end(nums));\n        for(auto pro:nums){\n            for(int i=2;i<vec.size();i++){\n            \n                if(vec[i]!=0) continue;\n                if(pro==1) break;\n\n                if(pro%i==0){\n                    \n                    st.insert(i);\n                    while(pro%i==0){\n                        pro/=i;\n\n                    }\n                }\n                if(pro==1) break;\n            }\n        }\n        return st.size();\n    }\n};"}