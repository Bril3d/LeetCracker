{"problemName":"minimum-xor-sum-of-two-arrays","language":"cpp","code":"int dp[1<<14 + 1][15];\nclass Solution {\npublic:\n    int helper(vector<int> &nums1, vector<int> &nums2, int ind, int mask){\n        if(ind == nums1.size())return 0;\n        if(dp[mask][ind] != -1)return dp[mask][ind];\n        int ans = 1e9;\n        for(int i = 0; i < nums1.size();i++){\n            if((mask & (1<<i)) == 0){\n                ans = min(ans, (nums1[ind] ^ nums2[i]) + \n                helper(nums1, nums2, ind + 1, (mask | (1<<i))));\n            }\n        }\n        return dp[mask][ind] = ans;\n    }\n    int minimumXORSum(vector<int>& nums1, vector<int>& nums2) {\n        memset(dp, -1, sizeof dp);\n        return helper(nums1, nums2, 0, 0);\n    }\n};"}