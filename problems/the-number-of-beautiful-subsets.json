{"problemName":"the-number-of-beautiful-subsets","language":"cpp","code":"class Solution {\npublic:\n    int cnt = -1;\n    void helper(vector<int> &nums, int k, int ind, vector<int> &ans, unordered_map<int, int> &m){\n        if(ind == nums.size()){\n            cnt++;\n            return;\n        }\n        helper(nums, k, ind + 1, ans , m);\n        if(m[nums[ind] + k] == 0 && m[nums[ind] - k] == 0){\n            m[nums[ind]]++;\n            ans.push_back(nums[ind]);\n            helper(nums, k, ind + 1, ans, m);\n            ans.pop_back();\n            m[nums[ind]]--;\n        }        \n    }\n    int beautifulSubsets(vector<int>& nums, int k) {\n        cnt = 0;\n        unordered_map<int, int> m;\n        vector<int> temp;\n        helper(nums, k, 0, temp, m);\n        return cnt - 1;\n    }\n};"}