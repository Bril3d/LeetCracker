{"problemName":"path-sum-ii","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode *root, vector<vector<int>> &ans, vector<int> &ds, int sum){\n        if(root == NULL){\n            return;\n        }\n        sum -= root->val;\n        ds.push_back(root->val);\n        helper(root->left, ans, ds, sum);\n        helper(root->right, ans, ds, sum);\n        if(root->left == NULL && root->right == NULL){\n            if(sum == 0)\n                ans.push_back(ds);\n        }\n        ds.pop_back();\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<vector<int>> ans;\n        vector<int> ds;\n        helper(root, ans, ds, targetSum);\n        return ans;\n    }\n};"}