{"problemName":"path-with-minimum-effort","language":"cpp","code":"class Solution {\r\npublic:\r\n    int minimumEffortPath(vector<vector<int>>& heights) {\r\n        int n = heights.size();\r\n        int m = heights[0].size();\r\n        \r\n        \r\n       priority_queue <pair<int, pair<int, int>>, vector<pair<int, \r\n        pair<int, int>>>, greater<pair<int, pair<int, int>>>> pq;\r\n        pq.push({0,{0,0}});\r\n        vector<vector<int>> eff(n,vector<int>(m,1e9));\r\n        eff[0][0]=0;\r\n          int dr[]={-1,0,1,0};\r\n          int dc[]={0,1,0,-1};\r\n        while(!pq.empty()){\r\n            int effort = pq.top().first;\r\n            int r =pq.top().second.first;\r\n            int c = pq.top().second.second;\r\n            pq.pop();\r\n            if(r==n-1 && c==m-1){\r\n                return effort;\r\n            }\r\n            for(int i =0;i<4;i++){\r\n                int nrow = r+dr[i];\r\n                int ncol = c+dc[i];\r\n\r\n                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m){\r\n            int maxeffort = max(effort,abs(heights[nrow][ncol]-heights[r][c]));\r\n            if(maxeffort<eff[nrow][ncol]){\r\n                eff[nrow][ncol]=maxeffort;\r\n                pq.push({maxeffort,{nrow,ncol}});\r\n            }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n};"}