{"problemName":"number-of-submatrices-that-sum-to-target","language":"cpp","code":"class Solution {\npublic:\n    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        int arr[n + 1][m + 1];\n        memset(arr, 0, sizeof arr);\n        //\n        for(int i = 1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                arr[i][j] = matrix[i-1][j-1];\n            }\n        }\n        \n        for(int i = 1;i<=n;i++)\n            arr[i][1] += arr[i - 1][1];\n        for(int i = 1;i<=m;i++)\n            arr[1][i] += arr[1][i - 1];\n        \n        //\n        for(int i = 2;i<=n;i++){\n            for(int j=2;j<=m;j++){\n                arr[i][j] += arr[i-1][j] + arr[i][j-1] - arr[i-1][j-1];\n            }\n        }\n        //\n        int ans = 0;\n        for(int i = 1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                for(int k = i; k <= n; k++){\n                    for(int l = j;l <= m; l++){\n                        int sum = arr[k][l] + arr[i-1][j - 1] - arr[i-1][l] - arr[k][j-1];\n                        if(sum == target) ans++;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};"}