{"problemName":"maximum-performance-of-a-team","language":"cpp","code":"class Solution {\npublic:\n        int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {\n        vector<pair<int, int>> ess(n);\n        for (int i = 0; i < n; ++i)\n            ess[i] = {efficiency[i], speed[i]};\n        sort(rbegin(ess), rend(ess));\n        long sumS = 0, res = 0;\n        priority_queue <int, vector<int>, greater<int>> pq; //min heap\n        for(auto& [e, s]: ess){\n            pq.emplace(s);\n            sumS += s;\n            if (pq.size() > k) {\n                sumS -= pq.top();\n                pq.pop();\n            }\n            res = max(res, sumS * e);\n        }\n        return res % (int)(1e9+7);\n    }\n};"}