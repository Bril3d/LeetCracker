{"problemName":"letter-combinations-of-a-phone-number","language":"cpp","code":"class Solution {\npublic:\n   void solve(vector<vector<char>> &arr, vector<string> &ans, string digits, string s)\n    {\n        if (digits.size() == 0)\n        {\n            ans.push_back(s);\n            return;\n        }\n        string temp = digits.substr(1, digits.size());\n        for (int i = 0; i < arr[digits[0] - '0'].size(); i++)\n        {\n            char c = arr[digits[0] - '0'][i];\n            if (i != 0)\n            {\n                s.pop_back();\n            }\n            s.push_back(c);\n            solve(arr, ans, temp, s);\n        }\n    }\n\n    vector<string> letterCombinations(string digits)\n    {\n        vector<string> ans;\n        vector<vector<char>> arr{\n            {},\n            {},\n            {'a', 'b', 'c'},\n            {'d', 'e', 'f'},\n            {'g', 'h', 'i'},\n            {'j', 'k', 'l'},\n            {'m', 'n', 'o'},\n            {'p', 'q', 'r', 's'},\n            {'t', 'u', 'v'},\n            {'w', 'x', 'y', 'z'}};\n\n        solve(arr, ans, digits, \"\");\n        if (ans.size() == 1)\n        {\n            ans.clear();\n        }\n        return ans;\n    }\n};"}