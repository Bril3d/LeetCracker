{"problemName":"maximum-subsequence-score","language":"cpp","code":"class Solution {\npublic:\n    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {\n        vector<pair<int, int>> arr;\n        int n = nums1.size();\n        for(int i = 0; i < n; i++){\n            arr.push_back({nums2[i],  nums1[i]});\n        }\n        sort(arr.rbegin(), arr.rend());\n        long long ans = 0, sum = 0;\n        priority_queue<int> pq;\n        for(int i = 0; i < k - 1;i ++){\n            pq.push(-arr[i].second);\n            sum += arr[i].second;\n        }\n        for(int i = k - 1; i < n;i ++){\n            long long mn =  arr[i].first;\n            ans = max(ans, mn * (arr[i].second + sum));\n            pq.push(-arr[i].second);\n            sum += arr[i].second;\n            if(pq.size() >= k){\n                sum -= abs(pq.top());\n                pq.pop();\n            }\n        }\n        return ans;\n    }\n};"}