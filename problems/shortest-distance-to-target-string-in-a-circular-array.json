{"problemName":"shortest-distance-to-target-string-in-a-circular-array","language":"cpp","code":"class Solution {\npublic:\n    int closetTarget(vector<string>& words, string tar, int idx) {\n        int k=idx;\n        int cnt=0;\n        if(words[idx]==tar) return 0;\n        int n=words.size();\n        idx=(idx+1)%n;\n        int tt=1;\n        while(idx!=k){\n            if(words[idx]==tar){\n                cnt=tt;\n                break;\n            }\n            idx=(idx+1)%n;\n            tt++;\n        }\n        idx=k;\n        tt=1;\n        idx=(idx-1+n)%n;\n        \n         while(idx!=k){\n            if(words[idx]==tar){\n                cnt=min(cnt,tt);\n                break;\n            }\n             idx=(idx-1+n)%n;\n            tt++;\n        }\n        return cnt==0?-1:cnt;\n    }\n};"}