{"problemName":"fraction-to-recurring-decimal","language":"cpp","code":"class Solution {\npublic:\n    string fractionToDecimal(long long n, long long d) {\n        char sign = ' ';\n        if( n * d < 0)sign = '-';\n        n = abs(n);\n        d = abs(d);\n        if(n%d == 0)\n            return (sign == '-')? \"-\" + to_string(n/d): to_string(n/d);\n        string ans = to_string(n/d) + \".\";\n        n %= d;\n        long long  ind = ans.length();\n        map<long long , long long > mp;\n        while(n != 0){\n            if(mp.find(n) != mp.end()){\n                ans.push_back(')');\n                ans.insert(mp[n], \"(\");\n                break;\n            }\n            mp[n] = ind;\n            n *= 10;\n            ans.push_back(n/d + '0');\n            n %= d;\n            ind++;\n        }\n        if(sign == '-')return \"-\" + ans;\n        return ans;\n    }\n};"}