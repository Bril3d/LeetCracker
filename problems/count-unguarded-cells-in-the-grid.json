{"problemName":"count-unguarded-cells-in-the-grid","language":"cpp","code":"class Solution {\npublic:\n    int dic[4][2]={{0,1},{1,0},{-1,0},{0,-1}};\n    \n    bool check(vector<vector<int>>& grid,int i,int j){\n        if(i<0||j<0||i>=grid.size()||j>=grid[0].size()) return 0;\n        \n        return 1;\n    }\n    int helper(vector<vector<int>>& grid,int i,int j,int pos){\n        if(!check(grid,i,j)|| grid[i][j]==2||grid[i][j]==1) return 0;\n        grid[i][j]=-1;\n        return 1+helper(grid,i+dic[pos][0],j+dic[pos][1],pos);\n    }\n    int countUnguarded(int m, int n, vector<vector<int>>& g, vector<vector<int>>& w) {\n        vector<vector<int>> grid(m,vector<int>(n,0));\n        \n        for(auto i:g){\n            grid[i[0]][i[1]]=1;\n        }\n        for(auto i:w){\n            grid[i[0]][i[1]]=2;\n        }\n        \n        for(auto i:g){\n            for(int j=0;j<4;j++){\n                if(check(grid,i[0]+dic[j][0],i[1]+dic[j][1])){\n                    helper(grid,i[0]+dic[j][0],i[1]+dic[j][1],j);\n                }\n            }\n        }\n        \n        int cnt=0;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                // cout<<grid[i][j]<<\" \";\n                if(grid[i][j]==0){\n                    cnt++;\n                }\n            }\n            // cout<<endl;\n        }\n        return cnt;\n    }\n};"}