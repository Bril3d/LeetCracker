{"problemName":"contiguous-array","language":"cpp","code":"class Solution {\npublic:\n     \n    int solve(vector<int> &v, int i, int j, vector<int> & prefix, vector<int> &suffix) {\n        if(i >= j) {\n            return 0;\n        }\n        \n        int len = j - i + 1;\n        int sum = prefix[j] - prefix[i-1];\n        \n        if(len%2 == 0 and sum == len / 2) {\n           return len;\n        }\n        \n        return max(solve(v, i + 1, j, prefix, suffix), solve(v, i, j - 1, prefix, suffix));\n        \n        \n    }\n    int findMaxLength(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> v(2 * n + 1, -4);\n        v[n] = -1;\n        int sum = 0;\n        int ans = 0;\n        for(int i = 0; i < n; i++) {\n            sum += (nums[i] == 0) ? -1 : 1;\n            \n            if(v[n + sum] >= -1) {ans = max(ans, i - v[n + sum]);}\n            else\n            v[n + sum] = i;\n        }\n        \n        return ans;\n    }\n};"}