{"problemName":"next-greater-node-in-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nextLargerNodes(ListNode* head) {\n        int n = 0;\n        auto curr = head;\n        while(curr) {\n            n++;\n            curr = curr -> next;\n        }\n\n        vector<int> answer(n, 0);\n\n        stack<pair<int, int>> st;\n        int i = 0;\n        while(head) {\n            while(!st.empty() && (st.top().first) < (head -> val)) {\n                int idx = st.top().second; st.pop();\n                answer[idx] = head -> val;\n            }\n            st.push({head->val, i});\n            head = head -> next;\n            i++;\n        }\n\n        return answer;\n    }\n};"}