{"problemName":"matchsticks-to-square","language":"cpp","code":"class Solution {\npublic:\n    \n    bool cansqaure(vector<int> &m, vector<int> &size, int i, int target) {\n        if(i == m.size()) {\n            for(auto j : size) {\n                if(j != target) {\n                    return false;\n                }\n            }\n            \n            return true;\n        }\n        \n        for(int j = 0; j < 4; j++) {\n            if(size[j] + m[i] > target) {\n                continue;\n            }\n            size[j] += m[i];\n            if(cansqaure(m, size, i + 1, target)) {\n                return true;\n            }\n            size[j] -= m[i];\n        }\n        return false;\n        \n    }\n    bool makesquare(vector<int>& m) {\n        int sum = 0;\n        for(auto i : m) {\n            sum += i;\n        }\n        if(sum%4) {\n            return false;\n        }\n        int n = m.size();\n        int side = sum / 4;\n        vector<int> size(4, 0);\n        sort(m.begin(), m.end(), greater<int> ());\n        return cansqaure(m, size, 0, side);\n       \n    }\n};"}