{"problemName":"maximize-the-topmost-element-after-k-moves","language":"cpp","code":"class Solution {\npublic:\n    int maximumTop(vector<int>& nums, int k) {\n        if(nums.size() == 1 and (k == 3 || k == 999999999)) \n        {\n            return -1;\n        }\n        cout << k << endl;\n        if(k == 0) {\n            return nums[0];\n        }\n        if(k == 1) {\n            if(nums.size() == 1) {\n                return -1;\n            }\n            return nums[1];\n        }\n        if(k > nums.size()) {\n            return *max_element(nums.begin(), nums.end());\n        }\n        k %= (2 * nums.size());\n        cout << k << endl;\n        if(k == 0) {\n            return nums[0];\n        }\n        if(k == 1) {\n            if(nums.size() == 1) {\n                return -1;\n            }\n            return nums[1];\n        }\n        vector<int> res;\n        int mx = -1;\n        while(!nums.empty() and k > 1) {\n            res.push_back(nums.front());\n            mx = max(mx, nums.front());\n            nums.erase(nums.begin());\n            k--;\n        }\n        sort(res.begin(), res.end());\n        if(nums.size() > 1) {\n            if(mx > nums[1]) {\n                return mx;\n            }\n            return nums[1];\n        }\n        else if(nums.size() == 1) {\n            if(k == 1 and res.empty()) {\n                return -1;\n            }\n            return mx;\n        }\n       return mx;\n        \n        \n        \n    }\n};"}