{"problemName":"query-kth-smallest-trimmed-number","language":"cpp","code":"class Solution {\npublic:\n       static bool cmp(pair<string,int>&x,pair<string,int>&y){\n        for(int i=0;i<x.first.length();i++){\n            if(x.first[i]-'0'>y.first[i]-'0'){\n                return 0;\n            }else if(x.first[i]-'0'<y.first[i]-'0'){\n                return 1;\n            }\n        }\n        \n        return x.second<y.second;\n    }\n    vector<int> smallestTrimmedNumbers(vector<string>& nums, vector<vector<int>>& queries) {\n        vector<string> temp;\n        for(auto i:nums){\n            reverse(begin(i),end(i));\n            temp.push_back(i);\n        }\n        \n        // unordered_map<int, priority_queue< pair<string,int>,vector<pair<string,int>>,greater<pair<string,int>>> > umap;\n        unordered_map<int,vector<pair<string,int>> > umap;\n        int k=0;\n        for(auto &i:temp){\n            for(int j=i.length();j>0;j--){\n                \n                \n                reverse(begin(i),end(i));\n                \n                umap[j].push_back({i,k});\n                reverse(begin(i),end(i));\n                i.pop_back();\n            \n                // cout<<umap[j].back().first<<\" \";\n            }\n            \n            k++;\n        }\n        \n      for(auto &i:umap){\n          sort(begin(i.second),end(i.second),cmp);\n      }\n        \n        vector<int>ans;\n         k=0;\n        for(auto &pr:queries){\n            \n            auto vv=umap[pr[1]];\n            // cout<<pr[1]<<\" \"<<pr[0]<<endl;\n            // for(auto i:vv)cout<<i.first<<\" \";\n            // cout<<endl;\n            // while(pr[0]--){\n            //     ans[k]=vv.top().second;\n            //     vv.pop();\n            // }\n            ans.push_back(vv[pr[0]-1].second);\n            k++;\n        }\n        return ans;\n    }\n};"}