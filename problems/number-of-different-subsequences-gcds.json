{"problemName":"number-of-different-subsequences-gcds","language":"cpp","code":"class Solution {\npublic:\n    \n    int gcd(int a, int b) {\n        while(b != 0) {\n            int t = a;\n            a = b;\n            b = t%b;\n        }\n        return a;\n    }\n    int countDifferentSubsequenceGCDs(vector<int>& nums) {\n        int maxi = *max_element(nums.begin(), nums.end());\n       vector<bool> v(maxi + 1);\n        for(auto i : nums) {\n            v[i] = true;\n        }\n        int ans = 0;\n        \n        for(int i=1;i<=maxi;i++) {\n            int x = 0;\n            if(v[i] == true) {\n                x = i;\n            }\n            \n            for(int n = 1;n*i <= maxi and x != i; n++) {\n                if(v[n*i] == true)\n                x = gcd(x, n*i);\n            }\n            if(x == i) {\n                ans++;\n            }\n            \n            \n            \n        }\n        return ans;\n    }\n};"}