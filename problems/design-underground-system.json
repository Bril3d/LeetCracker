{"problemName":"design-underground-system","language":"cpp","code":"class UndergroundSystem {\npublic:\n    map<int, pair<string, int>> mp;\n    map<string, map<string, pair<int, int>>> umap;\n    UndergroundSystem() {\n        mp.clear();\n        umap.clear();\n    }\n    \n    void checkIn(int id, string stationName, int t) {\n        mp[id] = {stationName, t};\n    }\n    \n    void checkOut(int id, string stationName, int t) {\n        auto p = mp[id];\n        pair<int, int> a = {0, 0};\n        if(umap[p.first].find(stationName) != umap[p.first].end()){\n            a = umap[p.first][stationName];\n        }\n        a.first += (t - p.second);\n        a.second++;\n        umap[p.first][stationName] = a;\n    }\n    \n    double getAverageTime(string startStation, string endStation) {\n        auto p = umap[startStation][endStation];\n        return (p.first * 1.0)/p.second;\n    }\n};\n\n/**\n * Your UndergroundSystem object will be instantiated and called as such:\n * UndergroundSystem* obj = new UndergroundSystem();\n * obj->checkIn(id,stationName,t);\n * obj->checkOut(id,stationName,t);\n * double param_3 = obj->getAverageTime(startStation,endStation);\n */"}