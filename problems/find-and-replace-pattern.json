{"problemName":"find-and-replace-pattern","language":"cpp","code":"class Solution {\npublic:\n    bool cmpr(vector<int> &org, string &word){\n        int n = word.length();\n        unordered_map<char, int> umap;\n        vector<int> arr(n, -1);\n        int temp = 0;\n        for(int i = 0; i < n;i++){\n            if(umap.find(word[i]) == umap.end()){\n                umap[word[i]] = temp++;\n            }\n            arr[i] = umap[word[i]];\n        }\n        return arr == org;\n    }\n    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {\n        int n = pattern.length();\n        unordered_map<char, int> umap;\n        vector<int> arr(n, -1);\n        int temp = 0;\n        for(int i = 0; i < n;i++){\n            if(umap.find(pattern[i]) == umap.end()){\n                umap[pattern[i]] = temp++;\n            }\n            arr[i] = umap[pattern[i]];\n        }\n        vector<string> ans;\n        for(auto i : words){\n            if(cmpr(arr, i)){\n                ans.push_back(i);\n            }\n        }\n        return ans;        \n    }\n};"}