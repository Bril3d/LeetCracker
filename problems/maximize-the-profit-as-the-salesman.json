{"problemName":"maximize-the-profit-as-the-salesman","language":"cpp","code":"class Solution {\npublic:\n    static bool cmp(vector<int>&x,vector<int>&y){\n        if(x[0]!=y[0]) return x[0]<y[0];\n        else if(x[1]!=y[1]) return x[1]<y[1];\n        return x[2]>y[2];\n    }\n    int dp[100001];\n    int helper(vector<vector<int>>& vec,vector<int>&fl,int i){\n        if(i>=vec.size()) return 0;\n        if(dp[i]!=-1) return dp[i];\n        int ans=0;\n        ans=max({vec[i][2]+helper(vec,fl,fl[i]),helper(vec,fl,i+1)});\n        return dp[i]=ans;\n    }\n    int maximizeTheProfit(int n, vector<vector<int>>& vec) {\n        sort(begin(vec),end(vec),cmp);\n        vector<int> v;\n        for(auto i:vec){\n            v.push_back(i[0]);\n        }\n        vector<int> fl(vec.size());\n        for(int i=vec.size()-1;i>=0;i--){\n            auto iter=upper_bound(begin(v)+i+1,end(v),vec[i][1]);\n            \n            if(iter==end(v)){\n                fl[i]=vec.size();\n            }else{\n                fl[i]=iter-begin(v);\n            }\n            \n        }\n        memset(dp,-1,sizeof dp);\n        return helper(vec,fl,0);\n    }\n};"}