{"problemName":"count-good-nodes-in-binary-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int helper(TreeNode *root,int _max){\n        if(root == NULL)return 0;\n        \n        int ans = 0;\n        if(root->val >= _max){\n            ans++;\n        }\n        _max = max(_max, root->val);\n        ans += helper(root->left, _max);\n        ans += helper(root->right, _max);\n        return ans;\n    }\n    int goodNodes(TreeNode* root) {\n        return helper(root, INT_MIN);\n    }\n};"}