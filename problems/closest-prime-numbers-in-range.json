{"problemName":"closest-prime-numbers-in-range","language":"cpp","code":"class Solution {\npublic:\n     vector<int> helper(int a,int b){\n         int  i, j;\n        vector<int> vec;\n        if (a <= 2) {\n        a = 2;\n        if (b >= 2) {\n            vec.push_back(a);\n            a++;\n        }\n    }\n \n    // MAKING SURE THAT a IS ODD BEFORE WE BEGIN\n    // THE LOOP\n    if (a % 2 == 0)\n        a++;\n \n    // NOTE : WE TRAVERSE THROUGH ODD NUMBERS ONLY\n    for (i = a; i <= b; i = i + 2) {\n \n        // flag variable to tell\n        // if i is prime or not\n        bool flag = 1;\n \n        // WE TRAVERSE TILL SQUARE ROOT OF j only.\n        // (LARGEST POSSIBLE VALUE OF A PRIME FACTOR)\n        for (j = 2; j * j <= i; ++j) {\n            if (i % j == 0) {\n                flag = 0;\n                break;\n            }\n        }\n \n        // flag = 1 means i is prime\n        // and flag = 0 means i is not prime\n       \n        if (flag == 1){\n          if(i==1)\n            continue;\n          else\n            vec.push_back(i);\n        }\n    }\n        return vec;\n    }\n    vector<int> closestPrimes(int left, int right) {\n        vector<int> temp=helper(left,right);\n        // vector<int> temp;\n        \n        int l=-1,r=-1;\n        int diff=INT_MAX;\n        for(int i=1;i<temp.size();i++){\n            if(temp[i]-temp[i-1]<diff){\n                diff=temp[i]-temp[i-1];\n                l=i-1;\n                r=i;\n            }\n        }\n        if(r==-1) return {-1,-1};\n        return {temp[l],temp[r]};\n    }\n};"}