{"problemName":"minimum-cost-for-tickets","language":"cpp","code":"int dp[366][400];\nclass Solution {\npublic:\n    int helper(vector<int> &days, vector<int> &costs, int ind, int prev){\n        if(ind == days.size())return 0;\n        if(dp[ind][prev] != -1)return dp[ind][prev];\n        if(days[ind] > prev){\n            return dp[ind][prev] = min({costs[0] + helper(days, costs, ind + 1, days[ind]),\n            costs[1] + helper(days, costs, ind + 1, days[ind] + 6),\n            costs[2] + helper(days, costs, ind + 1, days[ind] + 29)});\n        }else{\n            return dp[ind][prev] = helper(days, costs, ind + 1, prev);\n        }\n    }\n    int mincostTickets(vector<int>& days, vector<int>& costs) {\n        memset(dp, -1, sizeof dp);\n        return helper(days, costs, 0, 0);\n    }\n};"}