{"problemName":"minimum-fuel-cost-to-report-to-the-capital","language":"cpp","code":"class Solution {\npublic:\n    map<int, vector<int> > g;\n    void dfs(int node, int prev, vector<int> &cnt) {\n        for(auto i : g[node]) {\n            if(i != prev) {\n                dfs(i, node, cnt);\n                cnt[node] += cnt[i];\n            }\n        }\n    }\n\n    long long minimumFuelCost(vector<vector<int>>& roads, int seats) {\n        \n        vector<int> cnt(roads.size() + 1, 1);\n\n        for(auto i : roads) {\n            g[i[0]].push_back(i[1]);\n            g[i[1]].push_back(i[0]);\n        }\n\n        dfs(0, -1, cnt);\n\n\n\n        \n       long long ans = 0;\n       for(int i = 1; i <= roads.size(); i++) {\n            ans += ceil((double) cnt[i] / seats);\n        }\n        return ans;\n    }\n};"}