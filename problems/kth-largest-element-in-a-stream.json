{"problemName":"kth-largest-element-in-a-stream","language":"cpp","code":"class KthLargest {\npublic:\n    multiset<int> st;\n    set<int>::iterator it;\n    KthLargest(int k, vector<int>& nums) {\n        if(nums.size() < k)\n            nums.push_back(-1e9);\n        sort(nums.begin(), nums.end(), greater<int>());\n        for(auto i : nums)\n            st.insert(i);\n        it = st.find(nums[k - 1]);\n    }\n    \n    int add(int val) {\n        st.insert(val);\n        if(val >= *it){\n            it++;\n        }\n        return *it;\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */"}