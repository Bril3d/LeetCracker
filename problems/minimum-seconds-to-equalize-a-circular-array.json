{"problemName":"minimum-seconds-to-equalize-a-circular-array","language":"cpp","code":"class Solution {\npublic:\n    int minimumSeconds(vector<int>& nums) {\n        map<int, vector<int>> mp;\n        int n = nums.size();\n        for(int i = 0; i < n; i ++){\n            mp[nums[i]].push_back(i);\n        }\n        int ans = 1e9;\n        for(auto it : mp){\n            int _max = it.second.front() + nums.size() - 1 - it.second.back();\n            _max = ceil(_max/2.0);\n            for(int i = 1; i < it.second.size(); i++){\n                int temp = it.second[i] - it.second[i - 1] - 1;\n                temp = ceil(temp/2.0);\n                _max = max(_max, temp);\n            }\n            ans = min(ans, _max);\n        }\n        return ans;\n    }\n};"}