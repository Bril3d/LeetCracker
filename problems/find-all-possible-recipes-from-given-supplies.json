{"problemName":"find-all-possible-recipes-from-given-supplies","language":"cpp","code":"class Solution {\npublic:\n    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {\n        queue<pair<string,int>> que;\n        for(int i=0;i<recipes.size();i++){\n            que.push({recipes[i],i});\n        }\n        unordered_set<string> st;\n        for(auto i:supplies){\n            st.insert(i);\n        }\n        \n        int n=0;\n            vector<string> ans;\n        while(n<=que.size()&&que.size()){\n            int isvalid=1;\n            pair<string,int> x=que.front();\n            que.pop();\n            for(auto i:ingredients[x.second]){\n                if(!st.count(i)){\n                    isvalid=0;\n                    break;\n                }\n                \n            }\n                if(isvalid){\n                    \n                    st.insert(x.first);\n                    ans.push_back(x.first);\n                    n=0;\n                }else {n++; que.push(x);}\n            }\n        return ans;\n        }\n    \n    \n};"}