{"problemName":"n-ary-tree-level-order-traversal","language":"cpp","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> children;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n    }\n\n    Node(int _val, vector<Node*> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(Node* root) {\n        if(root == NULL)return {};\n        queue<Node *> q;\n        q.push(root);\n        vector<vector<int>> ans;\n        while(!q.empty()){\n            int n = q.size();\n            vector<int> temp;\n            for(int i = 0; i <n;i++){\n                Node *front = q.front();\n                q.pop();\n                for(auto i : front->children){\n                    q.push(i);\n                }\n                temp.push_back(front->val);\n            }\n            ans.push_back(temp);\n        }\n        return ans;        \n    }\n};"}