{"problemName":"odd-even-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    #define node ListNode\n    ListNode* oddEvenList(ListNode* head) {\n        if(!head || !head->next) {\n            return head;\n        }\n        node* h = head;\n        node*n;\n        node *ah, *at, *bh, *bt;\n        ah = at = bh = bt = nullptr;\n        int cnt = 1;\n        while(h) {\n            n = h->next;\n            if(cnt&1) {\n                \n                if(!ah) {\n                    ah = at = h;\n                }\n                else {\n                    at->next = h;\n                    at = at->next;\n                }\n                h->next = nullptr;\n                \n                \n            }\n            else {\n                if(!bh) {\n                    bh = bt = h;\n                }\n                else {\n                    bt->next = h;\n                    bt = bt->next;  \n                }\n                h->next = nullptr;\n             \n            }\n            // h->next = nullptr;\n            cnt++;\n            h = n;\n            \n        }\n        at->next = bh;\n        // return bh;\n        return ah;\n    }\n};"}