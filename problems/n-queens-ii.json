{"problemName":"n-queens-ii","language":"cpp","code":"class Solution {\npublic:\n    void updateVisited(vector<vector<int>> &board, vector<vector<int>> &visited, int n)\n    {\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < n; j++)\n                visited[i][j] = 0;\n\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < n; j++)\n            {\n                if (board[i][j] == 1)\n                {\n                    for (int k = 0; k < n; k++)\n                    {\n                        visited[i][k] = 1;\n                        visited[k][j] = 1;\n                    }\n                    int x = i;\n                    int y = j;\n                    while (x >= 0 && x < n && y >= 0 && y < n)\n                    {\n                        visited[x][y] = 1;\n                        x++;\n                        y++;\n                    }\n                    x = i;\n                    y = j;\n                    while (x >= 0 && x < n && y >= 0 && y < n)\n                    {\n                        visited[x][y] = 1;\n                        x--;\n                        y++;\n                    }\n                    x = i;\n                    y = j;\n                    while (x >= 0 && x < n && y >= 0 && y < n)\n                    {\n                        visited[x][y] = 1;\n                        x++;\n                        y--;\n                    }\n                    x = i;\n                    y = j;\n                    while (x >= 0 && x < n && y >= 0 && y < n)\n                    {\n                        visited[x][y] = 1;\n                        x--;\n                        y--;\n                    }\n                }\n            }\n        }\n    }\n    int helper(int ind, int n, vector<vector<int>> &board, vector<vector<int>> &visited)\n    {\n        if (ind == n)\n            return 1;\n        int i = ind;\n        int ans = 0;\n        for (int j = 0; j < n; j++)\n        {\n            if (visited[i][j] == 0)\n            {\n                board[i][j] = 1;\n                updateVisited(board, visited, n);\n                ans += helper(ind + 1, n, board, visited);\n                board[i][j] = 0;\n                updateVisited(board, visited, n);\n            }\n        }\n        return ans;\n    }\n    int totalNQueens(int n)\n    {\n        vector<vector<int>> visited(n, vector<int>(n, 0));\n        vector<vector<int>> board(n, vector<int>(n, 0));\n        helper(0, n, board, visited);\n        return helper(0, n, board, visited);\n    }\n};"}