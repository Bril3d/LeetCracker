{"problemName":"construct-string-from-binary-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode *root, string &s){\n        if(root == NULL){\n            return;\n        }\n        s.append(to_string(root->val));\n        if(!root->left && !root->right){\n            return;\n        }\n        s.push_back('(');\n        helper(root->left, s);\n        s.push_back(')');\n        if(root->right){\n            s.push_back('(');\n            helper(root->right, s);\n            s.push_back(')');\n        }\n    }\n    string tree2str(TreeNode* root) {\n        string s = \"\", ans;\n        helper(root, s);\n        return s;\n    }\n};"}