{"problemName":"range-sum-query-2d-immutable","language":"cpp","code":"class NumMatrix {\npublic:\n    vector<vector<int>> pre;\n    NumMatrix(vector<vector<int>>& matrix) {\n        int n = matrix.size(), m = matrix[0].size();\n        vector<vector<int>> temp(n + 1, vector<int> (m + 1, 0));\n        for(int i = 1; i<=n;i++){\n            temp[i][1] = temp[i - 1][1] + matrix[i-1][0];\n        }\n        for(int j = 1; j<=m;j++){\n            temp[1][j] = temp[1][j - 1] + matrix[0][j - 1];\n        }\n        for(int i = 1; i <= n; i++){\n            for(int j = 1; j <= m;j++){\n                temp[i][j] = temp[i-1][j] + temp[i][j-1] - temp[i-1][j-1] + matrix[i-1][j-1];\n            }\n        }\n        pre = temp;\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        row1++;col1++;row2++;col2++;\n        return pre[row2][col2] - pre[row2][col1 - 1] - pre[row1 - 1][col2] + pre[row1 - 1][col1 - 1];\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */"}