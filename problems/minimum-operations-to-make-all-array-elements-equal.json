{"problemName":"minimum-operations-to-make-all-array-elements-equal","language":"cpp","code":"class Solution {\npublic:\n    vector<long long> minOperations(vector<int>& nums, vector<int>& queries) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        vector<long long> pre(n);\n        pre[0] = nums[0];\n        vector<long long> ans;\n        for(int i =  1; i < n;i++)pre[i] += pre[i - 1] + nums[i];\n        for(auto i : queries){\n            int ind = lower_bound(nums.begin(), nums.end(), i) - nums.begin();\n            if(ind == n){\n                ans.push_back(1LL * n * i - 1LL * pre[n - 1]);\n            }else{\n                long long leftSum = 0;\n                if(ind > 0){\n                    leftSum = pre[ind - 1];\n                }\n                long long left = (1LL * ind * i - leftSum);\n                long long right = (pre[n - 1] - leftSum - 1LL * (n - ind) * i);\n                // cout<<left<<\" \"<<right<< \" \" << (pre[n - 1] - leftSum - 1LL)<<\" \"<<leftSum<<endl;\n                ans.push_back(left + right);\n            }\n        }\n        return ans;\n    }\n};"}