{"problemName":"leaf-similar-trees","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode *root, vector<int> &arr){\n        if(root == NULL) return;\n        if(!root->left && !root->right){\n            arr.push_back(root->val);\n        }\n        inorder(root->left, arr);\n        inorder(root->right, arr);\n    }\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        vector<int> arr1, arr2;\n        inorder(root1, arr1);\n        inorder(root2, arr2);\n        return arr1 == arr2;        \n    }\n};"}