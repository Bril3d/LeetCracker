{"problemName":"sum-of-two-integers","language":"cpp","code":"class Solution {\npublic:\n    int sum(int a, int b) \n    {\n        uint32_t c = 0;\n        while(b != 0) \n        {\n            c = (a&b);\n            a = a^b;\n            b = (c << 1);\n        }\n        return a;\n    }\n//     int sub(int x, int y)\n// {\n//     while (y != 0)\n//     {\n//         // borrow contains common\n//         // set bits of y and unset\n//         // bits of x\n//         int borrow = (~x) & y;\n \n//         // Subtraction of bits of x\n//         // and y where at least one\n//         // of the bits is not set\n//         x = x ^ y;\n \n//         // Borrow is shifted by one\n//         // so that subtracting it from\n//         // x gives the required sum\n//         y = borrow << 1;\n//     }\n// }\n    \n\n    int getSum(int a, long long b) {\n//       if(a < 0 and b < 0) {\n//           return -sum(abs(a), abs(b));\n//       }\n//         if(a >= 0 and b >= 0) {\n//             return sum(a, b);\n//         }\n        \n//         if(b < 0) {\n//             //find a - b\n//             return sub(a, b);\n//         }\n//         return sub(b, a);\n        \n        return sum(a, b);\n        \n    }\n};"}