{"problemName":"k-radius-subarray-averages","language":"cpp","code":"class Solution {\npublic:\n    vector<int> getAverages(vector<int>& nums, int k) {\n        vector<int> ans(nums.size(), -1);\n        int j = 2 * k, i = 0;\n        if(j >= nums.size())return ans;\n        long long sum = accumulate(nums.begin(), nums.begin() + j + 1, 0LL);\n\n        while(j < nums.size()){\n            int mid = (i + j)/2;\n            ans[mid] = sum/(2 * k + 1);\n            j++;\n            if(j == nums.size())break;\n            sum += nums[j];\n            sum -= nums[i];\n            i++;\n        }\n        return ans;\n    }\n};"}