{"problemName":"split-array-largest-sum","language":"cpp","code":"class Solution {\npublic:\n    \n    bool ispossible(vector<int> &nums, int m, int mid) {\n        \n        int total_sum = 0;\n        m--;\n        for(auto i : nums) {\n            \n            if(i > mid) return false;\n            if(total_sum + i <= mid){\n                total_sum += i;\n                \n            }\n            else {\n                total_sum = i;\n                m--;\n            }\n        }\n        return m >= 0;\n    }\n    int splitArray(vector<int>& nums, int m) {\n        int s = 0;\n        int e = accumulate(nums.begin(), nums.end(), 0);\n        int ans = INT_MAX;\n        while(s <= e) {\n            int mid = (s+e)/2;\n            if(ispossible(nums, m, mid)) {\n                ans = min(ans, mid);\n                e = mid -1;\n            }\n            else {\n                s =  mid + 1;\n            }\n        }\n        return ans;\n    }\n};"}