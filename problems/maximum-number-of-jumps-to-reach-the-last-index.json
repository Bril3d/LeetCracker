{"problemName":"maximum-number-of-jumps-to-reach-the-last-index","language":"cpp","code":"int dp[1005];\nclass Solution {\npublic:\n    int helper(vector<int> &nums, int target, int ind){\n        if(ind == nums.size() - 1)return 0;\n        if(dp[ind] != -1)return dp[ind];\n        int ans = -1e9;\n        for(int i = ind + 1; i < nums.size(); i++){\n            if(abs(nums[i] - nums[ind]) <= target){\n                ans = max(ans, 1 + helper(nums, target, i));\n            }\n        }\n        return dp[ind] = ans;\n    }\n    int maximumJumps(vector<int>& nums, int target) {\n        memset(dp, -1, sizeof dp);\n        int ans = helper(nums, target, 0);\n        if(ans <= 0)return -1;\n        return ans;\n    }\n};"}