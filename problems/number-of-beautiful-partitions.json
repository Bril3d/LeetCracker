{"problemName":"number-of-beautiful-partitions","language":"cpp","code":"class Solution {\npublic:\n    int dp[1001][1001];\n    const int m=1e9+7;\n    bool isprime(int n){\n        if(n==2||n==3||n==5||n==7) return 1;\n        return 0;\n    }\n    int helper(string &s, int &k, int &ML,int i,int n){\n        \n        if(i>s.length()-1) return 0;\n        if(n==k) return 1;\n        int ans=0;\n        if(dp[i][n]!=-1) return dp[i][n];\n        if(!isprime(s[i]-'0')&&isprime(s[i+1]-'0')){\n            ans=(ans+helper(s,k,ML,i+ML,n+1)%m)%m;\n        }\n        ans=(ans+helper(s,k,ML,i+1,n)%m)%m;\n        return dp[i][n]=ans%m;\n        \n    }\n    int beautifulPartitions(string s, int k, int ML) {\n        if(isprime(s[0]-'0')&&!isprime(s[s.length()-1]-'0')){\n            memset(dp,-1,sizeof dp);\n            return helper(s,k,ML,ML-1,1);\n        }\n        return 0;\n    }\n};"}