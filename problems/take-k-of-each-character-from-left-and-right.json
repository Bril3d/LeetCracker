{"problemName":"take-k-of-each-character-from-left-and-right","language":"cpp","code":"class Solution {\npublic:\n    int helper(string s, int k) {\n        \n         if(k==0) return 0;\n        int n=s.length();\n        int a=0,b=0,c=0;\n        int ans=INT_MAX;\n        vector<int> aa,bb,cc;\n        for(int i=0;i<n;i++){\n            if(s[i]=='a'){\n                ++a;\n            }else if(s[i]=='b') ++b;\n            else ++c;\n            aa.push_back(a);\n            bb.push_back(b);\n            cc.push_back(c);\n        }\n        // for(auto i:aa) cout<<i<<\" \";\n        // cout<<endl;\n        // for(auto i:bb) cout<<i<<\" \";\n        // cout<<endl;\n        // for(auto i:cc) cout<<i<<\" \";\n        // cout<<endl;\n        a=b=c=0;\n        for(int i=n-1;i>=0;i--){\n            if(s[i]=='a')a++;\n            else if(s[i]=='b') b++;\n            else c++;\n            if(a>=k&&b>=k&&c>=k) {ans=min(ans,n-i);break;}\n            // cout<<i<<\"->\";\n            int idx=-1;\n            if(a<k){\n                int tp=lower_bound(begin(aa),begin(aa)+i,k-a)-begin(aa);\n                // cout<<tp<<\" \";\n                if(tp<i)\n                idx=max(idx,tp);\n            }\n            if(b<k){\n                int tp=lower_bound(begin(bb),begin(bb)+i,k-b)-begin(bb);\n                // cout<<tp<<\" \";\n                if(tp<i) \n                idx=max(idx,tp);\n            }\n            if(c<k){\n                int tp=lower_bound(begin(cc),begin(cc)+i,k-c)-begin(cc);\n                // cout<<tp<<\" \";\n                if(tp<i) \n                idx=max(idx,tp);\n            }\n            // cout<<\":\"<<idx<<\" \";\n            if(idx!=-1){\n                // cout<<n-i+idx+1<<endl;\n                ans=min(ans,n-i+idx+1);\n            }\n            else return -1;\n        }\n        return ans;\n    }\n    int takeCharacters(string s, int k) {\n        string t=s;\n        reverse(s.begin(),s.end());\n        // return helper(t,k);\n        return min(helper(s,k),helper(t,k));\n    }\n};"}