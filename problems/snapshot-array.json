{"problemName":"snapshot-array","language":"cpp","code":"class SnapshotArray {\npublic:\n    vector<vector<pair<int, int>>> mp;\n    int id = 0;\n    int n;\n    SnapshotArray(int length) {\n        n = length;\n        id = 0;\n        mp.assign(n, vector<pair<int, int>>());\n        for(int i = 0; i < n; i++){\n            mp[i].push_back({-1, 0});\n        }\n    }\n    \n    void set(int index, int val) {\n        mp[index].push_back({id, val});\n    }\n    \n    int snap() {\n        // for(auto i : mp){\n        //     for(auto it : i){\n        //         cout<<it.first<<\" \"<<it.second<<\", \";\n        //     }\n        //     cout<<endl;\n        // }\n        return id++;\n    }\n    \n    int get(int index, int snap_id) {\n        pair<int, int> p = {snap_id + 1, 0};\n        int ind = lower_bound(mp[index].begin(), mp[index].end(), p) - mp[index].begin() - 1;\n        // cout<<ind<<endl;\n        return mp[index][ind].second;\n        // return upper_bound(mp[index].begin(), mp[index].end(), p)->second;\n    }\n};\n\n/**\n * Your SnapshotArray object will be instantiated and called as such:\n * SnapshotArray* obj = new SnapshotArray(length);\n * obj->set(index,val);\n * int param_2 = obj->snap();\n * int param_3 = obj->get(index,snap_id);\n */"}