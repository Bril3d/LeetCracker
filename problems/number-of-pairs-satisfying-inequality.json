{"problemName":"number-of-pairs-satisfying-inequality","language":"cpp","code":"typedef long long int ll;\nclass BIT\n{\n    ll n;\n    vector<ll> b;\n\npublic:\n    BIT(ll _n)\n    {\n        this->n = _n + 1;\n        b.assign(this->n, 0);\n    }\n    void update(ll idx, ll x)\n    {\n        for (; idx < n; idx += (idx & (-idx)))\n            b[idx] += x;\n    }\n    ll sum(ll idx)\n    {\n        ll sum = 0;\n        for (; idx > 0; idx -= (idx & (-idx)))\n            sum += b[idx];\n        return sum;\n    }\n};\nclass Solution {\npublic:\n    long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int diff) {\n        long long ans = 0;\n        int offset = 1e5;\n        const int N = 2e5;\n        BIT *bit = new BIT(N);\n        for(int i = 0; i < nums1.size(); i++){\n            int jdiff = nums1[i] - nums2[i];\n            ans += bit->sum(jdiff + offset);\n            bit->update(jdiff - diff + offset, 1);\n        }\n        return ans;\n    }\n};"}