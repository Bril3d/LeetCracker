{"problemName":"word-search","language":"cpp","code":"class Solution {\npublic:\n  int helper(vector<vector<char>> &board, string &word, int x, int y, string &temp, vector<vector<int>> &visited, int ind)\n    {\n        if (x < 0 || x >= board.size() || y < 0 || y >= board[0].size())\n            return false;\n        if (visited[x][y] == 1)\n            return false;\n        if (board[x][y] != word[ind])\n            return false;\n        temp.push_back(board[x][y]);\n        visited[x][y] = 1;\n        if (temp == word)\n            return true;\n\n        bool b1 = helper(board, word, x - 1, y, temp, visited, ind + 1);\n        bool b2 = helper(board, word, x + 1, y, temp, visited, ind + 1);\n        bool b3 = helper(board, word, x, y - 1, temp, visited, ind + 1);\n        bool b4 = helper(board, word, x, y + 1, temp, visited, ind + 1);\n        if (b1 || b2 || b3 || b4)\n            return true;\n        visited[x][y] = 0;\n        temp.pop_back();\n        return false;\n    }\n    bool exist(vector<vector<char>> &board, string word)\n    {\n        string temp = \"\";\n        int n = board.size(), m = board[0].size();\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < m; j++)\n            {\n                vector<vector<int>> visited(n, vector<int>(m, 0));\n                bool b1 = helper(board, word, i, j, temp, visited, 0);\n                if (b1)\n                    return true;\n            }\n        }\n        return false;\n    }\n};"}