{"problemName":"erect-the-fence","language":"cpp","code":"class Solution {\npublic:\n    int checkrightleft(vector<int> A, vector<int> B, vector<int> C) {\n       \n        return ((B[0] - A[0]) * (C[1] - A[1])) - ((B[1] - A[1]) * (C[0] - A[0]));\n    }\n    \n    \n    vector<vector<int>> outerTrees(vector<vector<int>>& trees) {\n        if (trees.size() <= 3) return trees;\n        sort(trees.begin(), trees.end());\n        \n\t\t// Upper HULL\n        vector<vector<int>> Uppr_tree;\n        Uppr_tree.push_back(trees[0]);\n        Uppr_tree.push_back(trees[1]);\n         \n        for (int i = 2; i < trees.size(); i++) {\n         int ls= Uppr_tree.size();\n            while (Uppr_tree.size() >= 2 && checkrightleft(Uppr_tree[ls-2], Uppr_tree[ls-1], trees[i]) > 0) {\n                Uppr_tree.pop_back();\n              ls--;\n            }\n            Uppr_tree.push_back(trees[i]);\n        }\n        \n\t\t// Lower HULL\n        vector<vector<int>> rTrees;\n        rTrees.push_back(trees[trees.size() - 1]);\n        rTrees.push_back(trees[trees.size() - 2]);\n        for (int i = trees.size() - 3; i >= 0; --i) {\n            int rs = rTrees.size(); \n            while (rTrees.size() >= 2 && checkrightleft(rTrees[rs-2], rTrees[rs-1], trees[i]) > 0) {\n                rTrees.pop_back();\n                rs--;\n            }\n            rTrees.push_back(trees[i]);\n        }\n        \n\t\t vector<vector<int>> answer(Uppr_tree.size()+rTrees.size());\n        merge(Uppr_tree.begin(),\n                   Uppr_tree.end(),\n                   rTrees.begin(),\n                   rTrees.end(),\n                   answer.begin());\n      \n        \n        sort(answer.begin(), answer.end());\n        answer.erase(std::unique(answer.begin(), answer.end()), answer.end());\n        \n        return answer;\n    }\n};"}