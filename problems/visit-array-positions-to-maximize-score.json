{"problemName":"visit-array-positions-to-maximize-score","language":"cpp","code":"class Solution {\npublic:\n    long long helper(vector<int> &nums, long long ind, int x, long long par, vector<vector<long long>> &dp){\n        if(ind == nums.size())return 0;\n        if(dp[ind][par] != -1) return dp[ind][par];\n        long long a = 0, b = 0;\n        a = helper(nums, ind + 1, x, par, dp);\n        if(par == nums[ind]%2){\n            b = nums[ind] + helper(nums, ind + 1, x, nums[ind]%2, dp);\n        }else{\n            b = nums[ind] + helper(nums, ind + 1, x, nums[ind]%2, dp) - x;\n        }\n        return dp[ind][par] = max(a, b);\n    }\n    long long maxScore(vector<int>& nums, int x) {\n        int n = nums.size();\n        vector<vector<long long>> dp1(n, vector<long long>(2, -1));\n        return helper(nums, 1, x, nums[0]%2, dp1) + nums[0];\n    }\n};"}