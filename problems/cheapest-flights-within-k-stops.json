{"problemName":"cheapest-flights-within-k-stops","language":"cpp","code":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        vector<pair<int,int>> adj[n];\n        for(auto it:flights){\n            adj[it[0]].push_back({it[1],it[2]});\n        }\n        queue<pair<int,pair<int,int>>> q;\n        q.push({0,{src,0}});\n        //stops, node,dist;\n        vector<int> dist(n,1e9);\n        dist[src]=0;\n        while(!q.empty()){\n            auto it=q.front();\n            int stop = it.first;\n            int node = it.second.first;\n            int dis = it.second.second;\n            q.pop();\n            if(stop>k){\n                continue;\n            }\n            for(auto it:adj[node]){\n                int adjnode = it.first;\n                int d = it.second;\n                if(dis+d<dist[adjnode]){\n                    dist[adjnode]=dis+d;\n                    q.push({stop+1,{adjnode,dis+d}});\n                }\n\n            }\n        }\n\n        if(dist[dst]!=1e9){\n            return dist[dst];\n        }else{\n            return -1;\n        }\n\n\n\n        \n    }\n};"}