{"problemName":"minimum-speed-to-arrive-on-time","language":"cpp","code":"class Solution {\npublic:\n    int minSpeedOnTime(vector<int>& dist, double hour) {\n        long lo = 1, hi = 1e9, ans = 0;\n        while(lo <= hi){\n            long mid = (lo + hi)/2;\n            double t = 0;\n            for(int i = 0; i < dist.size() - 1; i ++){\n                t += ceil((dist[i] * 1.0)/mid);\n            }\n            t += (dist.back() * 1.0)/mid;\n            printf(\"%d %d %d %f\\n\", lo, mid, hi, t);\n            if(t <= hour){\n                ans = mid;\n                hi = mid - 1;\n            }else{\n                lo = mid + 1;\n            }\n        }\n        double t = 0;\n        for(int i = 0; i < dist.size() - 1; i ++){\n            t += ceil((dist[i] * 1.0)/ans);\n        }\n        t += (dist.back() * 1.0)/ans;\n        return (t > hour)?-1:ans;\n    }\n};"}