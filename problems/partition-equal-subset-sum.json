{"problemName":"partition-equal-subset-sum","language":"cpp","code":"class Solution {\npublic:\nbool helper(int ind,vector<int> &nums,int target,vector<vector<int>> &dp){\n    if(ind<0){\n        return false;\n    }\n    if(target==0){\n        return true;\n    }\n    if(dp[ind][target]!=-1){\n        return dp[ind][target];\n\n    }\n    bool non = helper(ind-1,nums,target,dp);\n    bool take = false;\n    if(nums[ind]<=target){\n        take = helper(ind-1,nums,target-nums[ind],dp);\n    }\n    return dp[ind][target] = non||take;\n}\n    bool canPartition(vector<int>& nums) {\n    int total = 0;\n    for(int i =0;i<nums.size();i++){\n        total+=nums[i];\n    }\n        if(total%2!=0){\n            return false;\n        }\n        int target   = total/2;\n         vector<vector<int>> dp(nums.size(),vector<int> (target+1,-1));\n         return helper(nums.size()-1,nums,target,dp);\n        \n    }\n};"}