{"problemName":"all-divisions-with-the-highest-score-of-a-binary-array","language":"cpp","code":"class Solution {\npublic:\n    vector<int> maxScoreIndices(vector<int>& s) {\n        int n = s.size();\n        vector<int> dp1(n + 2);\n        vector<int> dp2(n + 2);\n        \n        dp1[0] = 0;\n        for(int i = 1; i <= n; i++) {\n            dp1[i] = dp1[i-1] + (s[i-1] == 0);\n        }\n        \n        \n        cout << endl;\n        dp2[n + 1] = 0;\n        for(int i = n; i >= 1; i--) {\n            dp2[i] = dp2[i+1] + (s[i - 1] == 1);\n        }\n     \n        vector<int> ans;\n        int mx = INT_MIN;\n        for(int i = 1; i <= n + 1; i++) {\n            mx = max(mx, dp1[i-1] +  dp2[i]);\n        }\n       \n        \n        cout << mx << endl;\n        for(int i = 1; i <= n + 1; i++) {\n            if(dp1[i-1] + dp2[i] == mx) {\n                ans.push_back(i - 1);\n            }\n        }\n        \n        return ans;\n    }\n};"}