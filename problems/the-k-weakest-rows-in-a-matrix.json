{"problemName":"the-k-weakest-rows-in-a-matrix","language":"cpp","code":"class Solution {\npublic:\n    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {\n        vector<pair<int, int>> arr;\n        for(int i = 0; i < mat.size();i++){\n            int ind = upper_bound(mat[i].rbegin(), mat[i].rend(), 0) - mat[i].rbegin();\n            arr.push_back({mat[0].size() - ind,i});\n        }\n        sort(arr.begin(), arr.end(), [&](pair<int, int> &a, pair<int, int> &b){\n            if(a.first == b.first){\n                return a.second < b.second;\n            }else{\n                return a.first < b.first;\n            }\n        });\n        vector<int> ans;\n        for(int i = 0; i < k;i++){\n            ans.push_back(arr[i].second);\n        }\n        return ans;\n    }\n};"}