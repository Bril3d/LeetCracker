{"problemName":"rearranging-fruits","language":"cpp","code":"class Solution {\npublic:\n    long long minCost(vector<int>& A, vector<int>& B) {\n        map<int, int> count;\n        for (int a : A)\n            ++count[a];\n        for (int a : B)\n            --count[a];\n        vector<long long> swaps;\n        long long res = 0, small = begin(count)->first;\n        for (auto [a, v] : count) {\n            if (v % 2) return -1;\n            for (int i = 0; i < abs(v) / 2; ++i)\n                swaps.push_back(a);\n        }\n        for (int i = 0; i < swaps.size() / 2; ++i)\n            res += min(swaps[i], small * 2);\n        return res;\n    }\n};"}