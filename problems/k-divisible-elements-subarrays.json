{"problemName":"k-divisible-elements-subarrays","language":"cpp","code":"class Solution {\npublic:\n    int countDistinct(vector<int>& nums, int k, int p) {\n        set<vector<int>> st;\n        int n = nums.size();\n        for(int i = 0; i < n;i++){\n            int div = 0;\n            vector<int> temp;\n            for(int j = i;j < n;j++){\n                temp.push_back(nums[j]);\n                if(nums[j]%p == 0)div++;\n                if(div > k)break;\n                st.insert(temp);\n            }\n        }\n        return st.size();\n    }\n};"}