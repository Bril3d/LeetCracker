{"problemName":"min-stack","language":"cpp","code":"class MinStack {\npublic:\n    map<int, int> m;\n    stack<int> st;\n    MinStack() {\n        m.clear();\n    }\n    \n    void push(int val) {\n        m[val]++;\n        st.push(val);\n    }\n    \n    void pop() {\n        m[st.top()]--;\n        if(m[st.top()] == 0)m.erase(st.top());\n        st.pop();   \n    }\n    \n    int top() {\n        return st.top();\n    }\n    \n    int getMin() {\n        for(auto i : m){\n            return i.first;\n        }\n        return -1e9;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */"}