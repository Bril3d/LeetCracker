{"problemName":"find-subsequence-of-length-k-with-the-largest-sum","language":"cpp","code":"class Solution {\npublic:\n    \n    vector<int> maxSubsequence(vector<int>& nums, int k) {\n       int sum=0;\n        vector<int> n=nums;\n        sort(begin(n),end(n));\n        unordered_map<int,int> umap;\n        int kp=nums.size()-k;\n        int i=0;\n        while(kp--){\n            umap[n[i++]]++;\n        }\n        \n        for(auto i:nums) sum+=i;\n        \n        vector<int> ans;\n        for(auto i:nums){\n            if(!umap[i]){\n                ans.push_back(i);\n            }else umap[i]--;\n        }\n        return ans;\n        \n    }\n};"}