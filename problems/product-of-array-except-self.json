{"problemName":"product-of-array-except-self","language":"cpp","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int z = 0;\n        vector<int> ans;\n        long long pre = 1;\n        for(auto i : nums){\n            if(i == 0)z++;\n            else pre *= i;\n        }\n        int n = nums.size();\n        if(z == 0){\n            for(int i = 0; i < n;i++){\n                ans.push_back(pre/nums[i]);\n            }\n        }else if(z == 1){\n            for(int i = 0; i < n;i++){\n                if(nums[i] == 0){\n                    ans.push_back(pre);\n                }else{\n                    ans.push_back(0);\n                }\n            }\n            \n        }else{\n            for(int i = 0; i < n;i++){\n                ans.push_back(0);\n            }\n        }\n        return ans;\n    }\n};"}