{"problemName":"path-sum-iii","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   void helper(TreeNode *root, long long curr, int targetSum, unordered_map<long long, long long> &umap, int &ans)\n    {\n        if (root == NULL)\n            return;\n        curr += root->val;\n        ans += umap[curr - targetSum];\n        umap[curr]++;\n        helper(root->left, curr, targetSum, umap, ans);\n        helper(root->right, curr, targetSum, umap, ans);\n        umap[curr]--;\n    }\n    int pathSum(TreeNode *root, int targetSum)\n    {\n        unordered_map<long long, long long> umap;\n        umap[0]++;\n        int ans = 0;\n        helper(root, 0LL, targetSum, umap, ans);\n        return ans;\n    }\n};"}