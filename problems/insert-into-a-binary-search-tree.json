{"problemName":"insert-into-a-binary-search-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        TreeNode *curr = root;\n        if(root == NULL)return new TreeNode(val);\n        while(curr){\n            if(val == curr->val)return root;\n            if(val < curr->val){\n                if(curr->left){\n                    curr = curr->left;\n                }else{\n                    curr->left = new TreeNode(val);\n                }\n            }else{\n                if(curr->right){\n                    curr = curr->right;\n                }else{\n                    curr->right = new TreeNode(val);\n                }\n            }\n        }\n        return root;        \n    }\n};"}