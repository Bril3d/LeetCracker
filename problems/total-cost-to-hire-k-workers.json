{"problemName":"total-cost-to-hire-k-workers","language":"cpp","code":"class Solution {\npublic:\n    long long totalCost(vector<int>& costs, int k, int candidates) {\n        int i = 0, j = costs.size() - 1;\n        priority_queue<int> f, l;\n        while(i < candidates){\n            f.push(-costs[i++]);\n        }\n        long long ans = 0;\n        while(j >= i && j >= costs.size() - candidates){\n            l.push(-costs[j]);\n            j--;\n        }\n        for(int c = 0; c < k; c++){\n            int a = -1e9, b = -1e9;\n            if(!f.empty())a = f.top();\n            if(!l.empty())b = l.top();\n            if(a >= b){\n                ans += a;\n                f.pop();\n            }else{\n                ans += b;\n                l.pop();\n            }\n            if(j >= i && f.size() < candidates){\n                f.push(-costs[i++]);\n            }\n            \n            if(j >= i && l.size() < candidates){\n                l.push(-costs[j--]);\n            }\n        }\n        return abs(ans);\n    }\n};"}