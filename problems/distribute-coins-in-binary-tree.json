{"problemName":"distribute-coins-in-binary-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   int cnt = 0;\n    void solve(TreeNode* root) {\n        if(!root || (!root->left and !root->right)) {\n            return;\n        }\n        solve(root->left);\n        solve(root->right);\n        if(!root->left) {\n            cnt += abs(root->right->val - 1);\n            root->val = root->val + (root->right->val - 1);\n            root->right->val  = 1;\n        }\n        else if(!root->right) {\n            cnt += abs(root->left->val - 1);\n            root->val = root->val + (root->left->val - 1);\n            root->left->val  = 1;\n        }\n        else if(root->left and root->right) {\n            cnt += abs(root->right->val - 1) + abs(root->left->val - 1);\n            \n            root->val = root->val + (root->left->val - 1) + (root->right->val - 1);\n            root->left->val = 1;\n            root->right->val = 1;\n        }\n        \n        \n    }\n    int distributeCoins(TreeNode* root) {\n        solve(root);\n        return cnt;\n    }\n};"}