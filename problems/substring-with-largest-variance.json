{"problemName":"substring-with-largest-variance","language":"cpp","code":"class Solution {\npublic:\n    int largestVariance(string s) {\n        int n = s.size();\n        unordered_set<char> st(s.begin(), s.end());\n        int ans = 0;\n        for(char ch1 : st) {\n            for(char ch2 : st) {\n                if(ch1 == ch2) {\n                    continue;\n                }\n\n                int cnt1, cnt2;\n                cnt1 = cnt2 = 0;\n                for(char ch : s) {\n                    if(ch == ch1) {\n                        cnt1++;\n                    }\n                    else if(ch == ch2) {\n                        cnt2++;\n                    }\n                    if(cnt1 < cnt2) {\n                        cnt1 = cnt2 = 0;\n                    }\n                    else if(cnt1 > 0 and cnt2 > 0) {\n                        ans = max(ans, cnt1 - cnt2);\n                    }\n                }\n            }\n        }\n\n     reverse(s.begin(), s.end());\n        for(char ch1 : st) {\n            for(char ch2 : st) {\n                if(ch1 == ch2) {\n                    continue;\n                }\n\n                int cnt1, cnt2;\n                cnt1 = cnt2 = 0;\n                for(char ch : s) {\n                    if(ch == ch1) {\n                        cnt1++;\n                    }\n                    else if(ch == ch2) {\n                        cnt2++;\n                    }\n                    if(cnt1 < cnt2) {\n                        cnt1 = cnt2 = 0;\n                    }\n                    else if(cnt1 > 0 and cnt2 > 0) {\n                        ans = max(ans, cnt1 - cnt2);\n                    }\n                }\n            }\n        }\n\n        return ans;\n    }\n};"}