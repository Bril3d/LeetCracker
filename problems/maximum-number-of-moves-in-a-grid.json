{"problemName":"maximum-number-of-moves-in-a-grid","language":"cpp","code":"class Solution {\npublic:\n    int helper(vector<vector<int>>&grid, int x, int y, vector<vector<int>> &dp){\n        if(y == grid[0].size() - 1)return 0;\n        if(dp[x][y]  != -1)return dp[x][y];\n        int ans = 0;\n        for(auto i : {-1, 0, 1}){\n            int _x = x + i;\n            if(_x >=0 && _x < grid.size() && grid[_x][y + 1] > grid[x][y]){\n                ans = max(ans, 1 + helper(grid, _x, y + 1, dp));\n            }\n        }\n        return dp[x][y] = ans;\n    }\n    int maxMoves(vector<vector<int>>& grid) {\n        int ans = -1e6;\n        vector<vector<int>> dp(grid.size(), vector<int>(grid[0].size(), -1));\n        for(int i = 0; i < grid.size(); i++){\n            ans = max(ans, helper(grid, i, 0, dp));\n        }\n        return (ans <=-1e6)?-1:ans;\n    }\n};"}