{"problemName":"cousins-in-binary-tree-ii","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* replaceValueInTree(TreeNode* root) {\n        if(root == NULL)return NULL;\n        queue<TreeNode*> q;\n        vector<long long> arr;\n        q.push(root);\n        long long sum = 0;\n        while(!q.empty()){\n            long long n = q.size();\n            long long sum = 0;\n            for(long long i = 0; i < n;i++){\n                auto f = q.front();\n                q.pop();\n                sum += f->val;\n                \n                if(f->left != NULL)q.push(f->left);\n                if(f->right != NULL)q.push(f->right);\n            }\n            arr.push_back(sum);\n        }\n        q.push(root);\n        long long level = 0;\n        while(!q.empty()){\n            long long n = q.size();\n            for(long long i = 0; i < n;i++){\n                auto f = q.front();\n                q.pop();\n                \n                if(f->left != NULL)q.push(f->left);\n                if(f->right != NULL)q.push(f->right);\n                \n                if(level < arr.size() - 1){\n                    long long sum = arr[level + 1];\n                    long long t= 0;\n                    if(f->left != NULL)t += f->left->val;\n                    if(f->right != NULL)t += f->right->val;\n                    \n                    if(f->left != NULL)f->left->val = sum -t;\n                    if(f->right != NULL)f->right->val = sum -t;;\n                }\n            }\n            level++;\n        }\n        root->val = 0;\n        if(root->left != NULL)root->left->val = 0;\n        if(root->right != NULL)root->right->val = 0;\n        return root;\n    }\n};"}