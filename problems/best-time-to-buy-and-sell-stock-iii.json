{"problemName":"best-time-to-buy-and-sell-stock-iii","language":"cpp","code":"int dp[100005][2][3];\nclass Solution {\npublic:\n    int helper(vector<int> &prices, int ind, int canBuy, int k){\n        if(k < 0)return -1e8;\n        if(ind == prices.size()){\n            return 0;\n        }\n        if(dp[ind][canBuy][k] != -1)return dp[ind][canBuy][k];\n        if(canBuy){\n            int buy = helper(prices, ind + 1, 0, k) - prices[ind];\n            int notBuy = helper(prices, ind + 1, 1, k);\n            return dp[ind][canBuy][k] = max(buy, notBuy);\n        }else{   \n            int sell = helper(prices, ind + 1, 1, k - 1) + prices[ind];\n            int notSell = helper(prices, ind + 1, 0, k);\n            return dp[ind][canBuy][k] = max(sell, notSell);\n        }\n    }\n    int maxProfit(vector<int>& prices) {\n        memset(dp, -1, sizeof dp);\n        return helper(prices, 0, 1, 2);\n    }\n};"}