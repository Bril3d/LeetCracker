{"problemName":"find-largest-value-in-each-tree-row","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        if(root== NULL)return {};\n        queue<TreeNode *> q;\n        q.push(root);\n        vector<int> ans;\n        while(!q.empty()){\n            int _max = INT_MIN;\n            int n = q.size();\n            for(int i = 0;i<n;i++){\n                TreeNode * front = q.front();\n                q.pop();\n                if(front->left)\n                    q.push(front->left);\n                if(front->right)\n                    q.push(front->right);\n                _max = max(_max, front->val);\n            }\n            ans.push_back(_max);\n        }\n        return ans;\n    }\n};"}