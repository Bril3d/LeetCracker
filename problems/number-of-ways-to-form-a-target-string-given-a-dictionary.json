{"problemName":"number-of-ways-to-form-a-target-string-given-a-dictionary","language":"cpp","code":"class Solution {\npublic:\n    int dp[1001][1001];\n    const int MOD = 1e9 + 7;\n    int helper(vector<string> &words,  map<char, map<int, int>> &mp, string &target, int ind1, int ind2){\n        if(ind1 == target.size())return 1;\n        if(ind2 == words[0].size())return 0;\n        if(dp[ind1][ind2] != -1)return dp[ind1][ind2];\n        long notPick = helper(words, mp, target, ind1, ind2 + 1);\n        long pick = 0;\n        if(mp[target[ind1]][ind2] != 0){\n            pick = mp[target[ind1]][ind2] * 1LL * helper(words, mp, target, ind1 + 1, ind2 + 1);\n        }\n        return dp[ind1][ind2] = (pick + notPick)%MOD;\n    }\n    int numWays(vector<string>& words, string target) {\n        memset(dp, -1, sizeof dp);\n        map<char, map<int, int>> mp;\n        for(auto s : words){\n            for(int i = 0; i < s.length(); i ++){\n                mp[s[i]][i]++;\n            }\n        }\n        return helper(words, mp, target, 0, 0)%MOD;\n    }\n};"}