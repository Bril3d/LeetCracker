{"problemName":"house-robber-iv","language":"cpp","code":"class Solution {\npublic:\n    vector<pair<int,int>> vec;\n    bool check(int mid,int k){\n        \n        // int odd=0,evn=0;\n        // for(int i=0;i<vec.size();i++){\n        //     if(vec[i].first<=mid){\n        //         if(vec[i].second%2==0) evn++;\n        //         else odd++;\n        //     }\n        // }\n        // return (evn>=k||odd>=k);\n       int  take = 0;\n            for (int i = 0; i < vec.size(); ++i)\n                if (vec[i].first <= mid) {\n                    if(mid==22){\n                        cout<<vec[i].first<<\" \"<<i<<endl;\n                    }\n                    take += 1;\n                    i++;\n                }\n                \n            if (take >= k) return 1;\n            return 0;\n    }\n    int minCapability(vector<int>& nums, int k) {\n        for(int i=0;i<nums.size();i++){\n            vec.push_back({nums[i],i});\n        }\n        // sort(begin(vec),end(vec));\n        int low=0,high=1e9;\n        while(high-low>1){\n            int mid=low+(high-low)/2;\n            // cout<<low<<\" \"<<mid<<\" \"<<high<<\" \"<<endl;\n            if(check(mid,k)){\n                high=mid;\n            }else low=mid+1;\n        }\n        // cout<<low<<\" \"<<high<<endl;\n        if(check(low,k)) return low;\n        return high;\n    }\n};"}