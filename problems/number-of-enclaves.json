{"problemName":"number-of-enclaves","language":"cpp","code":"class Solution {\npublic:\n    int n, m;\n    int ans = 0;\n    vector<int> arr = {-1, 0, 1, 0, -1};\n    void dfs(vector<vector<int>> &grid, vector<vector<int>> &vis, int x, int y){\n        vis[x][y] = 1;\n        ans++;\n        for(int i = 0; i < 4;i++){\n            int _x = x + arr[i];\n            int _y = y + arr[i + 1];\n            if(_x >=0 && _y>=0 && _x<n && _y < m && !vis[_x][_y] && grid[_x][_y] == 1){\n                dfs(grid, vis, _x, _y);\n            }\n        }\n    }\n    int numEnclaves(vector<vector<int>>& grid) {\n        n =grid.size(), m = grid[0].size();\n        vector<vector<int>> vis(n, vector<int> (m, 0));\n        for(int i = 0; i < n;i++){\n            for(int j = 0 ; j <m;j++){\n                if(i == 0 || j == 0 || i == n - 1 || j == m - 1){\n                    if(!vis[i][j] && grid[i][j] == 1){\n                        dfs(grid, vis, i, j);\n                    }\n                }\n            }\n        }\n        ans = 0;\n        for(int i = 0; i < n;i++){\n            for(int j = 0 ; j <m;j++){\n                if(!vis[i][j] && grid[i][j] == 1){\n                    dfs(grid, vis, i, j);\n                }\n            }\n        }\n        return ans;\n    }\n};"}