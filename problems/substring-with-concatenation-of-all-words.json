{"problemName":"substring-with-concatenation-of-all-words","language":"cpp","code":"class Solution {\npublic:\n    vector<int> findSubstring(string s, vector<string>& words) {\n        unordered_map<string, int> m, dp;\n\n        for(auto i : words){\n            m[i]++;\n        }\n        int n = s.length();\n        int k = words[0].size();\n        int i = 0, j = 0;\n        vector<int> ans;\n        while(j < words.size() * k){\n            dp[s.substr(j, k)]++;\n            j+=k;\n        }\n        while(j <= n){\n            int f = 0;\n            dp.clear();\n            for(int ind = i;ind< i + words.size() * k;ind+=k){\n                dp[s.substr(ind, k)]++;\n            }\n            for(auto i : m){\n                if(i.second != dp[i.first]){\n                    f = 1;\n                    break;\n                }\n            }\n            // cout<<\"{}\"<<i<<\" \"<<j<<\"  \";\n            // for(auto i : dp){\n            //     cout<<i.first<<\", \"<<i.second<<\"  \";\n            // }\n            cout<<endl;\n            if(f == 0 && (m.size() == dp.size()))\n                ans.push_back(i);\n            i++;\n            j++;\n        }\n        return ans;\n    }\n};"}