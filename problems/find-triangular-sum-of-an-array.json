{"problemName":"find-triangular-sum-of-an-array","language":"cpp","code":"class Solution {\npublic:\n    int triangularSum(vector<int>& nums) {\n        int n = nums.size();\n        if(n == 1) {\n            return nums.back();\n        }\n        vector<long long> pas({1, 1});\n        n-=2;\n        while(n--) {\n            for(int i = pas.size() - 1; i > 0; i--) {\n                pas[i] += (pas[i - 1]%10);\n                pas[i] %= 10;\n            }\n            \n            pas.push_back(1);\n        }\n        \n        // for(auto i : pas) {\n        //     cout << i <<\" \";\n        // }\n        // cout << endl;\n        long long sum = 0;\n        for(int i = 0; i < nums.size(); i++) {\n            sum += (pas[i] * nums[i]) % 10;\n            sum %= 10;\n        }\n        return sum;\n    }\n};"}