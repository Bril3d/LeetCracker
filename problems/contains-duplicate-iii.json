{"problemName":"contains-duplicate-iii","language":"cpp","code":"class Solution {\npublic:\n    bool containsNearbyAlmostDuplicate(vector<int>& nums, int indexDiff, int valueDiff) {\n        int i = 0, j = 0;\n        multiset<int> st;\n        while(1){\n            // for(auto i : st){\n            //     cout<<i<<\" \";\n            // }\n            // cout<<endl;\n            auto r = st.lower_bound(nums[j] + valueDiff + 1);\n            auto l = st.lower_bound(nums[j] - valueDiff);\n            if(r == st.begin() || l == st.end()){\n                // cout<<nums[j]<<\">\"<<nums[j] + valueDiff + 1<<\" \"<<nums[j] - valueDiff<<endl;\n                // cout<<\"gadbad\\n\";\n            }else{\n                r--;\n                if(*r >= *l)return true;\n            }\n            if(j >= indexDiff){\n                st.erase(st.find(nums[i]));\n                i++;\n            }\n            st.insert(nums[j]);\n            j++;\n            if(j == nums.size())break;\n        }\n        return false;\n    }\n};"}