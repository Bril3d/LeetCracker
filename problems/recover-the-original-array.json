{"problemName":"recover-the-original-array","language":"cpp","code":"class Solution {\npublic:\n    vector<int> recoverArray(vector<int>& nums) {\n        vector<int> ans;\n        int n=nums.size();\n        sort(nums.begin(),nums.end());\n        for(int i=1;i<n;i++){\n             int k=(nums[i]-nums[0])/2;\n            if((nums[i]-nums[0])%2==1 || k<1)continue;\n\n            bool possible=true;\n            vector<bool> left(n,true);\n            vector<int> temAns;\n            int upper=i;\n        \n            for(int lower=0;lower<n;lower++){\n                if(!left[lower])continue;\n                if(upper==lower)upper++;\n                while(upper<n && nums[upper]-nums[lower]<=2*k){\n                if(nums[upper]-nums[lower]==2*k){\n                    temAns.push_back(nums[lower]+k);\n                    left[upper]=left[lower]=false;\n                    upper++;\n                    break;\n                }\n                    upper++;\n                }\n                if(left[lower]){\n                    possible=false;\n                    break;\n                }\n                \n            }\n            if(possible){\n                ans=temAns;\n                break;\n            }\n        }\n        return ans;\n    }\n};"}