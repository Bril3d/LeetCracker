{"problemName":"the-latest-time-to-catch-a-bus","language":"cpp","code":"class Solution {\npublic:\n    int latestTimeCatchTheBus(vector<int>& buses, vector<int>& passengers, int capacity) {\n        priority_queue<int,vector<int>,greater<int>> pq;\n        unordered_set<int> st;\n        for(auto i:passengers){\n            st.insert(i);\n            pq.push(i);\n        }\n        \n        sort(begin(buses),end(buses));\n        // sort(begin(passengers),end(passengers));\n        \n        // for(auto i:buses) cout<<i<<\" \";\n        // cout<<endl;\n        // for(auto i:passengers) cout<<i<<\" \";\n        //  cout<<endl;\n        int bus=0;\n        int ans=0;\n        while(bus<buses.size()){\n            vector<int> vec;\n           \n            while(pq.size()&&pq.top()<=buses[bus]&&vec.size()<capacity){\n                vec.push_back(pq.top());\n                pq.pop();\n            } \n            \n            if(vec.size()){\n                if(!st.count(vec[0]-1))\n                    ans=vec[0]-1;\n                for(int i=1;i<vec.size();i++){\n                    if(vec[i]-vec[i-1]>1&&!st.count(vec[i]-1)) ans=vec[i]-1; \n                }\n                if(vec[vec.size()-1]<buses[bus]&&vec.size()<capacity){\n                    if(!st.count(buses[bus]))\n                        ans=buses[bus];\n                }\n            }else if(!st.count(buses[bus])) ans=buses[bus];\n            // cout<<ans<<\" \"<<bus<<endl;\n            \n            \n            bus++;\n        }\n            \n        \n            return ans;\n    }\n};"}