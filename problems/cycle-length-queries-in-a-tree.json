{"problemName":"cycle-length-queries-in-a-tree","language":"cpp","code":"class Solution {\npublic:\n//     void helper(int &n,unordered_map<int,int> &umap,int val,int curr){\n//         if(curr>(pow(2,n)-1)) return;\n        \n//         umap[curr]=val;\n//         helper(n,umap,val+1,2*curr);\n//         helper(n,umap,val+1,2*curr+1);\n//     }\n    vector<int> cycleLengthQueries(int n, vector<vector<int>>& q) {\n        \n        \n        \n        vector<int> ans;\n        \n        for(auto i:q){\n            bool isvalid=1;\n            int val;\n            unordered_map<int,int>umap;\n            int a=i[0],b=i[1];\n            int step1=0;\n            while(a!=1){\n                umap[a]=step1+1;\n                step1++;\n                a/=2;\n            }\n            int step2=0;\n            while(b!=1){\n                if(umap.count(b)){\n                    step2=step2+umap[b];\n                    ans.push_back(step2);\n                    isvalid=0;\n                    break;\n                }\n                b/=2;\n                step2++;\n            }\n            if(isvalid){\n                ans.push_back(step1+step2+1);\n            }\n        }\n        return ans;\n    }\n};"}