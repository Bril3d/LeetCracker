{"problemName":"minimum-number-of-swaps-to-make-the-binary-string-alternating","language":"cpp","code":"class Solution {\npublic:\n    int minSwaps(string s) {\n        int n = s.size();\n        string temp1, temp2;\n        int a, b;\n        a = b = 0;\n        for(auto i : s) {\n            a += (i == '1');\n            b += (i == '0');\n        }\n        if(abs(a - b) > 1) {\n            return -1;\n        }\n        for(int i = 0; i < n; i++) {\n            if(i & 1) {\n                temp1.push_back('0');\n            }\n            else {\n                temp1.push_back('1');\n            }\n        }\n         for(int i = 0; i < n; i++) {\n            if(i & 1) {\n                temp2.push_back('1');\n            }\n            else {\n                temp2.push_back('0');\n            }\n        }\n        \n        \n        int ans = INT_MAX;\n     int cnt1 = 0;\n        for(int i = 0; i < n; i++) {\n            if(s[i]  != temp1[i]) {\n                cnt1++;\n            }\n        }\n        \n        if(cnt1 % 2 == 0) {\n            ans = min(ans, cnt1 / 2);\n        }\n        cnt1 = 0;\n        for(int i = 0; i < n; i++) {\n            if(s[i]  != temp2[i]) {\n                cnt1++;\n            }\n        }\n        \n        if(cnt1 % 2 == 0) {\n            ans = min(ans, cnt1 / 2);\n        }\n        \n        return (ans == INT_MAX ? -1 : ans);\n    }\n};"}