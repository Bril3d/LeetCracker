{"problemName":"number-of-squareful-arrays","language":"cpp","code":"class Solution {\npublic:\n    int ans = 0;\n    \n    void solve(vector<int> nums, int start) {\n        //base case\n        \n        if(start > 1) {\n            //check \n            int sum = nums[start-1] + nums[start-2];\n            int y = sqrt(sum);\n            \n            if(y*y != sum) return;\n        }\n        if(start == nums.size()) {\n            ans++;\n            return;\n        }\n        //recursive case\n        \n        for(int end = start; end < nums.size();end++) {\n            if(end == start || nums[end] != nums[start]) {\n                swap(nums[start], nums[end]);\n                solve(nums, start+1);\n                // swap(nums[start], nums[end]);\n            }\n        }\n\n    }\n    int numSquarefulPerms(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        solve(nums, 0);\n        return ans;\n    }\n};"}