{"problemName":"univalued-binary-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isUnivalTree(TreeNode* root) {\n       int val = root->val;\n        stack<TreeNode*> st;\n        st.push(root);\n        \n        while(!st.empty()){\n            root = st.top();\n            st.pop();\n            if(root->val != val) return false;\n            if(root->right) st.push(root->right);\n            if(root->left) st.push(root->left);\n        }\n        return true;\n    }\n};"}