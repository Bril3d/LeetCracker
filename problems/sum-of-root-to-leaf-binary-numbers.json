{"problemName":"sum-of-root-to-leaf-binary-numbers","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\nlong sum = 0;\n\nvoid solve(TreeNode* root,long val){\n    if(root==NULL){\n        return;\n    }\n    if(root->left==NULL && root->right==NULL){\n        sum+=(val*2+root->val);\n        return;\n    }\n    solve(root->left,val*2+root->val);\n    solve(root->right,val*2+root->val);\n\n}\n    int sumRootToLeaf(TreeNode* root) {\n        solve(root,0);\n        return sum;\n    }\n};"}