{"problemName":"shortest-subarray-with-sum-at-least-k","language":"cpp","code":"class Solution {\npublic:\n    int shortestSubarray(vector<int>& nums1, int k) {\n        int n = nums1.size();\n        vector<long long> nums(n, 0);\n        if(n == 1) {\n            if(nums1[0] >= k) {\n                \n                return n;\n            }\n            return -1;\n        }\n        int ans = n + 1;\n    nums[0] = nums1[0];\n        for(int i = 1; i <  n; i++) {\n            nums[i] = (long) nums[i -1] + (long) nums1[i];\n            if(nums[i] >= k) {\n                ans = min(ans, i + 1);\n            }\n        }\n        \n        \n        deque<int> q;\n        for(int i = 0; i < n; i++) {\n            while(!q.empty() and nums[i] <= nums[q.back()]) {\n                q.pop_back();\n            }\n            \n            while(!q.empty() and nums[i] >= nums[q.front()]+ k) {\n                ans = min(ans, i - q.front());\n                q.pop_front();\n            }\n            q.push_back(i);\n        }\n        return (ans >= n + 1) ? -1 : ans;\n    }\n};"}