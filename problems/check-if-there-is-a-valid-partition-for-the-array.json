{"problemName":"check-if-there-is-a-valid-partition-for-the-array","language":"cpp","code":"class Solution {\npublic:\n\n    int dp[100005];\n    int find(vector<int> &nums, int i) {\n        if(i >= nums.size()) {\n            return 1;\n        }\n        bool ans = 0;\n        if(dp[i] != -1) return dp[i];\n        if(i + 1 < nums.size()) {\n            if(nums[i] == nums[i + 1]) {\n                ans |= find(nums, i + 2);\n            }\n        }\n        if(i + 2 < nums.size()) {\n            if(nums[i] == nums[i + 1] and nums[i] == nums[i + 2]) {\n                ans |= find(nums, i + 3);\n            }\n            if(nums[i + 1] - nums[i] == 1 and nums[i + 2] - nums[i + 1] == 1) {\n                ans |= find(nums, i + 3);\n            }\n        }\n        return dp[i] = ans;\n    }\n    bool validPartition(vector<int>& nums) {\n        memset(dp, -1, sizeof dp);\n        return find(nums, 0);\n    }\n};"}