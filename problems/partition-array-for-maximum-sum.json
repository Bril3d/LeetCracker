{"problemName":"partition-array-for-maximum-sum","language":"cpp","code":"class Solution {\npublic:\n    int dp[10005];\n    int find(vector<int> &arr, int i, int k) {\n        int mx = -1;\n        int ans = 0;\n        if(dp[i] != -1) {\n            return dp[i];\n        }\n        for(int j = i; j < min((int) arr.size(), i + k); j++) {\n            mx = max(mx, arr[j]);\n            ans = max(ans, (j - i + 1) * mx + find(arr, j + 1, k));\n        }\n        \n        return dp[i] =  ans;\n    }\n    int maxSumAfterPartitioning(vector<int>& arr, int k) {\n        memset(dp, -1, sizeof dp);\n        return find(arr, 0, k);\n    }\n};"}