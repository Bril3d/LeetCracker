{"problemName":"robot-collisions","language":"cpp","code":"class Solution {\npublic:\n    vector<int> survivedRobotsHealths(vector<int>& positions, vector<int>& healths, string directions) {\n        int n = positions.size();\n        vector<pair<int, pair<int, int>>> arr;\n        for(int i = 0; i < n; i++){\n            int d = 1;\n            if(directions[i] == 'L')d = -1;\n            arr.push_back({i, {positions[i], healths[i] * d}});\n        }\n        vector<int> h;\n        for(int i = 0; i < n; i++){\n             int d = 1;\n            if(directions[i] == 'L')d = -1;\n            h.push_back(healths[i] * d);\n        }\n        sort(arr.begin(), arr.end(), [&](pair<int, pair<int, int>> &a, pair<int, pair<int, int>> &b){\n           if(a.second.first == b.second.first)\n               return a.first < b.first;\n            return a.second.first <= b.second.first;\n        });\n        \n        // vector<int> h;\n        // for(auto i : arr){\n        //     h.push_back(i.second.second);\n        // }\n        stack<int> s;\n        for(int i = 0; i < n; i++){\n            int ind = arr[i].first;\n            if(h[ind] > 0 || s.empty()){\n                s.push(ind);\n            }else{\n                while(!s.empty() and h[s.top()] > 0 and h[s.top()] < abs(h[ind])){\n                    h[s.top()] = 0;\n                    h[ind]++;\n                    if(h[ind] >= 0)\n                        h[ind] = 0;\n                    s.pop();\n                }\n                if(!s.empty() and h[s.top()] == abs(h[ind])){\n                    h[ind] = -1;\n                    h[s.top()] = -1;\n                    s.pop();\n                }\n                else if(!s.empty() and h[s.top()] > abs(h[ind])){\n                    h[s.top()]--;\n                }\n                else{\n                    if(s.empty() || h[s.top()] < 0){\n                        s.push(ind);\n                    }\n                }\n            }\n        }\n        vector<pair<int, int>> ans;\n        while(!s.empty()){\n            ans.push_back({s.top(), abs(h[s.top()])});\n            s.pop();\n        }\n        sort(ans.begin(), ans.end());\n        vector<int> t;\n        for(auto i : ans){\n            t.push_back(i.second);\n        }\n        \n        return t;\n    }\n};"}