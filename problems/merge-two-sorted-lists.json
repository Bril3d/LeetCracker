{"problemName":"merge-two-sorted-lists","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode* temp1 = list1;\n        ListNode* temp2 = list2;\n        vector<int> arr;\n        while(temp1 != NULL){\n            arr.push_back(temp1->val);\n            temp1= temp1->next;\n        }\n        \n        while(temp2 != NULL){\n            arr.push_back(temp2->val);\n            temp2= temp2->next;\n        }\n        sort(arr.begin(), arr.end());\n        if(arr.size() == 0){\n            return NULL;\n        }\n        \n        ListNode* list3 = new ListNode(arr[0]);\n        ListNode* front = list3;\n        for(int i=1;i<arr.size();i++){\n            ListNode*  node = new ListNode(arr[i]);\n            front->next = node;\n            front = node;\n        }\n        return list3;\n    }\n};"}