{"problemName":"verifying-an-alien-dictionary","language":"cpp","code":"class Solution {\npublic:\n     map<char, int> m;\n    bool compare(string s, string t) {\n        if(s == t) {\n            return true;\n        }\n        int i = 0;\n       for(i = 0; i < min(s.size(), t.size()); i++) {\n           if(m[s[i]] < m[t[i]]) {\n               return true;\n           }\n           else if(m[s[i]] > m[t[i]]) {\n               return false;\n           }\n       }\n       return i == s.size();\n    }\n    bool isAlienSorted(vector<string>& words, string order) {\n       \n        int cnt = 0;\n        for(auto i : order) {\n            m[i] = cnt++;\n        }\n        for(int i  = 1; i < words.size(); i++) {\n            if(!compare(words[i - 1], words[i])) {\n                return false;\n            }\n        }\n        return true;\n\n    }\n};"}