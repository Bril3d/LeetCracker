{"problemName":"palindrome-partitioning-iv","language":"cpp","code":"int dp2[2005][5];\nclass Solution {\npublic:\n   int helper(vector<vector<bool>> &dp, string &s,int ind, int k){\n       if(k < 0)return 0;\n        if(ind == s.length() && k == 0){\n            return 1;\n        }\n        if(dp2[ind][k] != -1)return dp2[ind][k];\n        int ans = 1e9;\n        for(int i = ind; i<s.length();i++){\n            if(dp[ind][i] && helper(dp, s, i + 1, k - 1)){\n                return dp2[ind][k] = 1;\n            }\n        }\n        return dp2[ind][k] = 0;\n    }\n    bool checkPartitioning(string s) {\n        memset(dp2, -1, sizeof(dp2));\n        vector<vector<bool>> dp(s.length(), vector<bool>(s.length(), false));\n        int n = s.length();\n        for(int i  = 0; i < n;i++)dp[i][i] = true;\n        for(int i = 0; i < n - 1;i++)\n            if(s[i] == s[i + 1]) dp[i][i + 1] = true;\n        for(int i = n - 1; i >=0 ; i --){\n            for(int j = i + 2; j < n;j++){\n                if(s[i] == s[j] && dp[i+1][j-1])\n                    dp[i][j] = true;\n            }\n        }\n        return helper(dp, s, 0, 3);\n    }\n};"}