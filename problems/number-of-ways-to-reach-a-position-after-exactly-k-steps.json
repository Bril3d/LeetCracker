{"problemName":"number-of-ways-to-reach-a-position-after-exactly-k-steps","language":"cpp","code":"typedef long long int ll;\nll power(ll a, ll b, ll m)\n{\n    ll res = 1;\n    while (b > 0)\n    {\n        if (b % 2 == 1)\n            res = ((res % m) * (a % m)) % m;\n        b = b >> 1;\n        a = ((a % m) * (a % m)) % m;\n    }\n    return res % m;\n}\nll add(ll a, ll b, ll m)\n{\n    return ((a % m) + (b % m)) % m;\n}\nll sub(ll a, ll b, ll m)\n{\n    return ((a + m) % m + (b + m) % m) % m;\n}\nll mul(ll a, ll b, ll m)\n{\n    return ((a % m) * (b % m)) % m;\n}\nll inv(ll a, ll m)\n{\n    return power(a, m - 2, m);\n}\nclass Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    int numberOfWays(int s, int e, int k) {\n        if(abs(e- s) > k)return 0;\n        if(e < s)swap(s, e);\n        if((k - (e - s))%2)return 0;\n        ll p = (e - s) + (k - (e - s))/2;\n        ll n = (k - (e - s))/2;\n        vector<ll> fact(2005);\n        fact[0] = fact[1] = 1;\n        for(int i = 2; i < 2005; i++){\n            fact[i] = mul(fact[i - 1], i, MOD);\n        }\n        // cout<<p<<\" \"<<n<<endl;\n        ll ans = mul(fact[n + p], mul(inv(fact[n], MOD), inv(fact[p], MOD), MOD), MOD);\n        return ans;\n    }\n};"}