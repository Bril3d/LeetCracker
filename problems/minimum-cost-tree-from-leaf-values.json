{"problemName":"minimum-cost-tree-from-leaf-values","language":"cpp","code":"class Solution {\npublic:\nvector<vector<int>> dp;\nint helper(int i ,int j,vector<int> &arr){\nif(i==j){\n    return 0;\n}\nif(dp[i][j]!=-1){\n    return dp[i][j];\n}\nint ans = INT_MAX;\nfor(int k = i;k<j;k++){\n    int lm  = 0,rm = 0;\n    for(int x = i;x<=k;x++){\n        lm = max(lm,arr[x]);\n    }\n    for(int y = k+1;y<=j;y++){\n        rm = max(rm,arr[y]);\n    }\n    ans = min(ans,helper(i,k,arr)+helper(k+1,j,arr)+(lm*rm));\n}\nreturn dp[i][j]=ans;\n}\n    int mctFromLeafValues(vector<int>& arr) {\n         int n = arr.size();\n             \n                 dp = vector<vector<int>> (n, vector<int>(n , -1));\n                     return helper(0,n-1,arr);\n\n   \n    }\n};"}