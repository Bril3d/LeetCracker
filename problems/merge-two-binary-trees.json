{"problemName":"merge-two-binary-trees","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *mergeTrees(TreeNode *root1, TreeNode *root2)\n    {\n        if (root1 && root2)\n        {\n            root1->val = root1->val + root2->val;\n            root1->left = mergeTrees(root1->left, root2->left);\n            root1->right = mergeTrees(root1->right, root2->right);\n            return root1;\n        }\n        else if (!root1 && root2)\n        {\n            root2->left = mergeTrees(root1, root2->left);\n            root2->right = mergeTrees(root1, root2->right);\n            return root2;\n        }\n        else if (root1 && !root2)\n        {\n            root1->left = mergeTrees(root1->left, root2);\n            root1->right = mergeTrees(root1->right, root2);\n            return root1;\n        }\n        else\n            return NULL;\n    }\n};"}