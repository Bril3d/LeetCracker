{"problemName":"maximum-sum-of-almost-unique-subarray","language":"cpp","code":"class Solution {\npublic:\n    long long maxSum(vector<int>& nums, int m, int k) {\n        map<int, int> mp;\n        int i = 0, j = 0;\n        long long int ans = 0, sum = 0;\n        for(int i = 0; i < nums.size(); i++){\n            if(i < k){\n                sum += nums[i];\n                mp[nums[i]]++;\n            }else{\n                sum += nums[i];\n                mp[nums[i]]++;\n                sum -= nums[i - k];\n                mp[nums[i-k]]--;\n                if(mp[nums[i - k]] == 0){\n                    mp.erase(nums[i - k]);\n                }\n            }\n            if(i - k + 1>= 0){\n                if(mp.size() >= m){\n                    ans = max(ans, sum);\n                }\n            }\n        }\n        return ans;\n    }\n};"}