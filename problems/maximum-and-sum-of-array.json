{"problemName":"maximum-and-sum-of-array","language":"cpp","code":"class Solution {\npublic:\n    map<pair<int,vector<int>>,int> dp;\n    int help(int i,vector<int> &vec,vector<int>& nums,int numSlots){\n        if(i>=nums.size()) return 0;\n        if(dp.count({i,vec})) return dp[{i,vec}];\n        int ans=INT_MIN;\n        for(int ii=1;ii<=numSlots;ii++){\n            if(vec[ii-1]<2){\n                vec[ii-1]++;\n                 ans=max(ans,(nums[i]&ii)+help(i+1,vec,nums,numSlots));\n                vec[ii-1]--;\n            }\n        }\n        return dp[{i,vec}]=ans;\n            \n    }\n    int maximumANDSum(vector<int>& nums, int numSlots) {\n        vector<int> vec(numSlots,0);\n        return help(0,vec,nums,numSlots);\n    }\n};"}