{"problemName":"delete-the-middle-node-of-a-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(head->next==NULL){\n            return NULL;\n        }\n        ListNode *fast=head,*slow=head,*prev=NULL;\n        while(fast!=NULL && fast->next!=NULL){\n            fast=fast->next->next;\n            prev=slow;\n            slow=slow->next;\n        }\n        prev->next=prev->next->next;\n        return head;\n    }\n};"}