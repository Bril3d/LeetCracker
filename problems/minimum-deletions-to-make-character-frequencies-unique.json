{"problemName":"minimum-deletions-to-make-character-frequencies-unique","language":"cpp","code":"class Solution {\npublic:\n    int minDeletions(string s) {\n        sort(s.begin(), s.end());\n        map<int, int> m;\n        int cnt = 1;\n        for(int i = 1; i < s.size(); i++) \n        {\n            if(s[i] == s[i - 1]) {\n                cnt++;\n            }\n            else {\n                m[cnt]++;\n                cnt = 1;\n            }\n        }\n        \n        \n        m[cnt]++;\n        // for(auto i : m) {\n        //     cout << i.first << \" \" << i.second << endl;\n        // }\n        int ans = 0;\n        for(auto i : m) {\n           \n            while(m[i.first] > 1) {\n                int t = i.first;\n                while(t > 0 and m[t] >= 1) {\n                    ans++;\n                    t--;\n                }\n                m[i.first]--;\n                m[t]++;\n            }\n            \n        }\n        return ans;\n    }\n};"}