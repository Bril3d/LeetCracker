{"problemName":"find-the-substring-with-maximum-cost","language":"cpp","code":"class Solution {\npublic:\n    int maximumCostSubstring(string s, string chars, vector<int>& vals) {\n        map<char, int> mp;\n        for(int i = 0; i < chars.length();i++){\n            mp[chars[i]] = vals[i];\n        }\n        int ans= 0;\n        int curr = 0;\n        for(int i = 0; i < s.length();i++){\n            if(mp.find(s[i]) != mp.end()){\n                curr += mp[s[i]];\n            }else{\n                curr += s[i] - 'a' + 1;\n            }\n            if(curr < 0)curr =0;\n            ans = max(ans, curr);\n        }\n        return ans;\n    }\n};"}