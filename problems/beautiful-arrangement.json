{"problemName":"beautiful-arrangement","language":"cpp","code":"class Solution {\npublic:\n    int dp[(1<<16)][16];\n    int count(int n, int j, int mask) {\n        if(j > n) {\n            return 1;\n        }\n        if(dp[mask][j] != -1) {\n            return dp[mask][j];\n        }\n        int ans = 0;\n        for(int i = 1; i <= n; i++) {\n            if((i%j == 0 || j%i == 0) and !(mask & (1<<i))) {\n                mask |= (1<<i);\n                ans += count(n, j + 1, mask);\n                mask ^= (1<<i);\n            }\n            \n        }\n        return dp[mask][j] =  ans;\n    }\n    int countArrangement(int n) {\n        memset(dp, -1, sizeof dp);\n        return count(n, 1, 0);\n    }\n};"}