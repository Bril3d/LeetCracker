{"problemName":"sum-of-imbalance-numbers-of-all-subarrays","language":"cpp","code":"class Solution {\npublic:\n    int sumImbalanceNumbers(vector<int>& nums) {\n        int n = nums.size();\n        int ans = 0;\n        for(int i = 0; i < n; i++){\n            multiset<int> mst;\n            int cnt = 0;\n            mst.insert(nums[i]);\n            for(int j = i + 1; j < n; j++){\n                auto right = mst.lower_bound(nums[j]);\n                auto left = right;\n                left--;\n                if(right != mst.end() && right != mst.begin() && *right - *left > 1){\n                    cnt--;\n                }\n                if(right != mst.begin() && nums[j] - *left > 1){\n                    cnt++;\n                }\n                if(right != mst.end() && *right - nums[j] > 1){\n                    cnt++;\n                }\n                ans += cnt;\n                mst.insert(nums[j]);\n            }\n        }\n        return ans;\n    }\n};"}