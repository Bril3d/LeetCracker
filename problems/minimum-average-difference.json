{"problemName":"minimum-average-difference","language":"cpp","code":"class Solution {\npublic:\n    long long minimumAverageDifference(vector<int>& nums) {\n        vector<long long> prefix(nums.begin(), nums.end());\n        vector<long long> suffix(nums.begin(), nums.end());\n        for(long long i = 1; i < nums.size(); i++) {\n            prefix[i] += prefix[i - 1];\n        }\n        long long n = nums.size();\n        for(long long i = nums.size() - 2; i >= 0; i--) {\n            suffix[i] += suffix[i + 1];\n        }\n        \n        long long diff = INT_MAX;\n        long long index = nums.size();\n        \n        for(long long i = 0; i <  n; i++) {\n            long long l = prefix[i];\n            long long r = (i + 1 < nums.size() ? suffix[i + 1] : 0);\n            l /= (i + 1);\n            if(n - 1 - i > 0) {\n                r /= (n - 1 - i);\n            }\n            if(diff > abs(l - r)) {\n                index = i;\n                diff = abs(l - r);\n            }\n            \n            \n        }\n        return index;\n\n    }\n};"}