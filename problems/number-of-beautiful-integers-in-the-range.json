{"problemName":"number-of-beautiful-integers-in-the-range","language":"cpp","code":"int dp[10][2][21][10][10][2];\nclass Solution {\npublic:\n    int helper(string &s, int &k, int ind, bool tight, int mod, int even, int odd, bool zero)\n    {\n        if (ind == s.length())\n            return (even == odd && mod == 0);\n\n        if (dp[ind][tight][mod][even][odd][zero] != -1)\n            return dp[ind][tight][mod][even][odd][zero];\n        int dig = tight ? s[ind] - '0' : 9;\n        int ans = 0;\n        for (int i = 0; i <= dig; i++)\n        {\n            if (zero)\n            {\n            if (i == 0)\n            {\n                ans += helper(s, k, ind + 1, (tight && (i == dig)), (mod * 10 + i) % k, even, odd, true);\n            }\n            else\n            {\n                if (i % 2 == 0)\n                ans += helper(s, k, ind + 1, (tight && (i == dig)), (mod * 10 + i) % k, even + 1, odd, false);\n                else\n                ans += helper(s, k, ind + 1, (tight && (i == dig)), (mod * 10 + i) % k, even, odd + 1, false);\n            }\n            }\n            else\n            {\n            if (i % 2 == 0)\n                ans += helper(s, k, ind + 1, (tight && (i == dig)), (mod * 10 + i) % k, even + 1, odd, false);\n            else\n                ans += helper(s, k, ind + 1, (tight && (i == dig)), (mod * 10 + i) % k, even, odd + 1, false);\n            }\n        }\n        return dp[ind][tight][mod][even][odd][zero] = ans;\n    }\n    int numberOfBeautifulIntegers(int a, int b, int k) {\n        string A = to_string(a - 1);\n        string B = to_string(b);\n        memset(dp, -1, sizeof dp);\n        int ans1 = helper(A, k, 0, true, 0, 0, 0, true);\n        memset(dp, -1, sizeof dp);\n        int ans2 = helper(B, k, 0, true, 0, 0, 0, true);\n        return ans2 - ans1;\n    }\n};"}