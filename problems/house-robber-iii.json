{"problemName":"house-robber-iii","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\nint helper(map<TreeNode*,int> &mp,TreeNode* root){\n    if(!root){\n        return 0;\n    }\n    int ans = root->val;\n    if(mp.find(root)!=mp.end()){\n        return mp[root];\n    }\n    if(root->left){\n        ans+= helper(mp,root->left->left)+helper(mp,root->left->right);\n    }\n    if(root->right){\n        ans+=helper(mp,root->right->right)+helper(mp,root->right->left);\n    }\n    return mp[root]=max(ans,helper(mp,root->left)+helper(mp,root->right));\n}\n    int rob(TreeNode* root) {\n        map<TreeNode*,int> mp;\n        return helper(mp,root);\n        \n    }\n};"}