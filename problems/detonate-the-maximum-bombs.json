{"problemName":"detonate-the-maximum-bombs","language":"cpp","code":"class Solution {\npublic:\n    int dfs(vector<vector<int>> &adj, vector<int> &vis, int curr){\n        vis[curr] = 1;\n        int ans = 0;\n        for(auto i : adj[curr]){\n            if(!vis[i]){\n                ans += dfs(adj, vis, i);\n            }\n        }\n        return ans + 1;\n    }\n    int maximumDetonation(vector<vector<int>>& bombs) {\n        int n = bombs.size();\n        vector<vector<int>> adj(n);\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < n; j ++){\n                if(i == j)continue;\n                long long x = (bombs[i][0] - bombs[j][0]);\n                long long y = (bombs[i][1] - bombs[j][1]);\n                double dist = sqrt(x * x + y * y);\n                if(dist <= bombs[i][2]){\n                    adj[i].push_back(j);\n                }\n            }\n        }\n        int _max = 0;\n        for(int i = 0; i < n; i ++){\n            vector<int> vis(n, 0);\n            _max = max(_max, dfs(adj, vis, i));\n        }\n        return _max;\n    }\n};"}