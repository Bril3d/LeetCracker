{"problemName":"number-of-digit-one","language":"cpp","code":"int dp[11][11][2];\nclass Solution {\npublic:\n    int helper(string &s, string num, int ind, int sum, bool fixed)\n    {\n        if (ind == s.length())\n            return sum;\n        if(dp[ind][sum][fixed] != -1)return dp[ind][sum][fixed];\n        int ans = 0;\n        int x = fixed ? (s[ind] - '0') : 9;\n        for (int i = 0; i <= x; i++)\n        {\n            int temp = 0;\n            if (i == 1)\n                ans += helper(s, num + to_string(i), ind + 1, sum + 1, (fixed && (i == x)));\n            else\n                ans += helper(s, num + to_string(i), ind + 1, sum, (fixed && (i == x)));\n        }\n        return dp[ind][sum][fixed] =ans;\n    }\n    int countDigitOne(int n)\n    {\n        memset(dp, -1, sizeof dp);\n        string s = to_string(n);\n        return helper(s, \"\", 0, 0, true);\n    }\n};"}