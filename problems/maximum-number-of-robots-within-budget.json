{"problemName":"maximum-number-of-robots-within-budget","language":"cpp","code":"class Solution {\npublic:\n    int maximumRobots(vector<int>& chargeTimes, vector<int>& runningCosts, long long budget) {\n        int i = 0, j = 0;\n        multiset<long long> mst;\n        long long sum = 0;\n        mst.insert(0);\n        int ans = 0;\n        while(j < chargeTimes.size()){\n            long long cost = (j - i + 1) * (sum + runningCosts[j]) + max(*mst.rbegin(), 1LL * chargeTimes[j]);\n            if(cost <= budget){\n                sum += runningCosts[j];\n                mst.insert(chargeTimes[j]);\n                j++;\n            }\n            else{\n                if(i == j){\n                    i++;\n                    j++;\n                }else{\n                    sum -= runningCosts[i];\n                    mst.erase(mst.find(chargeTimes[i]));\n                    i++;\n                }\n            }\n            ans = max(ans, j - i);\n            // cout<<i<<\" \"<<j<<\" \"<<sum<<\" \"<<*mst.rbegin()<<\" \"<<cost<<endl;\n        }\n        return ans;\n    }\n};"}