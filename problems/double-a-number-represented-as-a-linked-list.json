{"problemName":"double-a-number-represented-as-a-linked-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* doubleIt(ListNode* head) {\n        vector<int> ans;\n        ListNode *temp = head;\n        while(temp != NULL){\n            ans.push_back(temp->val);\n            temp = temp->next;\n        }\n        reverse(ans.begin(), ans.end());\n        int carry = 0;\n        for(int i = 0; i < ans.size(); i++){\n            ans[i] = 2 * ans[i] + carry;\n            carry = ans[i]/10;\n            ans[i] %= 10;\n        }\n        if(carry != 0)ans.push_back(carry);\n        reverse(ans.begin(), ans.end());\n        \n        ListNode *head2 = new ListNode(ans[0]);\n        temp = head2;\n        for(int i = 1; i < ans.size(); i++){\n            temp->next = new ListNode(ans[i]);\n            temp = temp->next;\n        }\n        return head2;\n    }\n};"}