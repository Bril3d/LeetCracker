{"problemName":"reorder-list","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode * insertAtEnd(ListNode *head,ListNode *temp){\n        temp->next = NULL;\n        if(head == NULL)\n            return temp;\n        ListNode *t = head;\n        while(t->next != NULL){\n            t=t->next;\n        }\n        t->next = temp;\n        return head;\n    }\n    void reorderList(ListNode* head) {\n       vector<ListNode *> arr;\n        ListNode *temp = head;\n        while(temp != NULL){\n            arr.push_back(temp);\n            temp = temp->next;\n        }\n        ListNode *temp2 = NULL;\n        int i = 0, j = arr.size()-1;\n        while(i<=j){\n            temp2 = insertAtEnd(temp2, arr[i]);\n            if(i != j)\n                temp2 = insertAtEnd(temp2, arr[arr.size() - i - 1]);\n            i++;\n            j--;\n        }\n        head = temp2;      \n    }\n};"}