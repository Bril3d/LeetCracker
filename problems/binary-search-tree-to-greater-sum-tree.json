{"problemName":"binary-search-tree-to-greater-sum-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int sum = 0;\n    void dfs(TreeNode * root) {\n        if(!root) {\n            return;\n        }\n         dfs(root->right);\n        sum += root->val;\n        root->val  = sum;\n        dfs(root->left);\n    }\n    TreeNode* bstToGst(TreeNode* root) {\n        dfs(root);\n        return root;\n    }\n};"}