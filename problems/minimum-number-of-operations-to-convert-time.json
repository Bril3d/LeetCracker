{"problemName":"minimum-number-of-operations-to-convert-time","language":"cpp","code":"class Solution {\npublic:\n    int convertTime(string current, string correct) {\n        int hours = 0;\n        \n        hours = (current[0] - '0') * 10 + (current[1] - '0');\n        int act = (correct[0] - '0') * 10 + (correct[1] - '0');\n        int ans = 0;\n        // if(act > hours)\n         ans = act - hours - 1;\n        int min = (current[3] - '0') * 10 + (current[4] - '0');\n        int act_min = (correct[3] - '0') * 10 + (correct[4] - '0');\n        \n        if(act_min >= min) {\n            ans++;\n            cout << ans << endl;\n            int t = act_min  - min;\n            cout << t << endl;\n            if(t > 0) {\n                ans += t/60;\n               t -= 60 * (t/60);\n            }\n            if(t > 0) {\n                ans += t/15;\n                t -= 15 * (t/15);\n            }\n            cout << ans << endl;\n            if(t > 0) {\n                ans += t/5;\n                t -= 5 * (t/5);\n            }\n            if(t > 0) {\n                ans += t;\n            }\n        }\n        else if(act_min < min) {\n           int t = 60 + act_min - min;\n            if(t >0) {\n                ans += t/60;\n               t -= 60 * (t/60);\n            }\n            if(t > 0) {\n                ans += t/15;\n                t -= 15 * (t/15);\n            }\n            if(t > 0) {\n                ans += t/5;\n                t -= 5 * (t/5);\n            }\n            if(t > 0) {\n                ans += t;\n            }\n        }\n        return max(0, ans);\n        \n    }\n};"}