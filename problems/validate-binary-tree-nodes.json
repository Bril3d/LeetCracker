{"problemName":"validate-binary-tree-nodes","language":"cpp","code":"class Solution {\npublic:\n    \n    int cnt(vector<int> &l, vector<int> &r, int root) {\n        if(root == -1) {\n            return 0;\n        }\n        return 1 + cnt(l, r, l[root]) + cnt(l, r, r[root]);\n        \n    }\n    bool validateBinaryTreeNodes(int n, vector<int>& l, vector<int>& r) {\n        vector<int> in_deg(n, 0);\n        for(int i = 0; i < l.size(); i++) {\n            if(l[i] != -1) {\n                in_deg[l[i]]++;\n                if(in_deg[l[i]] > 1) {\n                    return false;\n                }\n                \n            }\n            \n            if(r[i] != -1) {\n                in_deg[r[i]]++;\n                if(in_deg[r[i]] > 1) {\n                    return false;\n                }\n            }\n        }\n        int root = -1;\n        for(int i = 0; i < n; i++) {\n            if(in_deg[i] == 0) {\n                if(root != -1) {\n                    return false;\n                }\n                else {\n                    root = i;\n                }\n            }\n        }\n        if(root == -1) {\n            return false;\n        }\n        return cnt(l, r, root) == n;\n    }\n};"}