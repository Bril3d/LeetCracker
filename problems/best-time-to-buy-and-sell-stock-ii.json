{"problemName":"best-time-to-buy-and-sell-stock-ii","language":"cpp","code":"class Solution {\npublic:\nint dp[30001][2];\n    int helper(vector<int> &arr, int ind, bool canBuy){\n        if(ind == arr.size()){\n            return 0;\n        }\n        if(dp[ind][canBuy] != -1){\n            return dp[ind][canBuy];\n        }\n        if(canBuy){\n            int buy = helper(arr, ind + 1, false) - arr[ind];\n            int notBuy = helper(arr, ind + 1, true);\n            return dp[ind][canBuy]= max(buy, notBuy);\n        }else{\n            int sell = helper(arr, ind + 1, true) + arr[ind];\n            int notSell = helper(arr, ind + 1, false);\n            return dp[ind][canBuy] = max(sell, notSell);\n        }\n    }\n    int maxProfit(vector<int>& prices) {\n        memset(dp, -1, sizeof dp);\n        return helper(prices, 0, true);\n    }\n};"}