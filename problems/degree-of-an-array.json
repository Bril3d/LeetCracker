{"problemName":"degree-of-an-array","language":"cpp","code":"class Solution {\npublic:\n    int findShortestSubArray(vector<int>& nums) {\n        map<int, vector<int>> m;\n        for(int i = 0; i <nums.size();i++){\n            m[nums[i]].push_back(i);\n        }   \n        int _max = 0;\n        for(auto i : m)_max = max(_max, (int)i.second.size());\n        vector<pair<int, int>> arr;\n        int ans = 1e9;\n        for(auto i : m)if(i.second.size() == _max)ans = min(ans, i.second[(int)i.second.size() - 1] - i.second[0] + 1);\n        return ans;\n    }\n};"}