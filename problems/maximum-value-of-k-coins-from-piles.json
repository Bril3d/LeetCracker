{"problemName":"maximum-value-of-k-coins-from-piles","language":"cpp","code":"class Solution {\npublic:\n    int helper(vector<vector<int>> &piles, int ind, int k, vector<vector<int>> &dp){\n        if(k < 0)return -1e9;\n        if(ind == piles.size()){\n            if(k == 0)return 0;\n            return -1e9;\n        }\n        if(dp[ind][k] != -1)return dp[ind][k];\n        int ans = 0;\n        ans = max(ans, helper(piles, ind + 1, k, dp));\n        int s = 0;\n        for(int i = 1; i <= min(k, (int)piles[ind].size());i ++){\n            s += piles[ind][i - 1];\n            ans = max(ans, s + helper(piles, ind + 1, k - i, dp));\n        }\n        return dp[ind][k] = ans;\n    }\n    int maxValueOfCoins(vector<vector<int>>& piles, int k) {\n        vector<vector<int>> dp(piles.size() + 1, vector<int>(k + 1, -1));\n        return helper(piles, 0, k, dp);\n    }\n};"}