{"problemName":"longest-palindrome-by-concatenating-two-letter-words","language":"cpp","code":"class Solution {\npublic:\n    int longestPalindrome(vector<string>& words) {\n        map<string, int> mp;\n        int ans = 0;\n        int c1 = 0, c2 = 0, c3 = 0;\n        for(auto i : words)mp[i]++;\n        for(auto &i : mp){\n            string r = i.first;\n            swap(r[0], r[1]);\n            if(i.first[0] == i.first[1]){\n                c1 += i.second - i.second%2;\n                if(i.second&1)c3++;\n            }else{\n                int _min = min(i.second, mp[r]);\n                c2 += 2 *  _min;\n                i.second -= _min;\n                mp[r] -= _min;\n            }\n        }\n        // cout<<c1<<\" \"<<c2<<\" \"<<c3<<endl;\n        return (c2 + c1 + min(c3, 1)) * 2LL;\n    }\n};"}