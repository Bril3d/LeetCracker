{"problemName":"count-unreachable-pairs-of-nodes-in-an-undirected-graph","language":"cpp","code":"class Solution {\npublic:\n\n    long long dfs(vector<vector<int>> &adj, vector<int> &vis, int curr){\n        vis[curr] = 1;\n        long long ans = 0;\n        for(auto i : adj[curr]){\n            if(!vis[i]){\n                ans += dfs(adj, vis, i);\n            }\n        }\n        return ans + 1;\n    }\n    long long countPairs(int n, vector<vector<int>>& edges) {\n        vector<vector<int>> adj(n + 1);\n        for(auto i : edges){\n            adj[i[0]].push_back(i[1]);\n            adj[i[1]].push_back(i[0]);\n        }\n        vector<long long> arr;\n        vector<int> vis(n + 1, 0);\n        for(int i = 0; i < n;i++){\n            if(!vis[i])\n                arr.push_back(dfs(adj, vis, i));\n        }\n        sort(arr.begin(), arr.end());\n        vector<long long> pre = arr;\n        for(int i = pre.size() - 2;i>=0;i--){\n            pre[i] += pre[i + 1];\n        }\n        long long ans = 0;\n        for(int i = 0; i < arr.size() - 1;i++){\n            ans += arr[i] * (pre[i + 1]);\n        }\n        return ans;\n    }\n};"}