{"problemName":"cherry-pickup-ii","language":"cpp","code":"class Solution {\npublic:\n    int dp[75][75][75];\n    vector<int> cords = {-1, 0, 1};\n    int helper(vector<vector<int>> &grid, int ind, int j, int k){\n        if(ind == grid.size()){\n            return 0;\n        }\n        if(j < 0 || j >= grid[0].size() || k < 0 || k >= grid[0].size()){\n            return -1e8;\n        }\n        if(dp[ind][j][k] != -1)return dp[ind][j][k];\n        int ans = 0;\n        for(int x = 0; x < 3; x ++){\n            for(int y = 0; y < 3; y++){\n                ans = max(ans, helper(grid, ind + 1, j + cords[x], k + cords[y]));\n            }\n        }\n        if(j == k){\n            ans += grid[ind][j];\n        }else{\n            ans += grid[ind][j] + grid[ind][k];\n        }\n        return dp[ind][j][k] = ans;        \n    }\n    int cherryPickup(vector<vector<int>>& grid) {\n        memset(dp, - 1, sizeof(dp));\n        return helper(grid, 0, 0, grid[0].size() - 1);\n    }\n};"}