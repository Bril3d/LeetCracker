{"problemName":"wiggle-subsequence","language":"cpp","code":"class Solution {\npublic:\n    int wiggleMaxLength(vector<int>& nums) {\n        \n        int n = nums.size();\n        int dp[n + 1][2];\n        \n        dp[0][0] = 1;\n        dp[0][1] = 1;\n        \n        for(int i = 1; i <  n; i++) {\n            if(nums[i] > nums[i - 1]) {\n                dp[i][1] = dp[i -1][0]+ 1;\n                dp[i][0] = dp[i - 1][0];\n            }\n            else if(nums[i] < nums[i - 1]) {\n                dp[i][1] = dp[i - 1][1];\n                dp[i][0] = dp[i - 1][1] + 1; \n            }\n            else {\n                dp[i][0] = dp[i -1][0];\n                dp[i][1] = dp[i -1][1];\n            }\n        }\n        int ans = 0;\n        for(int i = 0; i< n; i++) {\n            ans = max({ans, dp[i][0], dp[i][1]});\n        }\n        return ans;\n    }\n};"}