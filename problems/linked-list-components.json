{"problemName":"linked-list-components","language":"cpp","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int numComponents(ListNode* head, vector<int>& nums) {\n        map<int, int > m;\n        while(head->next) {\n            m[head->val] = head->next->val;\n            head  = head->next;\n        }\n        m[head->val] = -1;\n        \n        for(auto i : m) {\n            cout<<i.first<<' '<<i.second<<endl;\n        }\n        \n        int cnt = nums.size();\n        for(auto i : nums) {\n            int y = m[i];\n            cout<<y<<endl;\n            for(int j = 0; j<nums.size();j++) {\n                if(nums[j] == y) {\n                    cnt--;\n                    break;\n                }\n                \n              \n            }\n              // cout<<cnt<<endl;\n           \n        }\n        return cnt;\n        \n    }\n};"}