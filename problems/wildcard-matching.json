{"problemName":"wildcard-matching","language":"cpp","code":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int n = p.length(), m = s.length();\n        bool dp[n+1][m + 1];\n        memset(dp, false, sizeof(dp));\n        dp[0][0] = true;\n        for(int i = 1; i <=m;i++){\n            dp[0][i] = false;\n        }\n        for(int i = 1; i <= n;i++){\n            if(p[i - 1] == '*'){\n                dp[i][0] = true;\n            }else{\n                break;\n            }\n        }\n        for(int i = 1;i <=n;i++){\n            for(int j = 1;j<=m;j++){\n                if(p[i - 1] == s[j - 1] || p[i - 1] == '?'){\n                    dp[i][j] = dp[i-1][j-1];\n                }else if(p[i - 1] == '*'){\n                    dp[i][j] = (dp[i-1][j] || dp[i][j-1]);\n                }else{\n                    dp[i][j] = false;\n                }\n            }\n        }\n        return dp[n][m];\n        \n    }\n};"}