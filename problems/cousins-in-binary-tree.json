{"problemName":"cousins-in-binary-tree","language":"cpp","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        if(root == NULL) return false;\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int n = q.size();\n            bool b1 = false, b2 = false;\n            for(int i = 0;i<n;i++){\n                TreeNode *front = q.front();\n                q.pop();\n                if(front->left)\n                    q.push(front->left);\n                if(front->right)\n                    q.push(front->right);\n                if(front->left && front->right){\n                    if(front->left->val == x && front->right->val == y) return false;\n                    if(front->left->val == y && front->right->val == x) return false;\n                }\n                if(front->val == x)b1 = true;\n                if(front->val == y)b2 = true;\n                if(b1 && b2)return true;\n            }\n        }\n        return false;\n    }\n};"}