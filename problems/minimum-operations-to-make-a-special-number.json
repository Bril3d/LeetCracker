{"problemName":"minimum-operations-to-make-a-special-number","language":"cpp","code":"int dp[105][30];\nclass Solution {\npublic:\n    int helper(string &s, int ind, int m){\n        if(ind == s.length()){\n            if(m == 0)return 0;\n            return 1e3;\n        }\n        if(dp[ind][m] != -1)return dp[ind][m];\n        int tk = helper(s, ind + 1, (m*10 + (s[ind] - '0'))%25);\n        int nt = 1 + helper(s, ind + 1, m);\n        return dp[ind][m] = min(tk, nt);\n    }\n    int minimumOperations(string num) {\n        memset(dp, -1, sizeof dp);\n        return helper(num, 0, 0);\n    }\n};"}