{"problemName":"partition-string-into-minimum-beautiful-substrings","language":"cpp","code":"typedef long long int ll;\nclass Solution {\npublic:\n    map<int, int> mp;\n    ll helper(string &s, ll ind)\n    {\n        if (ind == s.length())\n            return 0;\n        if (s[ind] == '0')\n            return 1e9;\n        ll curr = 0, ans = 1e9;\n        for (ll i = ind; i < s.length(); i++)\n        {\n            curr *= 2;\n            curr += s[i] - '0';\n            if(mp[curr] > 0)\n                ans = min(ans, 1 + helper(s, i + 1));\n        }\n        return ans;\n    }\n    int minimumBeautifulSubstrings(string s)\n    {\n        int pow = 1;\n        while(pow <= (1<<17)){\n            mp[pow]++;\n            pow *= 5;\n        }\n        ll ans = helper(s, 0);\n        if (ans >= 1e9)\n            return -1;\n        return ans;\n    }\n};"}