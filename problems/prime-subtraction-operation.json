{"problemName":"prime-subtraction-operation","language":"cpp","code":"class Solution {\npublic:\n    bool primeSubOperation(vector<int>& nums) {\n        vector<int> prime;\n        for(int i = 2; i <= 1000;i++){\n            int f = 1;\n            for(int j = 2; j<=sqrt(i);j++){\n                if(i%j == 0){\n                    f = 0;\n                    break;\n                }\n            }\n            if(f)prime.push_back(i);\n        }\n        int prev = 0;\n        for(int i = 0; i < nums.size();i++){\n            int ind = lower_bound(prime.begin(), prime.end(), nums[i] - prev) -prime.begin();\n            ind -- ;\n            if(ind == -1){\n                if(nums[i] <= prev)\n                    return false;\n            }else{\n                nums[i] -= prime[ind];\n                // cout<<prime[ind]<<\" \";\n            }\n            prev = nums[i];\n        }\n        return true;\n    }\n};"}