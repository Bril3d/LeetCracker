{"problemName":"maximum-number-of-fish-in-a-grid","language":"cpp","code":"class Solution {\npublic:\n    vector<int> d4 = {-1, 0, 1, 0, -1};\n    int m, n;\n    long helper(vector<vector<int>>& grid, vector<vector<int>>& vis, int x, int y){\n        int ans = 0;\n        vis[x][y] = 1;\n        for(int i = 0; i < 4; i++){\n            int _x = x + d4[i], _y = y + d4[i + 1];\n            if(_x >=0 && _x < n && _y >=0 && _y < m && !vis[_x][_y] && grid[_x][_y] > 0){\n                ans += helper(grid, vis, _x, _y);\n            }\n        }\n        return ans + grid[x][y];\n    }\n    int findMaxFish(vector<vector<int>>& grid) {\n        n = grid.size();\n        m = grid[0].size();\n        long ans = 0;\n        vector<vector<int>> vis(n, vector<int>(m, 0));\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m;j++){\n                if(!vis[i][j] && grid[i][j] > 0){\n                    ans = max(ans, helper(grid, vis, i, j));\n                }\n            }\n        }\n        return ans;\n    }\n};"}