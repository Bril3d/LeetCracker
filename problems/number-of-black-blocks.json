{"problemName":"number-of-black-blocks","language":"cpp","code":"class Solution {\npublic:\n    int m, n;\n    bool check(int x, int y){\n        if(x < 0 || y < 0 || x >= m || y>= n)return false;\n        return true;\n    }\n    vector<long long> countBlackBlocks(int _m, int _n, vector<vector<int>> &arr)\n    {\n        m = _m;\n        n = _n;\n        map<pair<int, int>, int> mp;\n        for (auto i : arr)\n        {\n            mp[{i[0], i[1]}]++;\n        }\n        vector<long long> ans(5, 0);\n        for (auto i : mp)\n        {\n            int x = i.first.first;\n            int y = i.first.second;\n            if (check(x, y + 1) && check(x + 1, y + 1) && check(x + 1, y))\n            {\n                ans[1 + (mp.count({x, y + 1}) > 0) + (mp.count({x + 1, y + 1}) > 0) + (mp.count({x + 1, y}) > 0)]++;\n            }\n            if (check(x - 1, y) && check(x - 1, y + 1) && check(x, y + 1))\n            {\n                ans[1 + (mp.count({x - 1, y}) > 0) + (mp.count({x - 1, y + 1}) > 0) + (mp.count({x, y + 1}) > 0)]++;\n            }\n            if (check(x, y - 1) && check(x - 1, y - 1) && check(x - 1, y))\n            {\n                ans[1 + (mp.count({x, y - 1}) > 0) + (mp.count({x - 1, y - 1}) > 0) + (mp.count({x - 1, y}) > 0)]++;\n            }\n            if (check(x + 1, y) && check(x + 1, y - 1) && check(x, y - 1))\n            {\n                ans[1 + (mp.count({x + 1, y}) > 0) + (mp.count({x + 1, y - 1}) > 0) + (mp.count({x, y - 1}) > 0)]++;\n            }\n        }\n        for (int i = 1; i < 5; i++)\n        {\n            ans[i] /= i;\n        }\n        long long sum = accumulate(ans.begin(), ans.end(), 0LL);\n        ans[0] = 1LL * (n - 1) * (m - 1) - sum;\n        return ans;\n    }\n};"}