{"problemName":"find-the-longest-valid-obstacle-course-at-each-position","language":"cpp","code":"class Solution {\npublic:\n    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {\n        vector<int> lis;\n        for (int i = 0; i < obstacles.size(); ++i) {\n            int x = obstacles[i];\n            if (lis.empty() || lis[lis.size() - 1] <= x) {\n                lis.push_back(x);\n                obstacles[i] = lis.size();\n            } else {\n                int idx = upper_bound(lis.begin(), lis.end(), x) - lis.begin();\n                lis[idx] = x; \n                obstacles[i] = idx + 1;\n            }\n        }\n        return obstacles;\n    }\n};"}